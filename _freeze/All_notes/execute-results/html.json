{
  "hash": "b54b93475933d60507b9c12aabba8bbd",
  "result": {
    "markdown": "---\ntitle: \"All_notes\"\n---\n\n\nThis file [github](https://marcelorosales.github.io/Quarto_website_test01/All_notes.html)\n\n## Relevant files\n\nMac:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMarkdown02.docx <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Markdown02.docx\"  \nResearch_map.docx <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Research_map and guide.docx\"  \nMarkdown01.docx <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Markdown01.docx\"\nNotes <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/\"\nAll_notes_draft.qmd <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/All_notes_draft.qmd\"\nAll_notes.qmd <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/All_notes.qmd\"\nAll.md <- \"/Users/marcelorosales/Box Sync/Github/mkdocs/MBA03/docs/All.md\"\nquarto_All.xlsx <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/quarto_All.xlsx\"\nExcel_best_tricks.xlsx <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Excel best tricks.xlsx\"\n\n#open in mac OS\nsystem(paste(\"open\", shQuote(Markdown02.docx)))\nsystem(paste(\"open\", shQuote(Research_map.docx)))\nsystem(paste(\"open\", shQuote(Notes)))\nsystem(paste(\"open\", shQuote(All_notes_draft.qmd)))\nsystem(paste(\"open\", shQuote(All_notes.qmd)))\nsystem(paste(\"open\", shQuote(All.md)))\nsystem(paste(\"open\", shQuote(quarto_All.xlsx)))\nsystem(paste(\"open\", shQuote(Excel_best_tricks.xlsx)))\n```\n:::\n\n\nWindows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile_path <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Markdown01.docx\"\nshell(paste(\"start\", shQuote(file_path)))\n# or \nsystem(paste(\"start\", shQuote(file_path)))\n```\n:::\n\n\nIt is possible to sync files with in sys with the rsync command (no external apps needed)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/All_notes_draft.qmd\"\ndestination <- \"\"\n\nsystem(paste(\"rsync -avh --progress\", shQuote(source), shQuote(destination)))\n```\n:::\n\n\nsync try \\# 33\n\n\n::: {.cell}\n\n```{.html .cell-code}\n/Users/marcelorosales/Documents/GitHub/Quarto/quarto-trials/quarto_website/qt01.csv\n\n```\n:::\n\n\n**All Notes**\\\ndocx2md_test.docx\\\nDoes Decalcification speed.docx\\\nGeneExpression analysis.docx\\\nR Graph Notes.docx\\\nR Graph Notes.docx\\\nR Markdown notes.docx\\\nR Markdown notes.docx\\\nrmarkdown-brew.docx\\\nrmarkdown-brew.docx\\\nUntitled2.docx\\\nUntitled03.docx\\\nUntitled04.docx\\\nreference-keys.txt\\\nmkdocs.yml\\\ndeforges.pdf\\\nIntroductory R example chapters.pdf\\\nIntroductory R example chapters.pdf rmarkdown-2.0.pdf\\\nrmarkdown-2.0.pdf\\\nrmarkdown-cheatsheet.pdf\\\nrmarkdown-cheatsheet.pdf\\\nteachR.pdf\\\nteachR.pdf\\\nUntitled.pdf\n\n[top](#)\n\n## Files related to markdown. :\n\nSpotlight search: Markdow\n\n**Packages installed in R?**.\n\n[installed_previously.csv](/Users/marcelorosales/Desktop/temp2022027/Box%20Sync/Documents/R/Rmarkdown/installed_previously.csv)\\\ninstalled_Rpackages20201004.csv.\\\ninstalled_Rpackages20201004.csv.\\\ninstalled_Rpackages20210108.csv.\\\ninstalled_Rpackages20210108.csv.\\\noldRpks.csv.\\\noldRpks.csv.\n\n**Notes**\\\ndocx2md_test.docx\\\nDoes Decalcification speed.docx\\\nGeneExpression analysis.docx\\\nR Graph Notes.docx\\\nR Graph Notes.docx\\\nR Markdown notes.docx\\\nR Markdown notes.docx\\\nrmarkdown-brew.docx\\\nrmarkdown-brew.docx\\\nUntitled2.docx\\\nUntitled03.docx\\\nUntitled04.docx\\\nreference-keys.txt\\\nmkdocs.yml\\\ndeforges.pdf\\\nIntroductory R example chapters.pdf\\\nIntroductory R example chapters.pdf rmarkdown-2.0.pdf\\\nrmarkdown-2.0.pdf\\\nrmarkdown-cheatsheet.pdf\\\nrmarkdown-cheatsheet.pdf\\\nteachR.pdf\\\nteachR.pdf\\\nUntitled.pdf\n\n### Tables\n\n|       | VS code |     |     | Rstudio |     |            |     |            |\n|-------|---------|-----|-----|---------|-----|------------|-----|------------|\n| code  | md      | Rmd | qmd | md      | Rmd | Rmd visual | qmd | qmd visual |\n| r     | o       | o   | o   |         |     | o          |     | o          |\n| .r    |         |     |     |         |     |            |     | o          |\n| {r}   |         |     | o   | o       | o   |            | o   |            |\n| {.r}  |         |     | o   | o       |     | o          |     | o          |\n| rev r |         |     |     |         |     | o          |     | o          |\n\nhttps://tableconvert.com/\n\n| **VS code** | \\*\\*\\*\\* | \\*\\*\\*\\* | **Rstudio** | \\*\\*\\*\\* | \\*\\*\\*\\* | \\*\\*\\*\\*   | \\*\\*\\*\\* |\n|-------------|----------|----------|-------------|----------|----------|------------|----------|\n| **code**    | md       | Rmd      | qmd         | md       | Rmd      | Rmd visual | qmd      |\n| **r**       | o        | o        | o           |          |          | o          |          |\n| **.r**      |          |          |             |          |          |            |          |\n| **{r}**     |          |          | o           | o        | o        |            | o        |\n| **{.r}**    |          |          | o           | o        |          | o          |          |\n| **rev r**   |          |          |             |          |          | o          |          |\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nlibrary(readxl)\nhighlight_long <- read_excel(\"~/Box Sync/Niigata Uni Box/Books-Notes/Notes/quarto_All.xlsx\", \n    sheet = \"Sheet2\")\nView(quarto_All)\n\nlibrary(tidyr)\nhighlight_wide <- spread(highlight_long, Soft, file, chunk, color)\n\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n# Create a data frame with the long-form table\ndf <- data.frame(\n  Soft = c(\"VS code\", \"VS code\", \"VS code\", \"VS code\", \"VS code\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\", \"Rstudio\"),\n  file = c(\"md\", \"md\", \"md\", \"md\", \"md\", \"md\", \"md\", \"md\", \"md\", \"md\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\", \"Rmd\"),\n  chunk = c(\"r\", \".r\", \"{r}\", \"{.r}\", \"rev r\", \"r\", \".r\", \"{r}\", \"{.r}\", \"rev r\", \"r\", \".r\", \"{r}\", \"{.r}\", \"rev r\", \"r\", \".r\", \"{r}\", \"{.r}\", \"rev r\", \"r\", \".r\", \"{r}\", \"{.r}\", \"rev r\", \"r\", \".r\", \"{r}\", \"{.r}\", \"rev r\"),\n  color = c(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1)\n)\n\n# Convert the table to wide form\ndf_wide <- df %>%\n  pivot_wider(names_from = chunk, values_from = color)\n\n# Print the resulting wide-form table\nprint(df_wide)\n```\n:::\n\n\n#### Table commands and functions\n\n[The function knitr::kable()](https://bookdown.org/yihui/rmarkdown-cookbook/kable.html) [Other packages for creating tables](https://bookdown.org/yihui/rmarkdown-cookbook/table-other.html)\n\n\n::: {.cell}\n\n```{.html .cell-code}\n\n/Users/marcelorosales/Documents/GitHub/Quarto/quarto-trials/quarto_website/xls2wb.htm\n```\n:::\n\n\n#### Table from csv file\n\n##### Kable()\n\n[Designing tables in R with \"knitr\" and \"kableExtra\" \\| R Tutorial (2021)](https://www.youtube.com/watch?v=JqUViTDoSEo)\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/JqUViTDoSEo\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen>\n\n</iframe>\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read.csv(\"/Users/marcelorosales/Documents/GitHub/Quarto/quarto-trials/quarto_website/qt01.csv\")\n\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Programm VS_code VS_code.1 VS_code.2 Rstudio Rstudio.1  Rstudio.2 Rstudio.3\n1     type      md       Rmd       qmd      md       Rmd Rmd visual       qmd\n2        r       o         o         o                            o          \n3       .r                                                                   \n4      {r}                           o       o         o                    o\n5     {.r}                           o       o                    o          \n6   rev  r                                                        o          \n   Rstudio.4\n1 qmd visual\n2          o\n3          o\n4           \n5          o\n6          o\n```\n:::\n\n```{.r .cell-code}\nstr(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t6 obs. of  9 variables:\n $ Programm : chr  \"type\" \"r\" \" .r\" \" {r}\" ...\n $ VS_code  : chr  \"md\" \"o\" \"\" \"\" ...\n $ VS_code.1: chr  \"Rmd\" \"o\" \"\" \"\" ...\n $ VS_code.2: chr  \"qmd\" \"o\" \"\" \"o\" ...\n $ Rstudio  : chr  \"md\" \"\" \"\" \"o\" ...\n $ Rstudio.1: chr  \"Rmd\" \"\" \"\" \"o\" ...\n $ Rstudio.2: chr  \"Rmd visual\" \"o\" \"\" \"\" ...\n $ Rstudio.3: chr  \"qmd\" \"\" \"\" \"o\" ...\n $ Rstudio.4: chr  \"qmd visual\" \"o\" \"o\" \"\" ...\n```\n:::\n\n```{.r .cell-code}\ndf <- knitr::kable(data, \"pipe\", align = \"c\")\nknitr::kable(data, \"pipe\", align = \"c\")\n```\n\n::: {.cell-output-display}\n| Programm | VS_code | VS_code.1 | VS_code.2 | Rstudio | Rstudio.1 | Rstudio.2  | Rstudio.3 | Rstudio.4  |\n|:--------:|:-------:|:---------:|:---------:|:-------:|:---------:|:----------:|:---------:|:----------:|\n|   type   |   md    |    Rmd    |    qmd    |   md    |    Rmd    | Rmd visual |    qmd    | qmd visual |\n|    r     |    o    |     o     |     o     |         |           |     o      |           |     o      |\n|    .r    |         |           |           |         |           |            |           |     o      |\n|   {r}    |         |           |     o     |    o    |     o     |            |     o     |            |\n|   {.r}   |         |           |     o     |    o    |           |     o      |           |     o      |\n|  rev  r  |         |           |           |         |           |     o      |           |     o      |\n:::\n\n```{.r .cell-code}\nknitr::kable(data, \"simple\", align = \"c\")\n```\n\n::: {.cell-output-display}\nProgramm    VS_code    VS_code.1    VS_code.2    Rstudio    Rstudio.1    Rstudio.2     Rstudio.3    Rstudio.4  \n----------  ---------  -----------  -----------  ---------  -----------  ------------  -----------  ------------\n   type        md          Rmd          qmd         md          Rmd       Rmd visual       qmd       qmd visual \n    r           o           o            o                                    o                          o      \n    .r                                                                                                   o      \n   {r}                                   o           o           o                          o                   \n   {.r}                                  o           o                        o                          o      \n  rev  r                                                                      o                          o\n:::\n\n```{.r .cell-code}\nknitr::kable(data, \"html\", align = \"c\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:center;\"> Programm </th>\n   <th style=\"text-align:center;\"> VS_code </th>\n   <th style=\"text-align:center;\"> VS_code.1 </th>\n   <th style=\"text-align:center;\"> VS_code.2 </th>\n   <th style=\"text-align:center;\"> Rstudio </th>\n   <th style=\"text-align:center;\"> Rstudio.1 </th>\n   <th style=\"text-align:center;\"> Rstudio.2 </th>\n   <th style=\"text-align:center;\"> Rstudio.3 </th>\n   <th style=\"text-align:center;\"> Rstudio.4 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:center;\"> type </td>\n   <td style=\"text-align:center;\"> md </td>\n   <td style=\"text-align:center;\"> Rmd </td>\n   <td style=\"text-align:center;\"> qmd </td>\n   <td style=\"text-align:center;\"> md </td>\n   <td style=\"text-align:center;\"> Rmd </td>\n   <td style=\"text-align:center;\"> Rmd visual </td>\n   <td style=\"text-align:center;\"> qmd </td>\n   <td style=\"text-align:center;\"> qmd visual </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> r </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> .r </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> {r} </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> {.r} </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> rev  r </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\nknitr::kable(data, \"latex\", align = \"c\")\n```\n\n::: {.cell-output-display}\n\\begin{tabular}{c|c|c|c|c|c|c|c|c}\n\\hline\nProgramm & VS\\_code & VS\\_code.1 & VS\\_code.2 & Rstudio & Rstudio.1 & Rstudio.2 & Rstudio.3 & Rstudio.4\\\\\n\\hline\ntype & md & Rmd & qmd & md & Rmd & Rmd visual & qmd & qmd visual\\\\\n\\hline\nr & o & o & o &  &  & o &  & o\\\\\n\\hline\n.r &  &  &  &  &  &  &  & o\\\\\n\\hline\n\\{r\\} &  &  & o & o & o &  & o & \\\\\n\\hline\n\\{.r\\} &  &  & o & o &  & o &  & o\\\\\n\\hline\nrev  r &  &  &  &  &  & o &  & o\\\\\n\\hline\n\\end{tabular}\n:::\n\n```{.r .cell-code}\nknitr::kable(data, \"rst\", align = \"c\")\n```\n\n::: {.cell-output-display}\n========  =======  =========  =========  =======  =========  ==========  =========  ==========\nProgramm  VS_code  VS_code.1  VS_code.2  Rstudio  Rstudio.1  Rstudio.2   Rstudio.3  Rstudio.4 \n========  =======  =========  =========  =======  =========  ==========  =========  ==========\n  type      md        Rmd        qmd       md        Rmd     Rmd visual     qmd     qmd visual\n   r         o         o          o                              o                      o     \n   .r                                                                                   o     \n  {r}                             o         o         o                      o                \n  {.r}                            o         o                    o                      o     \n rev  r                                                          o                      o     \n========  =======  =========  =========  =======  =========  ==========  =========  ==========\n:::\n:::\n\n\n##### ExtraKable()\n\n\\[ \\] Check also: [Making tables in the rstats package kableExtra for Oregon by the Numbers](https://www.youtube.com/watch?v=RLdQ-SP3zdQ)\\\n\\[ \\] [Create Awesome HTML Table with knitr::kable and kableExtra](https://haozhu233.github.io/kableExtra/awesome_table_in_html.html)\n\nExample:\n\nInstall and Load Packages if required\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"kableExtra\")\n# install.packages(\"AER\")\n# install.packages(\"tinytex\")\nlibrary(kableExtra)\nlibrary(magrittr)\nlibrary(shiny)\nlibrary(knitr)\nlibrary(tinytex)\nlibrary(AER)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: car\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: carData\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lmtest\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: zoo\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'zoo'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sandwich\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: survival\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ tidyr::extract()    masks magrittr::extract()\n✖ dplyr::filter()     masks stats::filter()\n✖ dplyr::group_rows() masks kableExtra::group_rows()\n✖ dplyr::lag()        masks stats::lag()\n✖ dplyr::recode()     masks car::recode()\n✖ purrr::set_names()  masks magrittr::set_names()\n✖ purrr::some()       masks car::some()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nhelp(\"kableExtra\")\nhelp(\"kable\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHelp on topic 'kable' was found in the following packages:\n\n  Package               Library\n  kableExtra            /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library\n  knitr                 /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library\n\n\nUsing the first match ...\n```\n:::\n:::\n\n\nExample with mtcars frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# HTML table\ndt2 <- mtcars[1:5, 1:4]\ndt <- head(mtcars)\n# rm(dt)\n# rm(dt2)\n\n\nkbl(dt, caption = \"Demo Table\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n<caption>Demo Table</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> mpg </th>\n   <th style=\"text-align:right;\"> cyl </th>\n   <th style=\"text-align:right;\"> disp </th>\n   <th style=\"text-align:right;\"> hp </th>\n   <th style=\"text-align:right;\"> drat </th>\n   <th style=\"text-align:right;\"> wt </th>\n   <th style=\"text-align:right;\"> qsec </th>\n   <th style=\"text-align:right;\"> vs </th>\n   <th style=\"text-align:right;\"> am </th>\n   <th style=\"text-align:right;\"> gear </th>\n   <th style=\"text-align:right;\"> carb </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Mazda RX4 </td>\n   <td style=\"text-align:right;\"> 21.0 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 160 </td>\n   <td style=\"text-align:right;\"> 110 </td>\n   <td style=\"text-align:right;\"> 3.90 </td>\n   <td style=\"text-align:right;\"> 2.620 </td>\n   <td style=\"text-align:right;\"> 16.46 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mazda RX4 Wag </td>\n   <td style=\"text-align:right;\"> 21.0 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 160 </td>\n   <td style=\"text-align:right;\"> 110 </td>\n   <td style=\"text-align:right;\"> 3.90 </td>\n   <td style=\"text-align:right;\"> 2.875 </td>\n   <td style=\"text-align:right;\"> 17.02 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Datsun 710 </td>\n   <td style=\"text-align:right;\"> 22.8 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 108 </td>\n   <td style=\"text-align:right;\"> 93 </td>\n   <td style=\"text-align:right;\"> 3.85 </td>\n   <td style=\"text-align:right;\"> 2.320 </td>\n   <td style=\"text-align:right;\"> 18.61 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hornet 4 Drive </td>\n   <td style=\"text-align:right;\"> 21.4 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 258 </td>\n   <td style=\"text-align:right;\"> 110 </td>\n   <td style=\"text-align:right;\"> 3.08 </td>\n   <td style=\"text-align:right;\"> 3.215 </td>\n   <td style=\"text-align:right;\"> 19.44 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hornet Sportabout </td>\n   <td style=\"text-align:right;\"> 18.7 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 360 </td>\n   <td style=\"text-align:right;\"> 175 </td>\n   <td style=\"text-align:right;\"> 3.15 </td>\n   <td style=\"text-align:right;\"> 3.440 </td>\n   <td style=\"text-align:right;\"> 17.02 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Valiant </td>\n   <td style=\"text-align:right;\"> 18.1 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 225 </td>\n   <td style=\"text-align:right;\"> 105 </td>\n   <td style=\"text-align:right;\"> 2.76 </td>\n   <td style=\"text-align:right;\"> 3.460 </td>\n   <td style=\"text-align:right;\"> 20.22 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\nkbl(dt, caption = \"Demo Table\") %>%\n  kable_styling(bootstrap_options = \"striped\",\n                full_width = F) %>%\n  add_header_above(c(\" \", \"Group 1\" = 2, \"Group 2[note]\" = 2, \"group 3\" = 7)) %>%\n  footnote(c(\"table footnote\"))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped\" style=\"width: auto !important; margin-left: auto; margin-right: auto;border-bottom: 0;\">\n<caption>Demo Table</caption>\n <thead>\n<tr>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"1\"></th>\n<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"2\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">Group 1</div></th>\n<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"2\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">Group 2[note]</div></th>\n<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"7\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">group 3</div></th>\n</tr>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> mpg </th>\n   <th style=\"text-align:right;\"> cyl </th>\n   <th style=\"text-align:right;\"> disp </th>\n   <th style=\"text-align:right;\"> hp </th>\n   <th style=\"text-align:right;\"> drat </th>\n   <th style=\"text-align:right;\"> wt </th>\n   <th style=\"text-align:right;\"> qsec </th>\n   <th style=\"text-align:right;\"> vs </th>\n   <th style=\"text-align:right;\"> am </th>\n   <th style=\"text-align:right;\"> gear </th>\n   <th style=\"text-align:right;\"> carb </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Mazda RX4 </td>\n   <td style=\"text-align:right;\"> 21.0 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 160 </td>\n   <td style=\"text-align:right;\"> 110 </td>\n   <td style=\"text-align:right;\"> 3.90 </td>\n   <td style=\"text-align:right;\"> 2.620 </td>\n   <td style=\"text-align:right;\"> 16.46 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mazda RX4 Wag </td>\n   <td style=\"text-align:right;\"> 21.0 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 160 </td>\n   <td style=\"text-align:right;\"> 110 </td>\n   <td style=\"text-align:right;\"> 3.90 </td>\n   <td style=\"text-align:right;\"> 2.875 </td>\n   <td style=\"text-align:right;\"> 17.02 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Datsun 710 </td>\n   <td style=\"text-align:right;\"> 22.8 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 108 </td>\n   <td style=\"text-align:right;\"> 93 </td>\n   <td style=\"text-align:right;\"> 3.85 </td>\n   <td style=\"text-align:right;\"> 2.320 </td>\n   <td style=\"text-align:right;\"> 18.61 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hornet 4 Drive </td>\n   <td style=\"text-align:right;\"> 21.4 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 258 </td>\n   <td style=\"text-align:right;\"> 110 </td>\n   <td style=\"text-align:right;\"> 3.08 </td>\n   <td style=\"text-align:right;\"> 3.215 </td>\n   <td style=\"text-align:right;\"> 19.44 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hornet Sportabout </td>\n   <td style=\"text-align:right;\"> 18.7 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 360 </td>\n   <td style=\"text-align:right;\"> 175 </td>\n   <td style=\"text-align:right;\"> 3.15 </td>\n   <td style=\"text-align:right;\"> 3.440 </td>\n   <td style=\"text-align:right;\"> 17.02 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Valiant </td>\n   <td style=\"text-align:right;\"> 18.1 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 225 </td>\n   <td style=\"text-align:right;\"> 105 </td>\n   <td style=\"text-align:right;\"> 2.76 </td>\n   <td style=\"text-align:right;\"> 3.460 </td>\n   <td style=\"text-align:right;\"> 20.22 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n</tbody>\n<tfoot>\n<tr><td style=\"padding: 0; \" colspan=\"100%\"><span style=\"font-style: italic;\">Note: </span></td></tr>\n<tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> table footnote</td></tr>\n</tfoot>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\n# LaTeX Table\nkbl(dt2, booktabs = T, caption = \"Demo Table\") %>%\n  kable_styling(latex_options = c(\"striped\", \"hold_position\"),\n                full_width = F) %>%\n  add_header_above(c(\" \", \"Group 1\" = 2, \"Group 2[note]\" = 2)) %>%\n  footnote(c(\"table footnote\"))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;border-bottom: 0;\">\n<caption>Demo Table</caption>\n <thead>\n<tr>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"1\"></th>\n<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"2\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">Group 1</div></th>\n<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"2\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">Group 2[note]</div></th>\n</tr>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> mpg </th>\n   <th style=\"text-align:right;\"> cyl </th>\n   <th style=\"text-align:right;\"> disp </th>\n   <th style=\"text-align:right;\"> hp </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Mazda RX4 </td>\n   <td style=\"text-align:right;\"> 21.0 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 160 </td>\n   <td style=\"text-align:right;\"> 110 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mazda RX4 Wag </td>\n   <td style=\"text-align:right;\"> 21.0 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 160 </td>\n   <td style=\"text-align:right;\"> 110 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Datsun 710 </td>\n   <td style=\"text-align:right;\"> 22.8 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 108 </td>\n   <td style=\"text-align:right;\"> 93 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hornet 4 Drive </td>\n   <td style=\"text-align:right;\"> 21.4 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 258 </td>\n   <td style=\"text-align:right;\"> 110 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hornet Sportabout </td>\n   <td style=\"text-align:right;\"> 18.7 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 360 </td>\n   <td style=\"text-align:right;\"> 175 </td>\n  </tr>\n</tbody>\n<tfoot>\n<tr><td style=\"padding: 0; \" colspan=\"100%\"><span style=\"font-style: italic;\">Note: </span></td></tr>\n<tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> table footnote</td></tr>\n</tfoot>\n</table>\n\n`````\n:::\n:::\n\n\nWith Kable\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelp(\"kable\")\n\n## Not running \n\nx <- knitr::kable(head(mtcars), \"pipe\")\nx  # works fine up to here\n\n\n# Add a row of header with 3 columns on the top of the table. The column\n# span for the 2nd and 3rd one are 5 & 6.\nadd_header_above(x, c(\" \", \"Group1\" = 5, \"Group2\" = 6))\n\ny <- add_header_above(x, c(\" \", \"Group 1\" = 5, \"Group 2\" = 6))\ny\n\nz <- head(mtcars) \n\n\nz <- as.data.frame(head(mtcars)) %>% \n  kbl() %>% \n  add_header_above(z, c(\" \", \"Group1\" = 5, \"Group2\" = 6))\n```\n:::\n\n\n#### Convert wide data frame to long data frame\n\nExample:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n# Example wide data frame\nwide_df <- data.frame(\n  id = c(1, 2, 3),\n  var1 = c(10, 20, 30),\n  var2 = c(40, 50, 60),\n  var3 = c(70, 80, 90)\n)\n\n\nwide_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id var1 var2 var3\n1  1   10   40   70\n2  2   20   50   80\n3  3   30   60   90\n```\n:::\n\n```{.r .cell-code}\n# Convert wide data frame to long\nlong_df <- wide_df %>%\n  pivot_longer(\n    cols = starts_with(\"var\"),  # Specify the columns to pivot\n    names_to = \"variable\",      # Name of the new variable column\n    values_to = \"value\"         # Name of the new value column\n  )\n\n# View the resulting long data frame\nprint(long_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 3\n     id variable value\n  <dbl> <chr>    <dbl>\n1     1 var1        10\n2     1 var2        40\n3     1 var3        70\n4     2 var1        20\n5     2 var2        50\n6     2 var3        80\n7     3 var1        30\n8     3 var2        60\n9     3 var3        90\n```\n:::\n\n```{.r .cell-code}\nknitr::kable(wide_df, \"pipe\", align = \"c\")\n```\n\n::: {.cell-output-display}\n| id | var1 | var2 | var3 |\n|:--:|:----:|:----:|:----:|\n| 1  |  10  |  40  |  70  |\n| 2  |  20  |  50  |  80  |\n| 3  |  30  |  60  |  90  |\n:::\n\n```{.r .cell-code}\nknitr::kable(long_df, \"pipe\", align = \"c\")\n```\n\n::: {.cell-output-display}\n| id | variable | value |\n|:--:|:--------:|:-----:|\n| 1  |   var1   |  10   |\n| 1  |   var2   |  40   |\n| 1  |   var3   |  70   |\n| 2  |   var1   |  20   |\n| 2  |   var2   |  50   |\n| 2  |   var3   |  80   |\n| 3  |   var1   |  30   |\n| 3  |   var2   |  60   |\n| 3  |   var3   |  90   |\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Error: Values are not numeric. \n# ! Can't subset columns with `data`.\n# ✖ `data` must be numeric or character, not a <data.frame> object.\n# ! Arguments in `...` must be used.\n\n\nlibrary(tidyverse)\ndata_long <- data %>%\n  pivot_longer(\n    data,\n    2:9,\n    names_to = \"Programm\",\n    values_to = \"values\"\n  )\n```\n:::\n\n\n### Changing language of R and Rstudio\n\n> Requires re-start app.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set r environment to english\n\nSys.setenv(LANG = \"en\")\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\ndefaults write org.R-project.R force.LANG en_US.UTF-8  # 英語表示\n\n```\n:::\n\n\n------------------------------------------------------------------------\n\n## Images:\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean efficitur placerat arcu, sed feugiat ex ultrices vitae.\n\n`!\\[My Image\\](path/to/image.jpg){.float-left}`\n\nDuis sed fringilla purus. Mauris pellentesque ullamcorper justo id ullamcorper. Vestibulum finibus, mauris ac eleifend accumsan, tortor enim finibus nulla, sit amet rutrum ipsum nisl eu nunc.\n\n![my image](images/img01.png){.float-right}\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus et posuere mi. Sed euismod nunc ut turpis fermentum bibendum.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean efficitur placerat arcu, sed feugiat ex ultrices vitae.\n\n------------------------------------------------------------------------\n\n[top](#)\n\n## Terminal, coding R&D\n\n(code not shown??) html code: warning call out.\n\nnote: do not insert spaces between the div's, it will break continuity and block will not be display or displayed incorrectly. MOVE THIS SECTION TO QUARTO CALL OUTS...\n\n```         \n<div style= \"border: 1px solid transparent; \n  border-color: transparent; \n  margin-bottom: 10px; \n  border-radius: 4px; \n  color: #000000; \n  background-color: #eeeee; \n  border-color: #ebccd1;\">\n  <div style = \"padding: 5px; \n    border: 1px solid transparent; \n    border-color: transparent; \n    border-radius: 4px; \n    color: #a94442; \n    background-color: #f2dede; \n    border-color: #ebccd1;\">\n  warning\n  </div>\n  <div style=\"padding: 5px;\">\n  The Bash_profile customization is obsolete now!!.\n  </div>\n</div>\n```\n\nAll the html div tags (above) is automatically converted to quarto blocks by render command and/or by changing from source to visual, as seen below.\n\n::: {style=\"border: 1px solid transparent;    border-color: transparent;    margin-bottom: 10px;    border-radius: 4px;    color: #000000;    background-color: #eeeee;    border-color: #ebccd1;\"}\n::: {style=\"padding: 5px;      border: 1px solid transparent;      border-color: transparent;      border-radius: 4px;      color: #a94442;      background-color: #f2dede;      border-color: #ebccd1;\"}\nwarning\n:::\n\n::: {style=\"padding: 5px;\"}\nThe Bash_profile customization is obsolete now!!.\n:::\n:::\n\nPowerlevel9k/powerlevel9kPublic archive\\\nNow Using the Powerlevel10k\n\n<https://youtu.be/zNg9Y1gentY>\\\n<https://youtu.be/XVSZAwTXtAs>\\\n<https://youtu.be/WoMiRHXzCfE>\n\n------------------------------------------------------------------------\n\n## Set up for coding and development\n\n**(macOS 2022 edition)**\n\n[top](#)\n\nOriginal post [here](https://www.atpeaz.com/macos-set-up-for-coding-and-development/) \\> **Customise .zsh with Powerlevel10K**.\\\nI was inspired by this guide, but I reconfigured my setup significantly with Powerlevel10k. In the previous version I used Powerlevel9k theme.\n\n### Powerlevel10k theme\n\nInstall for \\>\\_ & iTerm2 **Updated version**\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/D2PSsnqgBiw\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[2022 explanation video](https://youtu.be/fJOV40ixEzM)\n\n> requires git and Xcode.\n\n1.  **Save a copy of original .zshrc!!** Each machine has a different zshrc file ∵ user path is different in each manchine, just in case\\\n    `MBP20: /Users/marcelorosales/Box Sync/Github/DotFiles/MBP20/Conda_shells/zshrc` `MBP15:`\n\n2.  Install iTerm2\\\n    `brew install --cask iterm2`\n\n3.  echo \\$0 #(if \\>\\_ != -zsh {brew install zsh}, else {})\\\n    `brew install zsh`\n\n4.  Install [Oh My Zsh](https://ohmyz.sh/):\\\n    `sh -c \"$(curl -fsSL <https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh>)\"`\n\n    or\\\n    `sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"`\n\n    or\\\n    `sh -c \"$(wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)\"`\n\n    1.  Icons/font not displaying correctly? <https://github.com/romkatv/powerlevel10k/issues/671>\n\n        1.  Download these four ttf files: **MesloLGS NF Regular.ttf** \\> \\~/Box/Github/DotFiles/iTerm2/Fonts\n        2.  Double-click on each file and click \"Install\" (Fonts will be added to Font Book).\\\n            Then...\n\n        -   **Terminal fix.**:\\\n            //Preferences \\> Profile \\> Text \\> Change \\> ...\\[\\]... \\> Collection:© All fonts \\> Family: © \\> MesloLGF Regular\n        -   **iTerm fix:**\\\n            //Preferences \\> Profile \\> Text \\> Font \\> MesloLGF Regular\n        -   **Visual Studio Code config Fonts**\\\n            //settings (Cmd + ,) \\> find (Cmd +F): {Terminal font \\| Terminal integrated font family} \\> { MesloLGS NF }\n\n        1.  Change .zshrc theme to Agnoster (iterm default)\\\n            `code ~/.zshrc || open ~/.zshrc`\n            1.  Change: ZSH_THEME=\"\\~/.oh-my-zsh\" =\\> ZSH_THEME=\"agnoster\" \\> save \\> exit (\\>\\_ and iterm2)\n        2.  Costum iterm2 color scheme: download flat-colors: <https://github.com/QuentinWatt/dark-flat-iterm-colors/blob/master/flat-colors.itermcolors> -\\> \\~/Box Sync/Github/DotFiles/iTerm2/flat-colors.intermcolors\n        3.  iterm \\> Preferences \\> Profiles \\> Colors \\> Color pressets \\> import : lat-colors.intermcolors\n\n5.  Install Powerlevel9k / Powerlevel10k: (auto to: \\~/oh-my-zsh/custom/themes/powerlevel10k)\\\n    `git clone <https://github.com/romkatv/powerlevel10k.git> $ZSH_CUSTOM/themes/powerlevel10k`\n\n6.  Change .zshrc theme to Powerlevel10k (iterm default)\\\n    `code ~/.zshrc || open ~/.zshrc` Change: **ZSH_THEME=\"agnoster\"** =\\> **ZSH_THEME=\"powerlevel10k/powerlevel10k\"** \\> save \\> exit (\\>\\_ and iterm2)\n\n7.  Re-start terminal or Start a new terminal session/re-configure prompt:\n\n    -   p10k configure \\# 1st time = auto run\n    -   y \\> y \\> y \\> Rainbow \\> unicode \\> 24-hour format \\> Angled \\> sharp \\> Flat \\> one line \\> compact \\> Many icons \\> Concise \\> Transient Prompt: No \\> Verbose \\> ! Overwrite \\~/.p10k.zsh (only if powerlevel10k is already installed) \\> Apply changes to \\~/.zshrc? Yes (close open \\~/.zshrc) \\> end.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# New config: \n~/.p10k.zsh.  \n# Backup of ~/.zshrc: \n$TMPDIR/.zshrc.EM433MEB1C.  \n# See ~/.zshrc changes:  \n  diff $TMPDIR/.zshrc.EM433MEB1C ~/.zshrc  \n```\n:::\n\n\n-   For even more customization: `code ~/.p10k.zsh`.\n\n#### Other addons\n\n1.  Auto suggestions (for Oh my zsh)\n\n-   Just follow these steps: <https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md#oh-my-zsh>\n\n1.  Syntax highlighting\\\n    `brew install zsh-syntax-highlighting`\n    1.  Activate the plugin in `~/.zshrc` file:\n\n        `code ~/.zshrc` \\> copy/paste: `source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh`\n\n    2.  If the message \"highligthers directory not found\" is displayed: `code ~/.zshenv` \\> copy/paste:\n\n    3.  \\\n        `export ZSH_HIGHLIGHT_HIGHLIGHTERS_DIR=/usr/local/share/zsh-syntax-highlighting/highlighters`\n2.  if \\>\\_ or/and iTerm2 console output is produced during zsh initialization (see: instant prompt error) in terminal type:\\\n    `compaudit | xargs chmod g-w,o-w`\n\n[2022 explanation video](https://youtu.be/fJOV40ixEzM)\n\n1.  Install iTerm2\\\n    `brew install --cask iterm2`\n\n2.  Install zsh\\\n    `echo $0 #(if >_ != -zsh  {brew install zsh}, else {})`\n\n3.  Install Oh My Zsh:\n\n    `sh -c \"$(curl -fsSL <https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh>)\"`\n\n4.  Install Powerlevel9k / Powerlevel10k: (!! + x code tools)\n\n    `git clone <https://github.com/romkatv/powerlevel10k.git> $ZSH_CUSTOM/themes/powerlevel10k`\n\n5.  Change: ZSH_THEME\n\n    `code ~/.zshrc # open ~/.zshrc`\n\n6.  Change: **ZSH_THEME=\"\\~/.oh-my-zsh\" \\|\"agnoster\"** =\\> **ZSH_THEME=\"powerlevel10k/powerlevel10k\"** \\> save \\> exit (\\>\\_ and iterm2)\n\n7.  p10k configure #auto run\n\n------------------------------------------------------------------------\n\n### Summary\n\n**Summary: from kevin-smets/iterm2-solarized.md**\n\n1.  Install iterm2\n2.  Install Oh My Zsh\n3.  Install Powerlevel9k / Powerlevel10k\n4.  Install patched fonts\n5.  Further tweaking\n    a.  auto suggestions\n    b.  word jumping with arrow keys / natural text editing\n    c.  syntax highlighting\n    d.  visual studio code config\n6.  Paste Conda Initialize code at the head/End of .zshrc\n\n**1. Install iterm2**\n\n``` bash\nbrew install --cask iterm2`  \n```\n\niTerm2 has better color fidelity than the built in Terminal, so your themes will look better.\\\nGet the iTerm color settings\n\n-   Solarized Dark theme (patched version to fix the bright black value)\n-   Solarized Light theme\n-   More themes \\@ iterm2colorschemes\n\nJust save it somewhere and open the file(s). The color settings will be imported into iTerm2. Apply them in iTerm through iTerm → preferences → profiles → colors → load presets. You can create a different profile other than Default if you wish to do so.\n\n**Apply the color scheme in iTerm2**\\\niTerm → Preferences → Profiles → Colors → Color presets → ImportThen again, Color presets → you-color-scheme-name\n\n**2. Install Oh My Zsh**\n\nInstall with curl\n\n``` bash\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"  \n```\n\nWhen the installation is done, edit \\~/.zshrc and set ZSH_THEME=\"agnoster\" for the default look. Or better yet, go for Powerlevel10k.\n\n**3. Install Powerlevel9k / Powerlevel10k**\n\nWhy Powerlevel10k? faster to render your prompt.\\\nPowerlevel10k look with added info such as exit codes and timestamps:\n\n``` bash\ngit clone https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k  \n```\n\nCloning into '/Users/Marcelo-Rosales/.oh-my-zsh/custom/themes/powerlevel10k'...\n\nThen edit your `~/.zshrc` and set `ZSH_THEME=\"powerlevel10k/powerlevel10k\"`.\\\n**-\\> Terminal// code \\~/.zshrc \\> find: { ZSH_THEME} \\> ZSH_THEME=\"powerlevel10k/powerlevel10k\"**\n\n**Start a new terminal session**, Powerlevel10 configure wizard will be launched to set your prompt, beware, there are many many options! check its project page.\n\n**To re-configure prompt:**\\\nTo trigger the configuration wizard immediately, run`p10k configure` options are plentiful.\n\nTo customize even more edit your `~/.zshrc` \\> open in vs `code ~/.zshrc` \\> go to bottom section: \\# To customize prompt, run `p10k configure` or edit \\~/.p10k.zsh. `code ~/.p10k.zsh`.\n\n**4. Install a patched FONTS**\\\nThe patched font is the font used by iTerm2 to display characters, and you'll need a special one for special characters like arrows and git icons.\n\nYou'll get this result at the end, keep calm and follow this doc\\\nDownload and install the font\n\n-   Meslo (recommanded, ie the one in the screenshot). Click \"view raw\" to download the font (usually .ttf file double click file in finder to install).\n-   Source Code Pro has better alignment for the glyphs @14px.\\\n-   Others powerline fonts\\\n    **-\\> Open the downloaded font and press \"Install Font\" on your computer.**\n\nIf you did not go with Powerlevel10k or you want another font, read on:\n\n-   Source Code Pro\\\n-   Source Code Pro + Font Awesome, this one is needed if you want the icons from Font Awesome as shown in the screenshot for Powerlevel10k.\\\n-   Others \\@ powerline fonts\\\n    Open the downloaded font and press \"Install Font\".\\\n    Set this font in iTerm2 (iTerm → Preferences → Profiles → Text → Font), in the dropdown select the desired Font. You will see it change on the fly.\\\n    Restart iTerm2 for all changes to take effect.\n\n**5. Further tweaking**\\\nThings like\n\na.  auto suggestions\nb.  word jumping with arrow keys / natural text editing\nc.  syntax highlighting\nd.  visual studio code config\n\ncan be found in the section below.\n\n**a. Auto suggestions (for Oh My Zsh)**\n\nJust follow these steps: <https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md#oh-my-zsh>\n\n1.  Clone this repository into \\$ZSH_CUSTOM/plugins (by default \\~/.oh-my-zsh/custom/plugins)\n\n``` bash\ngit clone <https://github.com/zsh-users/zsh-autosuggestions> ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n```\n\n1.  Add the plugin to the list of plugins for Oh My Zsh to load (inside \\~/.zshrc):\n\n``` bash\nplugins=( \n    # other plugins...\n    zsh-autosuggestions\n)\n```\n\nIf the auto suggestions do not appear to show, it could be a problem with your color scheme.\\\nUnder \"iTerm → Preferences → Profiles → Colors tab\", check the value of Black Bright, that is the color your auto suggestions will have. It will be displayed on top of the Background color. If there is not enough contrast between the two, you won't see the suggestions even if they're actually there.\n\n**b. Enable word jumps and word deletion, aka natural text selection**\\\nBy default, word jumps (option + → or ←) and word deletions (option + backspace) do not work. To enable these, go to \"iTerm → Preferences → Profiles → Keys → Key mappings → Presets... → Natural Text Editing → Boom! Head explodes\"\n\n**c. Syntax highlighting**\\\nClone the repository:\n\n``` bash\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting  \n```\n\nActivate the plugin in `~/.zshrc`:\n\n``` bash\nplugins=( [plugins...] zsh-syntax-highlighting)  \n```\n\n***Or brewinstall:***\n\n``` bash\nbrew install zsh-syntax-highlighting  \n```\n\nWhen finish installing, read message. It will tell you to \"add the following to the .zshrc\":\n\n``` bash\nsource /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh  \n```\n\nIf the message \"highligthers directory not found message\", you may need to add the following to the `.zshenv` file:\n\n``` bash\nexport ZSH_HIGHLIGHT_HIGHLIGHTERS_DIR=/usr/local/share/zsh-syntax-highlighting/highlighters  \n```\n\nRestart iTerm2 for all changes to take effect.\n\n#### Troubleshooting\n\n**Terminal and VS code Terminal prompt issues**\\\n**Icons and font not displaying correctly?**\n\nIf icons don't display in Terminal or VS code integrated terminal after setting terminal.integrated.fontFamily see : <https://github.com/romkatv/powerlevel10k/issues/671>\n\n-   Terminal fix:\n\n//Preferences » Profile » Font » Change \\> ...\\[\\]... \\> Collection:© All fonts \\> Family: © \\> MesloLGF Regular\n\n-   iTerm fix:\n\n//Preferences \\> Profile \\> Text \\> Font \\> MesloLGF Regular\n\n-   Visual Studio Code config Fonts\n\n    Installing a patched font will mess up the integrated terminal in VS Code unless you use the proper settings. You'll need to go to settings (CMD + ,) and add or edit the following values: see 4. Install a patched font\n\n    -   for Source Code Pro + Font Awesome: \"terminal.integrated.fontFamily\": \"'SourceCodePro+Powerline+Awesome Regular'\". The single quotes are important!\\\n    -   Restart VS Code after the config change.\\\n    -   for Source Code Pro: \"terminal.integrated.fontFamily\": \"Source Code Pro for Powerline\"\\\n    -   for Meslo: \"terminal.integrated.fontFamily\": \"Meslo LG M for Powerline\"\\\n    -   **-\\> settings (Cmd + ,) \\> find (Cmd +F): {Terminal font \\| Terminal integrated font family} \\> { MesloLGS NF }**\\\n    -   for other fonts you'll need to check the font name in Font Book. You can right click on them on select \"Show in Finder\" to get the exact name.\\\n        You can also set the fontsize e.g.: \"terminal.integrated.fontSize\": 14\n\n**6. Paste Conda Initialize code at the head of .zshrc**\n\nFor MBP15:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# >>> conda initialize >>>\n# !! Contents within this block are managed by 'conda init' !!\n__conda_setup=\"$('/Users/Marcelo-Rosales/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)\"\nif [ $? -eq 0 ]; then\n    eval \"$__conda_setup\"\nelse\n    if [ -f \"/Users/Marcelo-Rosales/opt/anaconda3/etc/profile.d/conda.sh\" ]; then\n        . \"/Users/Marcelo-Rosales/opt/anaconda3/etc/profile.d/conda.sh\"\n    else\n        export PATH=\"/Users/Marcelo-Rosales/opt/anaconda3/bin:$PATH\"\n    fi\nfi\nunset __conda_setup\n# <<< conda initialize <<<\n# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.\n# Initialization code that may require console input (password prompts, [y/n]\n# confirmations, etc.) must go above this block; everything else may go below.\nif [[ -r \"${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh\" ]]; then\n  source \"${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh\"\nfi\n\n# If you come from bash you might have to change your $PATH.\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\n\n```\n:::\n\n\nFor MBP20\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# >>> conda initialize >>>\n# !! Contents within this block are managed by 'conda init' !!\n__conda_setup=\"$('/usr/local/Caskroom/miniconda/base/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)\"\nif [ $? -eq 0 ]; then\n    eval \"$__conda_setup\"\nelse\n    if [ -f \"/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh\" ]; then\n        . \"/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh\"\n    else\n        export PATH=\"/usr/local/Caskroom/miniconda/base/bin:$PATH\"\n    fi\nfi\nunset __conda_setup\n# <<< conda initialize <<<\n\n```\n:::\n\n\n**Instant Prompt Message error.**\n\nLast login: Tue Jul 12 23:09:32 on ttys000\n\nWhen using Powerlevel10k with instant prompt, console output during zsh initialization may indicate issues.\n\nYou can:\n\n-   Recommended: Change \\~/.zshrc so that it does not perform console I/O after the instant prompt preamble. See the link below for details.\n\n    -   You will not see this error message again.\n    -   Zsh will start quickly and prompt will update smoothly.\n\n-   Suppress this warning either by running p10k configure or by manually defining the following parameter:\n\n    ``` bash\n    typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet\n    ```\n\n    -   You will not see this error message again.\n    -   Zsh will start quickly but prompt will jump down after initialization.\n\n-   Disable instant prompt either by running p10k configure or by manually defining the following parameter:\n\n    ``` bash\n    typeset -g POWERLEVEL9K_INSTANT_PROMPT=off\n    ```\n\n    -   You will not see this error message again.\n    -   Zsh will start slowly.\n\n-   Do nothing.\n\n    -   You will see this error message every time you start zsh.\n    -   Zsh will start quickly but prompt will jump down after initialization.\n\nFor details, see: <https://github.com/romkatv/powerlevel10k/blob/master/README.md#instant-prompt>\n\n-- console output produced during zsh initialization follows --\n\n\\[oh-my-zsh\\] Insecure completion-dependent directories detected: (This directories were found to be insecure.) drwxrwxr-x 3 marcelorosales admin 96 May 9 2021 /usr/local/share/zsh drwxrwxr-x 6 marcelorosales admin 192 Jun 26 16:05 /usr/local/share/zsh/site-functions\n\n\\[oh-my-zsh\\] For safety, we will not load completions from these directories until you fix their permissions and ownership and restart zsh.\n\n\\[oh-my-zsh\\] See the above list for directories with group or other writability.\n\n\\[oh-my-zsh\\] To fix your permissions you can do so by disabling the write permission of \"group\" and \"others\" and making sure that the owner of these directories is either root or your current user.\n\n\\[oh-my-zsh\\] The following command may help:\n\n``` bash\ncompaudit | xargs chmod g-w,o-w\n```\n\n\\[oh-my-zsh\\] If the above didn't help or you want to skip the verification of insecure directories you can set the variable ZSH_DISABLE_COMPFIX to \"true\" before oh-my-zsh is sourced in your zshrc file.\n\nSolution: type\n\n``` bash\ncompaudit | xargs chmod g-w,o-w\n```\n\nAll messages will disappear with this.\n\n------------------------------------------------------------------------\n\n**Old version 1**: <https://youtu.be/pTW02GMeI74>\n\n[Configuration of a beautiful (efficient) terminal and prompt on OSX in 7minutes](https://medium.com/@Clovis_app/configuration-of-a-beautiful-efficient-terminal-and-prompt-on-osx-in-7-minutes-827c29391961)\n\nSummary:\n\n0.  Install Hombrew\n1.  Install and configure iTerm2\n2.  Install a patched font\n3.  Install Zsh and Oh my Zsh\n4.  Add Powerlevel9k Zsh Theme\n5.  Final tweaking\n\n-   shorter prompt\n-   enable text editor navigation\n-   auto suggestions\n-   syntax highlighting\n-   new line after each prompt\n-   change color of warning git status\n-   change Iterm2 tabs color\n\n**1. Install and configure iTerm2**\n\n``` bash\nbrew cask install iterm2\n```\n\n**Choose your Iterm2 color scheme**\n\n-   you can use [Clovis' iTerm2 color scheme file](https://raw.githubusercontent.com/Clovis-team/clovis-open-code-extracts/master/utils/Clovis-iTerm2-Color-Scheme.itermcolors) 🎁 (the one in the screenshot)\\\n-   or [scroll many opensource iTerm2 color schemes](http://iterm2colorschemes.com/) here\\\n-   ... and [download your desired preset's file](https://github.com/mbadolato/iTerm2-Color-Schemes/tree/master/schemes) here\n\n**2. Install a patched font**\n\nThe patched font is the font used by iTerm2 to display characters, and you'll need a special one for special characters like arrows and git icons.\n\nYou'll get this result at the end, keep calm and follow this doc\\\nDownload and install the font\n\n-   [Meslo](https://github.com/powerline/fonts/blob/master/Meslo%20Slashed/Meslo%20LG%20M%20Regular%20for%20Powerline.ttf) (recommanded, ie the one in the screenshot). Click \"view raw\" to download the font.\\\n-   [Source Code Pro](https://github.com/powerline/fonts/blob/master/SourceCodePro/Source%20Code%20Pro%20for%20Powerline.otf) has better alignment for the glyphs @14px.\\\n-   [Others powerline fonts](https://github.com/powerline/fonts)\n\nOpen the downloaded font and press \"Install Font\" on your computer.\n\nAdd the font in iTerm2\n\n(font size of 12pt is our personal preference)\\\niTerm2 → Preferences → Profiles → Text → Change Font\n\n\\[img\\]\n\n**3. Install Zsh and Oh my Zsh**\\\nZsh is a shell that provides many features, like better files and folders navigation. To install it :\n\n``` bash\nbrew install zsh zsh-completions  \n```\n\nOh my Zsh is a Zsh configuration framework, you can read more here: github.com/robbyrussell/oh-my-zsh.\\\nTo install it :\n\n``` bash\nsh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" \n```\n\n💡In the next steps you'll need to edit the \\~/.zshrc configuration file which is run when the terminal starts. At any time you can compare it with [Clovis .zshrc configuration file](https://github.com/Clovis-team/clovis-open-code-extracts/blob/master/utils/clovis-zshrc) 🎁\n\n**4. Add Powerlevel9k Zsh Theme**\n\nThe Powerlevel9k zsh theme adds many other features like a right promp with infos such as exit codes and timestamps. To install it run :\n\n``` bash\ngit clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k  \n```\n\nThen edit \\~/.zshrc configuration file and set\n\n``` bash\nZSH_THEME=\"powerlevel9k/powerlevel9k\"  \n```\n\nBoom. Powerlevel9k offers a whole lot more, best is to follow the next steps or check out these user made configs.\n\n**5. Final tweaking**\n\n-   shorter prompt\\\n-   enable text editor navigation\\\n-   auto suggestions\\\n-   syntax highlighting\\\n-   new line after each prompt\\\n-   change color of warning git status\\\n-   change Iterm2 tabs color\n\n------------------------------------------------------------------------\n\n::: {style=\"padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #a94442; background-color: #f2dede; border-color: #ebccd1;\"}\n***Obsolete section***!!.\n:::\n\n[top](#)\n\n### Bash_profile Setup\n\n**Tip for this section:**\\\n**The first and easiest method is using Mac Finder to show hidden files (like .bash_profile or .bashrc file):**.\n\n1.  Open the folder where you want to search hidden files.\\\n2.  Press the \"Command + Shift + .\"...\\\n3.  The hidden files will show up as translucent/shadow in the folder.\\\n4.  If you want to obscure the files again, press the same \"Command + Shift + .\"\n\n[top](#)\\\n**Customizing Your Terminal:**\n\n-   How to: Install and use homebrew (why?: To automate program installation and programs settings. Install all programs in one go. Using dot files.\n    -   **Customize Terminal**. Taken from the [Linux/Mac Tutorials](https://www.youtube.com/playlist?list=PL-osiE80TeTvGhHkpvfmKWOiIPF8UVy6c) collection \\@ [Corey Schafer](https://www.youtube.com/c/Coreyms)\n        -   [Customizing Your Terminal: .bash_profile and .bashrc files](https://youtu.be/vDOVEDl2z84?list=PL-osiE80TeTvGhHkpvfmKWOiIPF8UVy6c)\\\n        -   [Customizing Your Terminal: Adding Color and Information to Your Prompt](https://youtu.be/LXgXV7YmSiU?list=PL-osiE80TeTvGhHkpvfmKWOiIPF8UVy6c)\\\n        -   [Customizing Your Terminal: How To Use and Modify Dotfiles](https://youtu.be/c5RZWDLqifA)\\\n        -   [How I Setup a New Development Machine - Using Scripts to Automate Installs and Save Time](https://youtu.be/kIdiWut8eD8?list=PL-osiE80TeTvGhHkpvfmKWOiIPF8UVy6c)\n\n[**Customizing Your Terminal: .bash_profile and .bashrc files**](https://youtu.be/vDOVEDl2z84?list=PL-osiE80TeTvGhHkpvfmKWOiIPF8UVy6c).\n\n<iframe width=\"426\" height=\"240\" src=\"https://www.youtube.com/embed/vDOVEDl2z84?list=PL-osiE80TeTvGhHkpvfmKWOiIPF8UVy6c\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[video](https://www.youtube.com/watch?v=vDOVEDl2z84&list=PL-osiE80TeTvGhHkpvfmKWOiIPF8UVy6c)\n\nhttps://youtu.be/vDOVEDl2z84?list=PL-osiE80TeTvGhHkpvfmKWOiIPF8UVy6c\n\n**To customize our terminal**, we are going to create several .bash files (whether with R or VS). If you have other customized bash file move them to another folder (ex. DotFile) and restart terminal (al customization will disappear).\n\n-   Bash_profile: This is a login shell. Usually mac uses longing shell when opening terminal. So normally open terminal and it will echo FROM BASH_PROFILE.\n-   Bashrc: Is a file for none login shells. For linux?. In \"terminal\" run **bash** to create a subshell. After running this line, mac terminal will echo FROM BASHRC. Having 2 files for logging and non-login shells is cumbersome since we will have to modify both each time when customizing.\\\n    A way around this problem is to a simple trick which will allow us to **modify just a single file and it will be applied to all our shells**.\\\n    To do this, call your bashrc file from the bash_profile file.\n\n1.  Create bash files in terminal: **`touch .bash_profile`, `touch .bashrc`** (mind the containing folder). Or create the files in Editor (Visual studio).\\\n    **warning:** shellscript language (.sh files) is the language for .bash files, but when saved, it saves as .sh, therefore is better to create them with terminal.\\\n2.  Open the files in a text editor (VS, atom, R, etc).\\\n3.  in the bash_profile file and type:\n\n``` bash\n#To see from which file is teminal running the code, echo the file name.  \necho \"FROM BASH_PROFILE\"  \n```\n\nand in the bashrc file:\n\n``` bash\necho \"FROM BASHRC  \"  \n```\n\nNext in the profile_bash file, we call the .bashrc. as the \"code source\" into the bash_profile. So.. if a .bashrc exist, then run the code from that file (.bashrc) instead of this file (.bash_profile).\n\n``` bash\n#to modify just a single file for all our shells, call your bashrc file from with in the bash_profile file.  \nif [ -f ~/.bashrc]; then  \n    source ~/.bashrc  \nfi  \n#Now we can write all our code in the bashrc file and not really have to worry about modifying our bash_profile file anymore.  \n```\n\nNow we can do all our customizations on the bashrc file.\n\n``` bash\n#Code for the bashrc file:\n#To change the promt name for example:\nPS1=\"custom-> \";\n```\n\nIf we reopen terminal it will show **\"FROM BASHRC\"** in the login shell. Type and run: **`bash`** to reopen as a none login shell and it will show again \"FROM BASHRC\" confirming that in both shells, the code from the bashrc file is been used and the promp name will also change.\\\nSo.. from now on will be modifying only the bashrc file....\n\n[**Adding Color and Information to Your Prompt**](https://youtu.be/LXgXV7YmSiU?list=PL-osiE80TeTvGhHkpvfmKWOiIPF8UVy6c)**.**\n\n<iframe width=\"426\" height=\"240\" src=\"https://www.youtube.com/embed/LXgXV7YmSiU\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[Customizing Your Terminal: Adding Color and Information to Your Prompt](https://youtu.be/LXgXV7YmSiU?list=PL-osiE80TeTvGhHkpvfmKWOiIPF8UVy6c)\n\nNow, let's customize our prompt name\n\n``` bash\n#Code for the bashrc file:\n#To change the promt name for example to just an arrow:\nPS1=\"-> \";\nexport PS1;\n```\n\nSave the file. To see the changes in the terminal, you can\n\n1.  Close terminal and reopen. Or\\\n2.  run the new code with `source .bashrc` in Terminal.\n\nNow let's add some dynamic information using special characters:\\\nEx 1. To show the user name.... \"username -\\>\"\n\n> (In mac word the ¥ is the backslash) in Terminal it displays correctly).\n\n``` bash\n#Code for the bashrc file:\n#To change the promt name for example + dinamic information (user) \"\"\nPS1=\"\\u-> \";\nexport PS1;\n```\n\nThen the prompt will show your username.\n\nList of special characters:\\\nu user name.\\\nh the hostname up to the first .\\\ns the name of the shell.\\\nt the current time in 24hr format.\\\nu the username of the current user.\\\nw the current working directory.\\\nW the basename of the current working directory.\n\nEx 2. If we would like a prompt like:\n\n**username\\@hostname directory -\\>\"**.\n\n``` bash\n#Code for the bashrc file:\n#To change the promt name for example + dinamic information (user) \"\"\nPS1=\"  u@  h   W -> \";\nexport PS1;\n# In terminal reload using: source .bashrc\n```\n\nTo add color to the text depending on the dynamic info:\n\n> Remember: in \"my word\" the ¥ is backslash in VS\n\n``` bash\n#Code for the bashrc file:  \n#To change the promt name for example + dinamic information (user)   \nPS1=\"  u@  h   W -> \";  \nexport PS1;  \n\n#To change the promt name + dinamic information + color based on dinamic info.   \n# 1. Assing colors to tput and command substitution.  \n    # $()  # Command substitution ex.: echo \"Your current directory is $(pwd)\".  \n    # setaf # Sets color of background. 166 is the color orange in the 256 color chart.   \n    # Ex.: \"$(tput setaf 166)This is orange\".  \n\nPS1=\"$(tput setaf 166) u@ h  W -> \";  \nexport PS1;  # This will change the color of prompt but also all the text diplayed in Terminal.   \n\n# 2. We need to specify whe color begins and ends.   \n    # $(tput sgr0) # Resets the formating.  \nPS1=\"$(tput setaf 166)  u@  h   W -> $(tput sgr0)\";  \nexport PS1;  # Change color of prompt and reset color at the end of prompt.  \n\n# 3. To add more colors, place a tput before each dinamic info.  \nPS1=\"$(tput setaf 166)  u$(tput setaf 228)@  h$(tput setaf 71)  W -> $(tput sgr0)\";  \nexport PS1;  # Change color of for each dinamic info and reset color at the end of prompt.  \n    # This way of coding makes lines long an difficult to see. \n    # To organize, add \"PS1+=\" at the beginning of each line and write the command.\n\nPS1=\"$(tput setaf 166)  u\"; # Orange user.  \nPS1+=\"$(tput setaf 228)@  h\"; # yellow Host.  \nPS1+=\"$(tput setaf 71)  W\"; # green working directory.  \nPS1+=\"$(tput sgr0)\"; # reset color.  \nexport PS1;  # Save and reload. For some reason ? the promp and cursor position is miss placed. \n\n# 4. To correct the prompt missplacement problem.  \n    # Use the special escape? characters commad in every tput command:   [   ]\nPS1=\"  [$(tput setaf 166)  ]  u\"; # Orange user.  \nPS1+=\"  [$(tput setaf 228)  ]@  h\"; # yellow Host.  \nPS1+=\"  [$(tput setaf 71)  ]  W\"; # green working directory.  \nPS1+=\"  [$(tput sgr0)  ]\"; # reset color.  \nexport PS1;  # Save and reload. promp and cursor position is corrected. \n\n# 5. To make it more easy to code, we can specify each tput command as a variable.\norange= $(tput setaf 166);  \nyellow= $(tput setaf 228);  \ngreen= $(tput setaf 71);  \nwhite= $(tput setaf 15);   \nbold= $(tput setaf bold);   \nreset= $(tput sgr0);  \n      \nPS1=\"  [${bold}  ]  n\";  \nPS1+=\"  [${orange}]  u\"; # Orange user.  \nPS1+=\"  [${white}  ] at\";  \nPS1+=\"  [${yellow}  ]  h\"; # yellow Host.  \nPS1+=\"  [${white}  ] in\";  \nPS1+=\"  [${green}  ]  W\"; # green working directory.  \nPS1+=\"  n\";  #   n is a new line  \nPS1+=\"  [${white}  ]$   [${reset}  ]\"; # $ white and reset color.  \nexport PS1;  \n\n# To reload in terminal: source .bashrc\n```\n\n**10 [How To Use and Modify Dotfiles](https://youtu.be/c5RZWDLqifA)**\n\n<iframe width=\"426\" height=\"240\" src=\"https://www.youtube.com/embed/c5RZWDLqifA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[Customizing Your Terminal: How To Use and Modify Dotfiles](https://youtu.be/c5RZWDLqifA)\n\nCustomizing Terminal takes a lot of time and effort. A better and reliable way to do it is by using files already done by other more capable developers that share their customization with the community. In this case we can use the [GitHub does dotfiles](https://dotfiles.github.io) page. In particular the [Mathias Bynens's dotfiles](https://github.com/mathiasbynens/dotfiles)(MBs dotfiles), I download the repository zipfile to [this folder](/Users/marcelorosales/Documents/GitHub/DotFiles/MBs%20dotfiles) unzip and open the .bashrc and the .bash_profile.\n\nPreviously we use the \".bashrc\" file as the main file for modifying shell profile, but in this repository, they do the opposite and use the \".bash_profile\" as main file and call-in the \".bashrc\" file.\n\nIn the .bash_profile from MBs,\\\nTo understand the code commands and checks, in terminal use:\n\n``` bash\nman test\n```\n\nNow you can check all the files. Open at\n\nWe can also the [CoreyMSchafer/dotfiles](https://github.com/CoreyMSchafer/dotfiles) (CMSs dotfiles)\n\n**11 [How I Setup a New Development Machine - Using Scripts to Automate Installs and Save Time](https://youtu.be/kIdiWut8eD8?list=PL-osiE80TeTvGhHkpvfmKWOiIPF8UVy6c).**\n\n<iframe width=\"426\" height=\"240\" src=\"https://www.youtube.com/embed/kIdiWut8eD8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[How I Setup a New Development Machine - Using Scripts to Automate Installs and Save Time](https://youtu.be/kIdiWut8eD8?list=PL-osiE80TeTvGhHkpvfmKWOiIPF8UVy6c)\n\nTo make a file executable in Terminal, whether is a .bash file or a .sh file. In Terminal type:\n\n``` bash\nchmod +x scriptname.sh\n```\n\n------------------------------------------------------------------------\n\n### How to install dotfiles. Outdated\n\nDotfiles are outdated, bash files no longer used\n\n::: {error=\"\" style=\"padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #a94442; background-color: #f2dede; border-color: #ebccd1;\"}\nAll these procedures are for bash shell, obsolete for the new zsh shell. Use to customize RStudio Termina only ‼\n:::\n\n**Summary of the procedure.**\n\n0.  Find dotfile repo, check and modify code for custom prompt and brew installation files. Files:\n\n-   install.sh: Executable, where I modify installation procedures.\\\n-   bash_profile: Gather all custom .bash scripts and source them.\\\n-   bashrc.\\\n-   bash_server_prompt.\\\n-   bash_prompt: Custom prompt color.\\\n-   brew.sh or brewfile: May is better to use the dump command for auto brewfile.\n\n**From Github:**\n\n1.  Git clone dotfiles repo into home directory.\\\n2.  Run install.sh\\\n3.  For .bashfiles symlinks will be created in home dir and auto source.\\\n4.  Restart †Terminal (bash shell) or RStudio terminal.\\\n5.  Custom prompt will be displayed.\\\n    ∵ changes and modifications are made on git \\> commit and pushed, will apply to all devices at once.\n\n**From Folder:**\n\n1.  Copy the dotfile directory to homedir.\\\n2.  Run install.sh\\\n3.  .bashfiles symlinks will be created in homedir and auto sourced.\\\n4.  Restart †Terminal (bash shell) or RStudio terminal.\\\n5.  Custom prompt will be displayed.\\\n    ∵ changes and modifications will have to be made manually for each device every time. It is NOT an ideal way to it.\n\n**From Cloud Sync Service (Box Sync):**\n\n1.  Copy the dotfile directory to Box Sync directory.\\\n2.  Run install.sh\\\n3.  .bashfiles symlinks will be created in homedir and auto source.\\\n4.  Restart †Terminal (bash shell) or RStudio terminal.\\\n5.  Error in the installing.\n\n-   Symlinks path DO NOT point/target to Box Sync dir.\n-   Idea: Create folder in homedir. Create symlinks to Box Sync.\\\n-   Error: Too many levels of symbolic links.\\\n-   As of this posting, Box can't handle symlinks.\n-   Path with spaces are problematic as string variable.\\\n    ∵ installation was unsuccessful.\n\n**\\> Try on other Sync Services like Google or iCloud or OneDrive.**\n\n1.  Dotfiledir in iCloud \\> install.sh with symlinks to icloud folder (mod install.sh, !.bashfile to .bashfile slink)\\>\n2.  Create alias dir of Dotfiledir (slink) \\> move alias dir to homedir \\> install.sh (carefull if .bashfile or !.bashfile).\n\n------------------------------------------------------------------------\n\n[top](#)\n\n### Bash dotfiles install\n\n**Detail installation procedure of bash dotfiles:**\\\nRequirements: (See brew and git sections for detail information).\n\n1.  Homebrew; download from <https://brew.sh/>\\\n2.  Git must be installed.\\\n\n-   To make sure it is type in terminal:\n    -   `git` (git manual should display, if not install) or\n    -   \\`git --version' (the version number will be display).\n    -   **If not installed** install from <https://git-scm.com/book/en/v2/Getting-Started-Installing-Git>.\n\n3.  Download the \"dotfile\" directory from the git hub repository (if you have one. In general it is recommended).\\\n\n4.  **This will create a folder in the home directory called 'dotfiles'** with all the files required.\n\n    -   If not: **Create or copy/paste a directory 'dotfiles\\` containing all the files**.\n\n5.  Go to terminal. \\> Go to dotfiles folder.\n\n``` bash\ncd path/to/dotfile/folder/\n```\n\n6.  Run the install file: through terminal. (you need to be in the same folder as the install.sh file).\n\n``` bash\n./install.sh path/to/home/directory\n```\n\nThis will create the files (symlinks) into the home directory.\n\nIf the error:\n\n``` bash\n-bash: ./file.name: Permission denied\n```\n\nIs ∵ you are trying to execute a file which you do not have permission to run.\\\nTo fix this issue, use the `chmod u+x` command to give yourself permissions. more info [here](https://careerkarma.com/blog/bash-permission-denied-solution/#:~:text=Conclusion,get%20access%20to%20a%20file.)\n\n``` bash\n#| eval: false\n\nchmod u+x example.sh\n```\n\nThen, run installation again\n\n``` bash\n./install.sh path/to/home/directory\n```\n\nIt will create the symlinks and run and install the brew file programs. (may take a while).\n\nHowever, If executing install.sh form other directory than 'dotfiles' created by git, **the symlinks will do not directed to the right folder**.\n\n**To check symlink path:**\\\n\\> //Finder \\> R© \\> Get Info \\> ...\\[\\]... Original: /path/to/original/file \\<- if path is **incorrect**, change manually in terminal.\\\n[How to change where a symlink points \\[duplicate\\]](https://unix.stackexchange.com/questions/151999/how-to-change-where-a-symlink-points)\n\nCan you change what a symlink points to after it is created?\n\n``` bash\nln -sfn source/file/or/directory/name softlink/name  \nEg.  \nln -sfn path/to/original/file/.bash_profile .bash_profile (∵ we are in home directory) or  \nln -sfn path/to/original/file/MRR-bash_prompt  .bash_prompt  (target file is not a .bash file)   \n```\n\n\\*Ø source file, original file, targeted file are all synonyms in this case.\n\n``` bash\n# create symlinks (will overwrite old dotfiles)\n# Careful!! bash: /Users/marcelorosales/.bash_profile: Too many levels of symbolic links!!!! As of this posting, Box can’t handle symlinks.\nfor file in ${files}; do\n    echo \"Creating symlink to $file in home directory.\"\n    # ln -sf ${dotfiledir}/.${file} ${homedir}/.${file}  # Original Links will be created in the ${homedir}\n    ln -sf ${dotfiledir}/.${file} ${homedir}/.${file}  # Original -> target\ndone\n```\n\n------------------------------------------------------------------------\n\n### Symbolic Links\n\n**(aka Symlinks) on a Mac**\n\n[Ref](https://www.howtogeek.com/297721/how-to-create-and-use-symbolic-links-aka-symlinks-on-a-mac/)\n\nTo create a symbolic link on a Mac, you'll need to use the Terminal app. Run the ln command in the following form. You can specify either a path to a directory or file:\n\n``` bash\n#| eval: false\nln -s /path/to/original /path/to/link\nln -s /path/of/original/file /path/to/target/dir\nln -s \"/path/of/original/file\" \"/path/to/target/dir/{filename}\"\n```\n\nThe -s here tells the ln command to create a symbolic link. If you want to create a hard link, you'd omit the -s. Most of the time symbolic links are the better choice, so don't create a hard link unless you have a specific reason for doing so.\n\nHere's an example. Let's say you wanted to create a symbolic link in your Desktop folder that points to your Downloads folder. You'd run the following command:\n\n``` bash\n#| eval: false\nln -s /Users/name/Downloads /Users/name/Desktop\n```\n\nAfter creating the link, you'd see your Downloads folder appear on your desktop. It's actually the symbolic link you created, but it will look like the real thing. This folder will appear to contain all the same files as your Downloads folder. That's because it does---they're just different views pointing to the same underlying directory on the file system.\n\nIf your file path contains spaces or other special characters, you'll need to enclose it in quotation marks. So, if you wanted to create a link on your desktop to a folder named \"My Files\" inside your user directory, you'd need something like the following command:\n\n``` bash\n#| eval: false\nln -s \"/Users/name/My Files\" \"/Users/name/Desktop/My Link\"\n```\n\nTo ease typing file and directory paths into the Terminal, you can drag-and-drop a folder from the Finder window into the Terminal and the Terminal will automatically fill in the path to that folder. It will enclose the path in quotation marks if necessary, too.\n\nIf you need to create a symbolic link in a system location your user account doesn't have access to, you'll need to prefix the ln command with the sudo command, like so:\n\n``` bash\n#| eval: false\nsudo ln -s /path/to/original /path/to/link  \n```\n\n!!! note\\\nBear in mind that, on modern versions of macOS, you won't be allowed to write to certain system locations without changing a low-level firmware option due to the System Integrity Protection feature. You can disable that feature, but we recommend that you don't.\n\nRELATED: [How to Disable System Integrity Protection on a Mac (and Why You Shouldn't)](https://www.howtogeek.com/230424/how-to-disable-system-integrity-protection-on-a-mac-and-why-you-shouldnt/)\n\n#### Update a symlink\n\n<iframe width=\"560\" height=\"315\" src=\" https://www.youtube.com/embed/rUpQ8ja65CE \" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[How to update an existing symlink](https://youtu.be/rUpQ8ja65CE)\n\n#### Aliases vs. Symbolic links\n\nMac OS X has two types of aliases. The `traditional aliases`, and `symbolic links` (derived from UNIX).\\\n**Aliases** are linked to the file or folder they point to. This means that if you move the original file to a new location, the alias follows it and is still linked to it.\\\n**Symbolic links** refer to a specific pathway. Thus, a symbolic link to a file called Testing in your Documents folder will only work if the file remains in that folder location. Move it and the link is broken. On top of that, if you move the file and create a different one with the same name in the original location, the symbolic link will now point to that file (since it has the same pathway). Both methods have their advantages and disadvantages.\n\nAliases and symbolic links are both used to create shortcuts or references to files or folders, but they function differently and have different characteristics:\n\n##### Aliases:\n\n-   Aliases are specific to the macOS operating system.\n-   They are created using the Finder interface by right-clicking on a file or folder and selecting \"Make Alias.\"\n-   Aliases are small files that contain references to the original file or folder.\n-   Aliases can be moved, renamed, or deleted without affecting the original file or folder.\n-   Aliases retain their functionality even if the original file or folder is moved or renamed.\n-   Aliases are resolved by the operating system and can be accessed by any application.\n-   Aliases can be recognized by their distinctive arrow icon.\n\n##### Symbolic Links:\n\n-   Symbolic links (symlinks) are available on various operating systems, including macOS, Linux, and Windows (with limitations).\n-   They are created using the command-line interface or the file manager interface.\n-   Symlinks are special files that contain the path to the original file or folder.\n-   Symlinks can be moved, renamed, or deleted without affecting the original file or folder.\n-   If the original file or folder is moved or renamed, the symlink may break and become invalid.\n-   Symlinks are transparent to applications and appear as if they were the original file or folder.\n-   Symlinks can be recognized by the \"shortcut arrow\" icon on Windows or a \"symlink\" badge on macOS.\n\nIn summary, aliases are specific to macOS and are created using the Finder, while symbolic links are available on multiple operating systems and are typically created using the command-line interface. Aliases are small files that retain their functionality regardless of the original file or folder's location, while symlinks are special files that may break if the original file or folder is moved or renamed.\n\n#### how to crate symlinks in Box sync\n\nCreating symbolic links (symlinks) within Box Sync is not directly supported by the Box Sync application. Box Sync is designed to synchronize files and folders between your local computer and your Box account, but it does not provide native functionality for creating symlinks.\n\nHowever, you can manually create symlinks outside of the Box Sync folder and then place the symlinked files or folders inside the Box Sync folder. Here's how you can do it:\n\n1.  Identify the file or folder you want to symlink.\n2.  Create the symlink using the appropriate method for your operating system:\n    -   Windows: You can create symlinks using the `mklink` command in Command Prompt or PowerShell.\n    -   macOS/Linux: You can create symlinks using the `ln` command in the terminal.\n3.  Once the symlink is created, you can move it into the Box Sync folder.\n4.  Box Sync will recognize the symlinked file or folder and synchronize it with your Box account as if it were a regular file or folder.\n\nKeep in mind that the behavior of symlinks within Box Sync may vary depending on the operating system and Box Sync version. It's recommended to test the setup and ensure that the symlinks are working as expected.\n\nNote: Creating symlinks requires appropriate permissions on your system. Make sure you have the necessary privileges to create symlinks and manage files and folders in your operating system.\n\n``` bash\n#| eval: false\nln -s \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/All_notes.qmd\" \"/Users/marcelorosales/Documents/GitHub/Quarto/quarto-trials/quarto_website/All_notes_smlk.qmd\"\n```\n\n#### Symlinks and synology\n\nOn a Synology NAS, you can create symbolic links (symlinks) using the command-line interface (CLI) or through the DSM (DiskStation Manager) web interface. Here's how you can create symlinks on a Synology NAS:\n\n1.  Using the CLI:\n    -   Connect to your Synology NAS via SSH or use the built-in Terminal in the DSM web interface.\n    -   Navigate to the location where you want to create the symlink.\n    -   Use the `ln` command to create the symlink. For example, to create a symlink named \"symlink_name\" pointing to \"target_path\", use the following command:\n\n``` bash\nln -s target_path symlink_name\n```\n\n-   The symlink will be created in the specified location.\n\n1.  Using the DSM web interface:\n    -   Open the File Station app in the DSM web interface.\n    -   Navigate to the folder where you want to create the symlink.\n    -   Right-click on an empty area and select \"Create\" \\> \"Symbolic Link\".\n    -   Enter the path to the target folder/file in the \"Link to\" field.\n    -   Provide a name for the symlink in the \"Link name\" field.\n    -   Click \"Create\" to create the symlink.\n\nPlease note that creating symlinks may require administrative privileges on the Synology NAS. Also, keep in mind that the behavior and support for symlinks may vary depending on the specific model and version of the Synology NAS and the DSM software you are using. It's recommended to consult the Synology documentation or support resources for more specific information related to your NAS model.\n\n#### Symlinks Results\n\nAs mention in **From Cloud Sync Service (Box Sync):**\n\n-   Symlinks path DO NOT point/target to Box Sync dir.\n-   Error: Too many levels of symbolic links.\\\n-   As of this posting, Box can't handle symlinks.\n-   Path with spaces are problematic as string variable.\\\n-   Idea: Create folder in homedir. Create symlinks to Box Sync.\\\n    ∵ installation was unsuccessful.\n\n### Sync files\n\n[How to Use the rsync Command \\| Linux Essentials Tutorial](https://www.youtube.com/watch?v=2PnAohLS-Q4)\n\nSyntax: rsync -\\[options\\] source destination\n\nrsync -av source destination rsync -av --dry-run source destination #Sync simulation, not actual syncing\n\nrsync -av var/log root\\@139.177.195.158:/mnt/backup \\# sync data for local server to another server. (you need rsync installed in the destination server) root\\@139.177.195.158's password: #will ask the password for the server.\n\n[Linux/Mac Terminal Tutorial: How To Use The rsync Command - Sync Files Locally and Remotely](https://www.youtube.com/watch?v=qE77MbDnljA)\n\nrsync Original/\\* Backup/ \\# does not sync sub folders rsync -r Original/ Backup/ \\# sync all data including sub dir into destination. rsync -r Original Backup/ \\# sync the folder including sub dir into destination. rsync -av --dry-run Original/ Backup/ \\# simulation of the file and folders to be sync.\n\nIf you add more files to the Original folder and re-run command, it will copy only the new/modify files/folders. If you add more files to the Backup folder and re-run command, it will copy only the new/modify data and add files in destination.\n\nrsync -av --delete --dry-run Original/ Backup/ \\# Will delete added files in destination. rsync -zaP \\~/path/to/source name\\@192.168.56.100:\\~/path/to/destination \\# sync data to a server (will ask for password)\n\n#### Sync two files in mac OS\n\nOn macOS, you can sync two files using various methods, depending on your specific needs and preferences. Here are a few common approaches:\n\n1.  Using the Finder:\n    -   Open a Finder window and locate the source file you want to sync.\n    -   Select the source file and press `Command+C` to copy it.\n    -   Navigate to the destination location where you want to sync the file.\n    -   Press `Command+V` to paste the file. If the file already exists at the destination, you will be prompted to replace it or merge the contents.\n2.  Using the Terminal and `rsync`:\n    -   Open Terminal (Applications -\\> Utilities -\\> Terminal).\n\n    -   Use the `rsync` command to sync files. For example, to sync `file1.txt` from the source folder to the destination folder, use the following command:\n\n        ```         \n        rsync -avh --progress /path/to/source/file1.txt /path/to/destination/\n        ```\n\n    -   The `-avh` options preserve file attributes and enable verbose mode, while `--progress` displays the progress of the sync process.\n3.  Using third-party synchronization software:\n    -   There are various third-party applications available for file synchronization on macOS, such as Dropbox, Google Drive, or Resilio Sync. These tools provide more advanced syncing capabilities and often include features like automatic syncing, real-time collaboration, and cloud storage integration.\n\nChoose the method that suits your specific requirements, whether you prefer a manual approach through the Finder, utilizing the command-line power of `rsync`, or using dedicated syncing software.\n\n#### Schedule rsync on mac\n\nTo schedule an `rsync` command to run at specific times or intervals on macOS, you can use the built-in `cron` or `launchd` utilities. Here's a step-by-step guide on how to set up a scheduled `rsync` task:\n\nUsing `cron`: 1. Open Terminal on your macOS (Applications -\\> Utilities -\\> Terminal). 2. Type `crontab -e` to open the cron file for editing. 3. If prompted to select an editor, choose your preferred text editor (e.g., nano, vim). 4. In the cron file, add a new line specifying the schedule and the `rsync` command. For example, to run `rsync` every day at 10:00 AM:\n\n``` bash\n0 10 * * * rsync -avh --progress /path/to/source/ /path/to/destination/\n```\n\nAdjust the `rsync` options, source path, and destination path as needed. 5. Save the file and exit the editor. 6. `cron` will now execute the `rsync` command at the scheduled time.\n\nUsing `launchd`: 1. Open a text editor (e.g., TextEdit) on your macOS. 2. Create a new XML file with the following content, replacing the placeholders with your specific information:\n\n``` html\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>Label</key>\n    <string>com.example.rsyncsync</string>\n    <key>ProgramArguments</key>\n    <array>\n        <string>rsync</string>\n        <string>-avh</string>\n        <string>--progress</string>\n        <string>/path/to/source/</string>\n        <string>/path/to/destination/</string>\n    </array>\n    <key>RunAtLoad</key>\n    <true/>\n    <key>StartCalendarInterval</key>\n    <dict>\n        <key>Hour</key>\n        <integer>10</integer>\n        <key>Minute</key>\n        <integer>0</integer>\n    </dict>\n</dict>\n</plist>\n```\n\nAdjust the `rsync` options, source path, destination path, and the `Hour` and `Minute` values in `<StartCalendarInterval>` as needed. 1. Save the file with a `.plist` extension, such as `rsyncsync.plist`. 2. Open Terminal on your macOS (Applications -\\> Utilities -\\> Terminal). 3. Type `sudo mv /path/to/rsyncsync.plist /Library/LaunchDaemons/` to move the `.plist` file to the appropriate directory. 4. Type `sudo chown root:wheel /Library/LaunchDaemons/rsyncsync.plist` to set the correct ownership and permissions for the file. 5. Type `sudo launchctl load /Library/LaunchDaemons/rsyncsync.plist` to load the `launchd` job. 6. `launchd` will now execute the `rsync` command at the scheduled time.\n\nNote: When using `cron` or `launchd`, ensure that the paths to the `rsync` executable and the source/destination files/folders are correctly specified. Also, make sure you have the necessary permissions to access the files/folders and run the `rsync` command.\n\nPlease exercise caution when scheduling tasks and ensure that the `rsync` command is tested and functioning correctly before setting it up for automatic execution.\n\n#### how to trigger sync with rsync as soon as original file is modify?\n\nTo trigger a sync with `rsync` as soon as the original file is modified, you can use the `--update` option along with the `--delete` option to keep the destination in sync with the source. Here's an example command:\n\n``` bash\nrsync -avh --progress --update --delete /path/to/source/ /path/to/destination/\n```\n\nExplanation of options: - `-avh`: Enables archive mode (preserves file attributes), displays verbose output, and shows the progress of the sync. - `--update`: Skips files that are newer in the destination, effectively syncing only modified or new files. - `--delete`: Deletes files in the destination that don't exist in the source, ensuring an exact match between the source and destination.\n\nWhen you run this command, `rsync` will compare the timestamps of the files in the source and destination. It will only transfer files that have been modified or are new since the last sync. The `--delete` option ensures that any files in the destination that no longer exist in the source will be removed.\n\nYou can include this command in a script or a scheduled task (such as using `cron` or `launchd`) to run it periodically or at specific intervals. This way, the sync will be triggered automatically whenever there are modifications to the original file.\n\n#### Schedule commands with crontabs\n\n[Linux/Mac Tutorial: Cron Jobs - How to Schedule Commands with crontab](https://www.youtube.com/watch?v=QZJ1drMQz1A)\n\n#### Function to make symlinks.\n\nSee R ans Rstudio section.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nln -s /path/to/original /path/to/link \n\n# upadate:\n\nln -s \"/Users/name/My Files\" \"/Users/name/Desktop/My Link\"\n```\n:::\n\n\n1.  Choose a file\\\n2.  choose a folder\\\n3.  create symlink \\<In r there is a command already.\\>\n\n-   paste name of original file\n\n**In Terminal**\n\n\n::: {.cell}\n\n```{.bash .cell-code}\npwd\ncd /Users/rosalesrocabadomarcelo/Documents/GitHub/tests\npwd\ntouch test.txt\nls\n#rm test.txt\n#ls\n```\n:::\n\n\n[Select file from command-line](https://apple.stackexchange.com/questions/399510/select-file-from-command-line)\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ntheSelectedFile=\"$(osascript -l JavaScript -e 'a=Application.currentApplication();a.includeStandardAdditions=true;a.chooseFile({withPrompt:\"Please select a file to process:\"}).toString()')\"\n\necho \"Selected file: $theSelectedFile\"\n```\n:::\n\n\n------------------------------------------------------------------------\n\n[top](#)\n\n### Terminal Commands\n\n[**Usefull terminal commands**](https://www.makeuseof.com/tag/mac-terminal-commands-cheat-sheet/)\n\n| Comand »   | Action                                                 |\n|------------|--------------------------------------------------------|\n| ls »       | list of all files in a folder                          |\n| ls -al »   | list of files + all attributes (.files) + long form    |\n| touch »    | Creates new file.                                      |\n| chmod -x » | Makes a file executable eg. .bash_profile, install.sh. |\n| ./ »       | Execute a file. Eg. ./ install.sh                      |\n| mkdir »    | Make directory.                                        |\n| cd         | Change directory.                                      |\n| q »        | To quit man commands                                   |\n| cont+c »   | To stop running commands.                              |\n\n#### Html table\n\nNote: § Make Sure that content text is in the correct indentation. \\$ Must be not spaces between the html code, otherwise it will break code continuity and html will be not be display correctly.\n\n::: callout-caution\nhtml code can be written (copy/paste) directly into the code sheet without the need of code block, this is because md file can read html natively, however, in quarto there are still many conflicts and bugs that disrupt correct display. In the following section, tabe goes over the margin constraing set in quarto and over expands in webpage. Therefore, the html code will be confined to a code block so it wont be display as table but as code only.\n:::\n\n``` html\n<table>\n  <caption>Author Details</caption>\n    <col width=50%>\n    <col width=50%>\n  <tr> <!-- table row 1 Start-->\n    <th>Col 1</th>  <!-- table head 1 -->\n    <th>Col2</th> <!-- table head 2 -->\n  </tr><!-- table row 1 End -->\n  <tr>\n    <td> <!-- Data cell element -->\n      <pre> <!-- The Preformatted Text element Start (Makes text appear exactly as written in html, eg. shape or drawing with letters)-->\n        **Shortcuts for Terminal/Unix**  \n        Tab » Auto-complete file and folder names.  \n        Ctrl + A » Go to the beginning of the line you're currently typing on.  \n        Ctrl + E » Go to the end of the line you're currently typing on.  \n        Ctrl + U » Clear the line before the cursor.  \n        Ctrl + K » Clear the line after the cursor.  \n        Ctrl + W » Delete the word before the cursor.  \n        Ctrl + T » Swap the last two characters before the cursor.  \n        Esc + T » Swap the last two words before the cursor.  \n        Ctrl + L » Clear the screen.  \n        Ctrl + C » Kill whatever you're running.  \n        Ctrl + D » Exit the current shell.  \n        Option + → » Move cursor one word forward.  \n        Option + ← » Move cursor one word backward.  \n        Ctrl + F » Move cursor one character forward.  \n        Ctrl + B » Move cursor one character backward\n        Ctrl + Y » Paste whatever was cut by the last command\n        Ctrl + Z » Puts whatever you're running into a suspended background process\n        Ctrl + _ » Undo the last command\n        Option + Shift + Cmd + C » Copy plain text\n        Shift + Cmd + V » Paste the selection\n        exit » End a shell session    \n      </pre>\n    </td>\n    <td>\n      <pre> <!-- The Preformatted Text element Start (Makes text appear exactly as written in html, eg. shape or drawing with letters)-->\n        **Basics**  \n        / (Forward Slash) »\tTop level directory   \n        . (Single Period) »\tCurrent directory   \n        .. (Double Period) »\tParent directory   \n        ~ (Tilde) »\tHome directory   \n        sudo [command] »\tRun command with the security privileges of the super user   \n        nano [file] »\tOpens the Terminal editor\n        open [file] »\tOpens a file   \n        [command] -h »\tGet help about a command   \n        man [command] »\tShow the help manual of the command   \n        **Change Directory**   \n        cd »\tHome directory   \n        cd [folder] »\tChange directory, e.g. cd Documents   \n        cd ~ »\tHome directory   \n        cd/ »\tRoot of the drive   \n        cd - »\tPrevious directory or folder you last browsed   \n        pwd »\tShow your working directory   \n        cd.. »\tMove up to the parent directory   \n        cd../.. »\tMove up two levels   \n      </pre>\n    </td>\n  </tr>\n</table>\n```\n\n> In case it can not be displayed in html\n\n**Shortcuts for Terminal/Unix**\\\nTab » Auto-complete file and folder names.\\\nCtrl + A » Go to the beginning of the line you're currently typing on.\\\nCtrl + E » Go to the end of the line you're currently typing on.\\\nCtrl + U » Clear the line before the cursor.\\\nCtrl + K » Clear the line after the cursor.\\\nCtrl + W » Delete the word before the cursor.\\\nCtrl + T » Swap the last two characters before the cursor.\\\nEsc + T » Swap the last two words before the cursor.\\\nCtrl + L » Clear the screen.\\\nCtrl + C » Kill whatever you're running.\\\nCtrl + D » Exit the current shell.\\\nOption + → » Move cursor one word forward.\\\nOption + ← » Move cursor one word backward.\\\nCtrl + F » Move cursor one character forward.\\\nCtrl + B » Move cursor one character backward Ctrl + Y » Paste whatever was cut by the last command Ctrl + Z » Puts whatever you're running into a suspended background process Ctrl + \\_ » Undo the last command Option + Shift + Cmd + C » Copy plain text Shift + Cmd + V » Paste the selection exit » End a shell session\n\n**Basics**\\\n/ (Forward Slash) » Top level directory\\\n. (Single Period) » Current directory\\\n.. (Double Period) » Parent directory\\\n\\~ (Tilde) » Home directory\\\nsudo \\[command\\] » Run command with the security privileges of the super user\\\nnano \\[file\\] » Opens the Terminal editor open \\[file\\] » Opens a file\\\n\\[command\\] -h » Get help about a command\\\nman \\[command\\] » Show the help manual of the command\n\n**Change Directory**\\\ncd » Home directory\\\ncd \\[folder\\] » Change directory, e.g. cd Documents\\\ncd \\~ » Home directory\\\ncd/ » Root of the drive\\\ncd - » Previous directory or folder you last browsed\\\npwd » Show your working directory\\\ncd.. » Move up to the parent directory\\\ncd../.. » Move up two levels\n\n[top](#)\n\n#### Commands Cheat sheet\n\n[Terminal/Unix Commands Cheat Sheet.](https://www.makeuseof.com/tag/mac-terminal-commands-cheat-sheet/) **Plain List**\n\n**Shortcuts**\\\nTab » Auto-complete file and folder names.\\\nCtrl + A » Go to the beginning of the line you're currently typing on.\\\nCtrl + E » Go to the end of the line you're currently typing on.\\\nCtrl + U » Clear the line before the cursor.\\\nCtrl + K » Clear the line after the cursor.\\\nCtrl + W » Delete the word before the cursor.\\\nCtrl + T » Swap the last two characters before the cursor.\\\nEsc + T » Swap the last two words before the cursor.\\\nCtrl + L » Clear the screen.\\\nCtrl + C » Kill whatever you're running.\\\nCtrl + D » Exit the current shell.\\\nOption + → » Move cursor one word forward.\\\nOption + ← » Move cursor one word backward.\\\nCtrl + F » Move cursor one character forward.\\\nCtrl + B » Move cursor one character backward Ctrl + Y » Paste whatever was cut by the last command Ctrl + Z » Puts whatever you're running into a suspended background process Ctrl + \\_ » Undo the last command Option + Shift + Cmd + C » Copy plain text Shift + Cmd + V » Paste the selection exit » End a shell session **Basics**\\\n/ (Forward Slash) » Top level directory . (Single Period) » Current directory .. (Double Period) » Parent directory \\~ (Tilde) » Home directory sudo \\[command\\] » Run command with the security privileges of the super user nano \\[file\\] » Opens the Terminal editor open \\[file\\] » Opens a file \\[command\\] -h » Get help about a command man \\[command\\] » Show the help manual of the command\n\n**Change Directory**\\\ncd » Home directory\\\ncd \\[folder\\] » Change directory, e.g. cd Documents\\\ncd \\~ » Home directory\\\ncd/ » Root of the drive\\\ncd - » Previous directory or folder you last browsed\\\npwd » Show your working directory\\\ncd.. » Move up to the parent directory\\\ncd../.. » Move up two levels\n\n**List Directory Contents**\\\nls » Display the name of files and subdirectories in the directory\\\nls -C » Force multi-column output of the listing\\\nls -a » List all entries including those with .(period) and ..(double period)\\\nls -1 » Output the list of files in one entry per line format\\\nls -F » Display a / (slash) immediately after each path that is a directory, \\* (asterisk) after executable programs or scripts, and \\@ after a symbolic link\\\nls -S » Sort files or entries by size\\\nls -l » List in a long format. Includes file mode, owner and group name, date and time file was modified, pathname, and more\\\nls -l / » List of the file system from root with symbolic links\\\nls -lt » List the files sorted by time modified (most recent first)\\\nls -lh » Long listing with human readable file sizes in KB, MB, or GB\\\nls -lo » List the file names with size, owner, and flags\\\nls -la » List detailed directory contents, including hidden files\n\n**File Size and Disk Space**\\\ndu » List usage for each subdirectory and its contents\\\ndu -sh \\[folder\\] » Human readable output of all files in a directory\\\ndu -s » Display an entry for each specified file\\\ndu -sk\\* \\| sort -nr » List files and folders, totaling the size including the subfolders. Replace sk\\* with sm\\* to list directories in MB\\\ndf -h » Calculate your system's free disk space\\\ndf -H » Calculate free disk space in powers of 1,000 (as opposed to 1,024).\n\n**File and Directory Management**\\\nmkdir <dir1> » Create new folder named <dir1>\\\nmkdir -p <dir1>/<dir2> » Create nested folders\\\nmkdir <dir1> <dir2> <dir3> » Create several folders at once\\\nmkdir \"<dir1>\" » Create a folder with a space in the filename\\\nrmdir <dir1> » Delete a folder (only works on empty folders)\\\nrm -R <dir1> » Delete a folder and its contents\\\ntouch <file> » Create a new file without any extension\\\ncp <file> <dir1> » Copy a file to the folder\\\ncp <file> <newfile> » Copy a file to the current folder\\\ncp <file>\\~/<dir1>/<newfile> » Copy a file to the folder and rename the copied file\\\ncp -R <dir1> \\<\"new dir\"\\> » Copy a folder to a new folder with spaces in the filename\\\ncp -i <file><dir1> » Prompts you before copying a file with a warning overwrite message\\\ncp <file1> <file2> <file3>/Users/<dir1> » Copy multiple files to a folder\\\nditto -V \\[folder path\\]\\[new folder\\] » Copy the contents of a folder to new folder. In here \"-V\" print a line of status for every file copied\\\nrm <file> » Delete a file (This deletes the file permanently; use with caution.)\\\nrm -i <file> » Delete a file only when you give confirmation\\\nrm -f <file> » Force removal without confirmation\\\nrm <file1> <file2> <file3> » Delete multiple files without any confirmation\\\nmv <file> <newfilename> » Move/rename\\\nmv <file> <dir1> » Move a file to the folder, possibly by overwriting an existing file\\\nmv -i <file> <dir1> » Optional -i flag to warn you before overwriting the file\\\nmv \\*.png \\~/<dir1> » Move all PNG files from current folder to a different folder\n\n**Command History**\\\nCtrl + R » Search through previously used commands\\\nhistory n » Shows the previous commands you've typed. Add a number to limit to the last n items\\\n\\[value\\] » Execute the last command typed that starts with a value\\\n!! » Execute the last command typed\n\n**Permissions**\\\nls -ld » Display the default permission for a home directory\\\nls -ld/<dir1> » Display the read, write, and access permission of a particular folder\\\nchmod 755 <file> » Change the permission of a file to 755\\\nchmod -R 600 <dir1> » Change the permission of a folder (and its contents) to 600\\\nchown <user>:<group> <file> » Change the ownership of a file to user and group. Add -R to include folder contents\n\n**Processes**\\\nps -ax » Output currently running processes. Here, a shows processes from all users and x shows processes that are not connected with the Terminal\\\nps -aux » Shows all the processes with %cpu, %mem, page in, PID, and command\\\ntop » Display live information about currently running processes\\\ntop -ocpu -s 5 » Display processes sorted by CPU usage, updating every 5 seconds\\\ntop -o rsize » Sort top by memory usage\\\nkill PID » Quit process with ID <PID>. You'll see PID as a column in the Activity Monitor\\\nps -ax \\| grep <appname> » Find a process by name or PID.\n\n**Network**\\\nping <host> » Ping host and display status\\\nwhois <domain> » Output whois info for a domain\\\ncurl -O <url/to/file> » Download file via HTTP, HTTPS, or FTP\\\nssh <username>\\@<host> » Establish SSH connection to <host> with user <username>\\\nscp <file><user>\\@<host>:/remote/path » Copy <file> to a remote <host>\\\narp -a » View a list of all devices on your local network. It will show you the IP and MAC address of all the devices\\\nifconfig en0 » View your device IP and MAC address\\\ntraceroute \\[hostname\\] » Identify the path and the hops traversed by the packets from your device to the destination address\n\n**Homebrew**\\\nbrew doctor » Check brew for potential problems\\\nbrew help » List of useful homebrew formula and cask commands\\\nbrew install <formula>\\|<cask> » Install a formula or cask\\\nbrew uninstall <formula>\\|cask\\> » Uninstall a formula or cask\\\nbrew list --formula » List only installed formulas\\\nbrew list --cask » List only installed cask\\\nbrew deps <formula>\\|<cask> » List all the dependencies of a formula or cask\\\nbrew search text\\|/regex/ » Search formula or cask through regex\\\nbrew upgrade <formula>\\|<cask> » Upgrade the formula or cask\\\nbrew outdated <formula>\\|<cask> » Search for outdated formula or cask\\\nbrew outdated --formula » Search for outdated formula\\\nbrew outdated --cask » Search for outdated cask\\\nbrew pin \\[installed_formula\\] » Pin a formula from getting upgraded\\\nbrew unpin \\[installed_formula\\] » Unpin to upgrade a package\\\nbrew cleanup » Remove stale lock files and outdated packages for all formula and casks.\n\n**Environment Variable or Path**\n\nprintenv » Display a list of currently set environment variables. Also tells you which shell you're using\\\n\\$echo » Tells the terminal to print something and show it to you\\\necho \\$PATH » Check the value of the PATH variable which storea a list of directories with executable files\\\necho \\$PATH \\>path.txt » Export the path directory to a text file\\\nexport PATH=\\$PATH:absolute/path to/program/ » Execute a program via terminal only in your current session. If you use a program regularly, add the path to shell configuration file.\n\n**Search**\\\nfind <dir1> -name \\<\"file\"\\> » Find all files named <file> inside <dir1>. Use wildcards (\\*) to search for parts of filenames\\\ngrep \"<text>\" <file> » Output all occurrences of <text> inside <file> (add -i for case insensitivity)\\\ngrep -rl \"<text>\" <dir1> » Search for all files containing <text> inside <dir1>\n\n**Output**\\\ncat <file> » Output the content of <file>\\\nless <file> » Output the contents of <file> using the less command that supports pagination and more\\\nhead <file> » Output the first 10 lines of <file>\\\n<cmd> \\> \\> <file> » Appends the output of <cmd> to <file>\\\n<cmd> \\> <file> » Direct the output of <cmd> into <file>\\\n<cmd1> \\| <cmd2> » Direct the output of <cmd1> to <cmd2>\n\n**Command Line Help in the Mac OS X Terminal**.\\\nman (command) » Manual page for (command). eg: man ls whatis (command) »One line brief summary of specified command. eg: whatis ls\\\n(command) --help » Display command usage information including available flags and proper syntax. eg: ls --help\\\napropos (string) » Searches the whatis database for (string), helpful in finding commands. eg: apropos ssh\\\n(command)+tab key » Autocomplete, or to list available commands that start with the typed prefix.\\\nq » exit help.\n\nList2.\\\n[Handy word keyboard shortcuts for windows and Mac](https://www.computerworld.com/article/3616471/handy-word-keyboard-shortcuts-for-windows-and-mac.html)\n\n------------------------------------------------------------------------\n\n[top](#)\n\n### Bash scripting.\n\n[**Video1**](https://youtu.be/e7BufAVwDiM)\\\n<iframe width=\"560\" height=\"315\" src=\" https://www.youtube.com/embed/e7BufAVwDiM \" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\" https://www.youtube.com/embed/v-F3YLd6oMw \" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[Shell Programming Guide](http://linuxsig.org/files/bash_scripting.html)\n\n**Bash key commands:**\\\nAll code in terminal. cd, ls, clear or cnt+L, cat,\n\n1.  **To show all shells available in system:**\n\n``` bash\ncat /etc/shells \n```\n\n1.  **To Tell What Shell Your Mac is Using: (2 ways)**\n\n``` bash\necho $0 \nwhich bash\n```\n\nMBP20:\\\n/bin/bash; /bin/csh; /bin/dash; /bin/ksh; /bin/sh; /bin/tcsh; **/bin/zsh**.\n\n1.  **How to switch between shells in macOS?** : Simply type the shell name on the prompt. Ex.\n\n``` bash\n#| eval: false\n\n(username@~ % bash)  \n```\n\nThe default interactive shell is now zsh. If not....\n\n1.  **To update your account to use zsh, run**\n\n``` bash\nchsh -s /bin/zsh \n```\n\nFor more details, on how to change via [system preferences see here](https://support.apple.com/kb/HT208050).\n\n1.  **To create a file. Use the command `touch` and the name of the file. Ex.**\n\n``` bash\ntouch scriptname.sh\ntouch .bash_profile\n```\n\n1.  **To make a file executable (-x**)\n\n``` bash\nchmod +x filename.~\n```\n\n1.  **To execute file \"./\" file name and enter.**\n\n``` bash\n./ filename.~  \n```\n\n**Redirect to file**.\n\n1.  To make an executable file create a new file.\n\n``` bash\n# In the -x file (filename.~).  \necho \"Hello bash in terminal\" > newfilename.~\n# echo prints the mensage\n# > creates a file (filename.~) with the message echoed. \n```\n\nExecute filename.\\~ and a new file will be created in the pwd (present/print working directory).\n\n1.  Create file from -x file and use terminal as editor.\n\n``` bash\ncat > newfilename.~ # Use terminal as editor. * over writes old newfilename.~\ncat > newfilename.~ # Use terminal as editor. * This appends (adds to the end) into newfilename.~\n```\n\n**Comments**.\n\n1.  To add comments.\n\n``` bash\n# Single line comment.\n:'\nMulti\nline\ncomment'\n```\n\n1.  To show comments in the output. Use the heredoc delimiter. Any text can be used as delimiter.\n\n``` bash\ncat << AnyTextDelimiter \nText to be display,\neven if it is \nmulty line.\nAnyTextDelimiter \n```\n\n#### Complete this later...\n\nTable 1: Built-in shell variables.\n\nVariable Use.\n\n``` bash\n#| eval: flase\n\n$# Stores the number of command-line arguments that were passed to the shell program.  \n$? Stores the exit value of the last command that was executed.  \n$0 Stores the first word of the entered command (the name of the shell program).  \n$* Stores all the arguments that were entered on the command line ($1 $2 ...).  \n\"$@\" Stores all the arguments that were entered on the command line, individually quoted (\"$1\" \"$2\" ...).  \n```\n\n------------------------------------------------------------------------\n\n[top](#)\n\n#### Batch Cask Installer\n\nHow to Create A Batch Cask Installer for Homebrew (Using a Simple Bash Script).\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/1J9NKpjJegk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n``` bash\n# Create bash file in the Home directory.  \npwd  \nls  \n\n#Create the file \"caskinstall.sh\" or just \"caskinstall\".     \ntouch caskinstall.sh \n\n# Open the new file created with a text editor. vim, nano, atom, VS, etc.  \n# At the top type a \"shebang\": \"#!/usr/bin/env bash\" or \"#!/bin/env bash\"  \n\n#!/usr/bin/env bash  \necho \"Updating Casks...\"   \n\n# Save the file.  \n# Make the file executable with chmod in Terminal (not in text editor).\n# In Terminal     \nchmod +x caskinstall.sh \n\n# Execute/Run the file, if run correctly prompt will display \"updating Cask...\"  \n./ caskinstall.sh   \n\n# In Editor (file) create a variable.\n# Create a variable   \"CASK=()\" \n```\n\nBasically all the code is as follows Note: the `#!/usr/bin/env bash` is called a shrap bang (or shebang?), is not a comment, it is a declaration of the language we are using.\n\nTo se where is the bash type in terminal:\n\n``` bash\nwhich bash\n```\n\nusually the answer is `/bin/bash`.\n\n**Full code**.\n\n``` bash\n#!/usr/bin/env bash  \necho \"Updating Casks...\"   \n\nCASK=(  \nappName1  \nappName2  \netc  \n)  \n\nbrew cask install ${CASK[@]}  \n\necho \"Updating Complete!\"  \n```\n\n``` bash\n# Place the name of all the app to be install, run the file and all the programs will be automatically install or updated.  \n# In terminal.  \nbrew cask list  \n\n# List will be displayed. copy/paste the list into the variable brackets in editor.  \n\n# Run the file. It will install the apps.  \n./ caskinstall.sh   \n```\n\nTo make the created file (caskinstall.sh) executable.\n\n1.  Delete the extension: caskistall.sh \\> caskinstall.\\\n2.  make the file executable with the chmod.\n\n``` bash\nChmod +x caskinstall \n```\n\n1.  To run file. 2x© caskinstall in finder or ./caskinstall in terminal.\n\n**Table 1: Built-in shell variables.**\n\n[link](http://linuxsig.org/files/bash_scripting.html).\n\nVariable Use\n\n```         \n$# Stores the number of command-line arguments that were passed to the shell program.\n$? Stores the exit value of the last command that was executed.\n$0 Stores the first word of the entered command (the name of the shell program).\n$* Stores all the arguments that were entered on the command line ($1 $2 ...).  \n\"$@\" Stores all the arguments that were entered on the command line, individually quoted (\"$1\" \"$2\" ...).\n```\n\n------------------------------------------------------------------------\n\n[top](#)\n\n#### Resize Multiple Images (Mac \\>\\_ )\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/HVMOBKRNEbc\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[Easily Resize Multiple Images Using the Mac Terminal](https://youtu.be/HVMOBKRNEbc)\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Search for the folder/dir containing the images\nls  \ncd ~/ImageDir/OrigSizeDir/  \n# The following command will erase/modify the original images, and save them in the same folder. \nsips -Z 640 *.jpg  \n# -Z Manteins the aspect ratio, 640 pixel is the size of pics wanted, *.jpg= all jpg files,   \n\n# The following command will copy, modify and paste the resulting images in a new folder. \nsips -Z 300 *.jpg  --out ~/path/to/new/folder\n\n# To rename the new img created.  \n# 1. Got to the dir where the images are located. \n# 2. type the followin command. \nfind . -type f -exec bash -x 'mv \"$0\" \"${0%  .jpg}-300.jpg\"' {}   ; \n# Find all the files, .= in this folder, ${0%  .jpg}= disregard the extension of the file, -300.jpg= add 300.jpg to the file name. \n```\n:::\n\n\n#### Resize multiple images (resize img batch) in \\>\\_:\n\n1.  Create new folder, copy/paste all img to be changed.\\\n2.  In \\>\\_ use the sis¥ps command\n\n``` bash\nsips -Z 600 *.jpg\n```\n\n!!! danger\\\nOriginal files will be changed, **NO undo option** available.\n\nsips: sips command is used to query or modify raster image files (JPG/GIF/PNG) and ColorSync ICC profiles. Image processing options include flip, rotate, change image format/width/height. Its functionality can also be used through the \"Image Events\" AppleScript suite.\\\n-Z: Maintain aspect ratio.\\\n600: output width? size in pixels.\\\n\\*.jpg: files to modify, in this case, all .jpg files in the current directory.\n\n``` bash\nsips -Z 600 *.jpg --out ~/new/dir/path/and/name\n```\n\nThis will create a new directory, make a copy of the files, modify size and save in the new directory.\n\nRename all the files (rename batch) in \\>\\_: 1. Go to the directory containing files. 2. run command:\n\n``` bash\nfind . -type f -exec bash -c `mv “$0” “${0%  .jpg}-300.jpg”` {}   ;\n```\n\nfind all the files in the current directory of this type of files\\\nthen, execute this command ? ? disregard the extension .jpg and add the suffix: -300.jpg\n\n**Small Script to auto resize**\n\n``` bash\n#| eval: false\n\n#!/bin/bash\n# Change format, and change max size. 20181231 DM\n\noldFormat=HEIC\nnewFormat=png\nnewSize=800\n\nfor i in *.$oldFormat\ndo\n    sips --setProperty format $newFormat --resampleHeightWidthMax $newSize \"$i\" --out \"${i%$oldFormat}\"$newFormat\ndone\nexit 0\n```\n\n#### Rename batch files.\n\n**Step By Step: Using The Mac Batch Rename Tool**\n\n<iframe width=\"426\" height=\"240\" src=\"https://www.youtube.com/embed/rRIZAjylKDw\" title=\"Step By Step: Using The Mac Batch Rename Tool\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n1.  Select all files you want to rename.\\\n2.  Finder// File\\> Rename..Items \\> ...\\[\\]... Rename Finder items: Find= text_to_find Replace with= Text_to_replace\n\n\\*\\*Rename all the files (rename batch) in \\>\\_: (not working, permission error)\\*\\*\n\n1.  Go to the directory containing files.\\\n2.  run command:\n\n``` bash\nfind . -type f -exec bash -c `mv “$0” “${0%  .jpg}-300.jpg”` {}   ;\n```\n\n**find** all the files\\\n**.** in the current directory\\\n**-type** of this type of files\\\n**-exec bash** then, execute this command in bash?\\\n**-c** ?\\\n**mv** ?\\\n**\"**$0” “${0% .jpg} disregard the extension .jpg\\\n-300.jpg\"\\` {} ; and add the suffix: -300.jpg\n\n!!! failure bash: ./03-Molar-1000x684.jpg: Permission denied\n\n//\\[Layout\\] \\> ˇMargins \\> Custom margins \\>..\\[\\].. \\> Grid \\>\n\n[Linux/Mac Tutorials](https://www.youtube.com/playlist?list=PL-osiE80TeTvGhHkpvfmKWOiIPF8UVy6c)\n\n------------------------------------------------------------------------\n\n[top](#)\n\n### Brew (Terminal)\n\n<iframe width=\"426\" height=\"240\" src=\"https://www.youtube.com/embed/SELYgZvAZbU\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[Homebrew Tutorial: Simplify Software Installation on Mac Using This Package Manager](https://youtu.be/SELYgZvAZbU)\n\n-   1st install command line tools. (Do this through Xcode).\n\n``` bash\nxcode-select --install\n```\n\nIf already installed an error message will be displayed.\n\n`bash xcode-select: error: command line tools are already installed, use \"Software Update\" to install updates`\n\n-   Install home brew.\n\n``` bash\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```\n\n-   Test if brew install correctly by displaying the help menu.\n\n``` bash\nBrew help\n```\n\n-   To see all the packages we can install:\n\n``` bash\nbrew search  # This does no longer show all the programs, needs to add name of the program. \nbrew search | -l  # Retired/Discontinued.  \nbrew search >programmname> \n# Now use.  \nbrew list  # To see all packages already intalled. (see `brew help’)   \nbrew info >programname<  # Gives all the info of program.  \n```\n\n-   To search a program in brew\n\n``` bash\nbrew search >programname< # This does no longer show all the programs, needs to add name of the program. \n```\n\n-   To display the pathway to a program in brew\n\n``` bash\nwhich >programname< # Path to programs folder.  \n/usr/local/bin/tree. # Answer. But it is only a symlink to the real folder   \nls -la /usr/local/bin/tree  # Display long attributes of folder and the real location of the folder.  /usr/local/bin/tree -> ../cellar/tree/1.8.0/bin/tree   \n```\n\nOther Brew commands.\n\n-   brew update\n-   brew outdated\n-   brew upgrade\n-   brew cleanup\n-   brew doctor\n\nbrew update --auto-update : Use this to see outdated formulas and casks installed. After running this message will appear.\n\n``` bash\nYou have 32 outdated formulae and 12 outdated casks installed.  \nYou can “upgrade them” with **brew upgrade**  \nor “list them” with **brew outdated**.  \n```\n\n> **WARNING!:** brew upgrade will reinstall all brew applications/programs, resetting all of them to factory settings. For R and RStudio, perform a package file backup BEFORE upgrade. Visual code does not require? ∵ Sync is on with github?.\n\n**Install the command \"brew bundle\":** With this package you can dump all the programs and applications that you installed with brew over time in a \"brew file.\" <https://twit.tv/shows/hands-on-mac/episodes/9>.\n\n<iframe width=\"426\" height=\"240\" src=\"https://www.youtube.com/embed/-VP2NVv3LHg?start=415\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n``` bash\nbrew bundle\n```\n\nIf bundle already downloaded or saved. Output will display:\n\n```         \nRunning `brew update --auto-update`...\n==> Auto-updated Homebrew!\nUpdated 1 tap (homebrew/core).\n\nYou have 32 outdated formulae and 11 outdated casks installed.\nYou can upgrade them with brew upgrade\nor list them with brew outdated.\n\nError: No Brewfile found  # This means that the Brewfile has not been yet created.  \n```\n\nor\n\n``` bash\nbrew bundle install   \n```\n\nTo check all programs installed with brew.\n\n``` bash\nbrew list mas\n```\n\nTerminal will show this:\n\n```         \n(base) marcelorosales@MR-MBP20 ~ % brew list mas  \n/usr/local/Cellar/mas/1.8.6/bin/mas  \n/usr/local/Cellar/mas/1.8.6/etc/bash_completion.d/mas  \n/usr/local/Cellar/mas/1.8.6/share/fish/vendor_completions.d/mas.fish  \n```\n\nIf other reply, then... check list mas if not present install mas command:\n\n``` bash\nbrew list mas || brew install mas  \n```\n\n[top](#)\n\n#### Creating a brewfile\n\n1.  In terminal:\n\n(Brew bundle install required).\n\n``` bash\nbrew bundle dump --describe\n```\n\n1.  To check the \"packages installed\" with brew in the brewfile created:\n\n``` bash\ncat brewfile \n```\n\nThis file will be created in the **home directory**. (Home directory » Cmd+shift+H; Macintosh HD \\> Users \\> (user name)).\n\n``` bash\n# To create brewfile\nbrew update\nclear \nbrew bundle dump --describe  \nclear \nbrew list mas  \nbrew list \nclear \ncat brewfile  \n```\n\n1.  To install the brewfile in a new mac or new installation:\n\n``` bash\nsudo softwareupdate -ia --verbose; # Updates MacOs (mac command)\nbrew bundle -v; # Install the brewfile created\nbrew cleanup; # To delete unused brew libraries.\nbrew doctor --verbose # To check if there are any other issues in system.\n```\n\nMake a command script or command shell if your using \"fish\", it's easy to make a fish function that runs these lines with just one word ex. \"update\", and then saving a lot of time.\n\n**Setting permisions.**\\\nFun With Mac Terminal Commands - Hands-On Mac 5. <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ctF-S3RLcME?start=415\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>.\n\n[Fun With Mac Terminal Commands - Hands-On Mac 5](https://youtu.be/ctF-S3RLcME)\n\n``` bash\nchmod u-x <file/folder~> \n# u – x user cant execute file/folder.  \n\nchmod u+x >file/folder~< \n# u + x user was added access to execute file/folder. \n\nchmod 777 >file/folder~< \n# 777 user has been granted full access (hexadecimal 1 bit 2 bits 4 bits -> 4+2+1=7 for each level). 12:40 min.  \n\nman >cmdname< \n# Manual.  \n\nbrew install tldr \n# install tldr\n\ntldr >cmdname< \n# Like manual, too long didn’t read? Summary of command functions.  \n\nsudo >cmdname< \n# sudo= super user do, gives you admin privileges (will ask for password).  \n\nsudo softwareupdate -i -a \n# Update apple computer command.  \n\nrm -rf * \n#  delete all HDD. DANGER!!  \n\nsudo nvram StartupMute=%00 #  Mutes Mac’s startup chime.  \nsudo nvram StartupMute=%01 #  Turns on Mac’s startup chime.  \n```\n\nOther useful terminal commands\n\n-   pwd\n-   cd \\~\n-   cd » home\n-   ls » list\n-   ls -l\n-   ls -a\n\n------------------------------------------------------------------------\n\n[top](#)\n\n## R and RStudio\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRpackages\nRpackages_MBP15_20221220\nRpackages_MBP20_20221220\nRpackages_MBP20_20221220_2159\nRpackages20220812\nRpackages20220812-2\nRpackagesMBP20_220812\nRpackagesMBP20_221219\n\nRpackages_20210108\nRpackages_20220812\nRpackages_20220812-2\nRpackages_MBP15_20221220\nRpackages_MBP20_20220812\nRpackages_MBP20_20221219\nRpackages_MBP20_20221220\nRpackages_MBP20_20221220_2159\n\nRpackages_20210108\nRpackages_20220812\nRpackages_20220812-2\nRpackages_MBP15_20221220\nRpackages_MBP20_20220812\nRpackages_MBP20_20221219\nRpackages_MBP20_20221220\nRpackages_MBP20_20221220_2159\nRpackages_MBP20_20221221_900\nRpackages_MBP20_20221221_1000\n\nRpackages_MBP20_20221221_900\nRpackages_MBP20_20221221_1000\nRpackages_MBP20_20221221_1100\n\nload(\"Rpackages_20210108\") # packages, 1:291\nload(\"Rpackages_20220812\") # packages2, 1:553 \nload(\"Rpackages_20220812-2\") # packages2, 1:553\nload(\"Rpackages_MBP15_20221220\") # packages, 1:557\nload(\"Rpackages_MBP20_20220812\") # packagesMBP20_220812, 1:352\nload(\"Rpackages_MBP20_20221219\") # packages, 1:383\nload(\"Rpackages_MBP20_20221220\") # packages, 1:384\nload(\"Rpackages_MBP20_20221220_2159\") # packages, 1:386\nload(\"Rpackages_MBP20_20221221_900\") # Rpackages_MBP20_20221221_900, 1:32\nload(\"Rpackages_MBP20_20221221_1000\") # Rpackages_MBP20_20221221_1000, 1:512, **table \n```\n:::\n\n\n### R packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"memoiR\")\ninstall.packages(\"distill\")\ninstall.packages(\"rmdformats\")\ninstall.packages(\"rmarkdown\")\ninstall.packages(\"markdown\")\ninstall.packages(\"markdownInput\")\ninstall.packages(\"rmdformats\")\ninstall.packages(\"htmlwidgets\")\ninstall.packages(\"officedown\")\n\nlibrary(memoiR)\nlibrary(distill)\nlibrary(rmdformats)\nlibrary(rmarkdown)\n```\n:::\n\n\n``` bash\nbrew install --cask xquartz\n```\n\n##### Terminal command to open RStudio\n\n``` bash\nopen -na Rstudio\nopen myproject.Rproj\n```\n\nRstudio commands.\n\npress SHIFT + CMD + C (macOS), SHIFT + CTRL + C (Windows).\n\nTable: ++Opt+cmd+T++ \\<Opt+cmd+T \\>\\\nCode Chunk: ++Opt+cmd+I++ \\<Opt+cmd+I \\>\\\nCitation: ++shift+cmd+F7++ \\<shift+cmd+F7\\>\\\nFootnote: ++shift+cmd+F8++ \\<shift+cmd+F8\\>\\\nComment block: ++Shift+cmd+C++ \\<Shift+cmd+C \\>\\\nIncrease Indentation: Select block + ++Tab++\\\nDecrease Indentation: Select block + ++Shift+Tab++\n\nTo make a file executable in Terminal, whether is a .bash file or a .sh file.\n\nIn Terminal type:\n\n``` bash\nchmod +x scriptname.sh\n```\n\n[top](#)\n\n### Installing/Upgarading R and RStudio\n\nReferences Pages to visit first:\n\n-   [Painless way to install a new version of R?](https://stackoverflow.com/questions/1401904/painless-way-to-install-a-new-version-of-r){target=\"_blank\"}\n-   [How to migrate Rstudio files and installed packages ( by version to a new computer )](https://stackoverflow.com/questions/67660414/how-to-migrate-rstudio-files-and-installed-packages-by-version-to-a-new-comput){target=\"_blank\"}\n-   [An efficient way to install and load R packages](https://statsandr.com/blog/an-efficient-way-to-install-and-load-r-packages/#most-efficient-way){target=\"_blank\"}\n-   [Loading packages: the difference between R's library() and require() functions](https://timfarewell.co.uk/loading-packages-the-difference-between-rs-library-and-require-functions/){target=\"_blank\"}\n-   [Bioconductor](https://www.bioconductor.org/install/){target=\"_blank\"}\n-   [Install/Update R and R packages](https://yiweiniu.github.io/blog/2019/07/Install-Update-R-and-R-packages/){target=\"_blank\"}\n-   [restore all R packages after installing a new version of R?](https://stackoverflow.com/questions/65817504/restore-all-r-packages-after-installing-a-new-version-of-r){target=\"_blank\"}\n-   [How to Upgrade R Without Losing Your Packages](https://www.r-bloggers.com/2015/06/how-to-upgrade-r-without-losing-your-packages/){target=\"_blank\"}\n-   [Upgrade R Without Losing Your Packages](https://www.r-bloggers.com/2017/05/upgrade-r-without-losing-your-packages/){target=\"_blank\"}\n-   [Update and migrate R](https://gist.github.com/arcaravaggi/20acc42e3e245cc268a95269de024b2d){target=\"_blank\"}\n-   [Profiles package](https://github.com/jmgirard/profiles){target=\"_blank\"}\n-   [Rprofile.site file example for Startup customization](https://www.statmethods.net/interface/customizing.html){target=\"_blank\"}\n-   [Managing R with .Rprofile, .Renviron, Rprofile.site, Renviron.site, rsession.conf, and repos.conf](https://support.posit.co/hc/en-us/articles/360047157094-Managing-R-with-Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf-and-repos-conf){target=\"_blank\"}\n-   [How to Create Directory and File If It doesn't Exist in R](https://r-lang.com/how-to-create-files-and-directories-in-r/){target=\"_blank\"}\n\nTrick for doing the upgrade, from installing the software to copying all the settings/packages over?First you install the new version, then run this in the old version:\n\n### Stack Overflow\n\n#### Run in the old version of R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsetwd(\"C:/Temp/\")\npackages <- installed.packages()[,\"Package\"]\nsave(packages, file=\"Rpackages\")\n```\n:::\n\n\nFollowed by this in the new version:\n\n#### Run in the new version\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsetwd(\"C:/Temp/\")\nload(\"Rpackages\")\nfor (p in setdiff(packages, installed.packages()[,\"Package\"]))\ninstall.packages(p)\n```\n:::\n\n\n#### For windows\n\nUsing Installr\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#From https://stackoverflow.com/questions/1401904/painless-way-to-install-a-new-version-of-r\n\n# Run in the old version of R (or via RStudio)\nsetwd(\"C:/Temp/\") \npackages <- installed.packages()[,\"Package\"] \nsave(packages, file=\"Rpackages\") \n\n# INSTALL NEW R VERSION\nif(!require(installr)) { install.packages(\"installr\"); require(installr)} #load / install+load installr\n# See here for more on installr: https://www.r-statistics.com/2013/03/updating-r-from-r-on-windows-using-the-installr-package/  \n\n# step by step functions:\ncheck.for.updates.R() # tells you if there is a new version of R or not.\ninstall.R() # download and run the latest R installer... This install.R seems to be a windows only command. \n\n# Install library - run in the new version of R. This calls package names and installs them from repos, thus all packages should be correct to the most recent version\nsetwd(\"C:/Temp/\") \nload(\"Rpackages\") \nfor (p in setdiff(packages, installed.packages()[,\"Package\"])) \ninstall.packages(p) \n\n# Installr includes a package migration tool but this simply copies packages, it does not update them\ncopy.packages.between.libraries() # copy your packages to the newest R installation from the one version before it (if ask=T, it will ask you between which two versions to perform the copying)\n```\n:::\n\n\n### R-bloglers\n\n#### How to Upgrade R Without Losing Your Packages\n\n1.  Before you upgrade, build a temp file with all of your old packages. **Files saved as .rda files.**\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmp <- installed.packages()\ninstalledpkgs <- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1])\nsave(installedpkgs, file=\"installed_old.rda\")\n```\n:::\n\n\n2.  Install the new version of R and let it do it's thing.\n\n3.  Once you've got the new version up and running, reload the saved packages and re-install them from CRAN.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"installed_old.rda\")\ntmp <- installed.packages()\ninstalledpkgs.new <- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1])\nmissing <- setdiff(installedpkgs, installedpkgs.new)\ninstall.packages(missing)\nupdate.packages()\n```\n:::\n\n\nNote: If you had any packages from BioConductor, you can update those too!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Update: 'biocLite' is not available for new versions of R\n\n\nsource(\"http://bioconductor.org/biocLite.R\")\nchooseBioCmirror()\nbiocLite()\nload(\"installed_old.rda\")\ntmp <- installed.packages()\ninstalledpkgs.new <- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1])\nmissing <- setdiff(installedpkgs, installedpkgs.new)\nfor (i in 1:length(missing)) biocLite(missing[i])\n```\n:::\n\n\n::: {.callout-caution collapse=\"false\"}\n#### About `bioLite` package\n\nUpdate: 'biocLite' is not available for new versions of R\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"biocLite\") # Warning in install.packages : package ‘biocLite’ is not available for this version of R\n```\n:::\n\n\nBiocLite is not a thing anymore, it was used in the old versions of Bioconductor to install packages, now you can directly use BiocManager::install().\n\nFor example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBiocManager::install(\"limma\")\n```\n:::\n\n:::\n\n#### Save files as csv or excel .xlsx\n\n##### csv files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.csv(data_frame, 'path/to/forder/and/file_name.csv') # or set wd and just type file_name.csv\n```\n:::\n\n\n##### excel files\n\nConvert first to a data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"writexl\")\nlibrary(\"writexl\")\nthe_dataframe_name <- as.data.frame(data)\nwrite_xlsx(the_dataframe_name,\"path/to/folder/and/file_name.xlsx\")\n```\n:::\n\n\n### Upgrading R on Windows and Mac\n\nhttps://www.r-statistics.com/tag/installr/\n\n#### Windows\n\nIf you are using **Windows** you can easily upgrade to the latest version of R using the installr package. Simply run the following code in Rgui:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"installr\") # install \nsetInternet2(TRUE) # only for R versions older than 3.3.0\ninstallr::updateR() # updating R.\n# If you wish it to go faster, run: installr::updateR(T)\n```\n:::\n\n\nRunning \"updateR()\" will detect if there is a new R version available, and if so it will download+install it (etc.). There is also a step by step tutorial (with screenshots) on how to upgrade R on Windows, using the installr package. If you only see the option to upgrade to an older version of R, then change your mirror or try again in a few hours (it usually take around 24 hours for all CRAN mirrors to get the latest version of R).\n\nAlso chekck the video:\\\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ZKBeV4BNeuk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen>\n\n</iframe>\n\n#### Mac\n\nIf you are using **Mac** you can easily upgrade to the latest version of R using Andrea Cirillo's updateR package. The package is not on CRAN, so you'll need to run the following code in Rgui:\n\n[UpdateR package: update R version with a function (on MAC OSX)](http://www.andreacirillo.com/2018/03/10/updater-package-update-r-version-with-a-function-on-mac-osx/)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"devtools\")\ndevtools::install_github(\"AndreaCirilloAC/updateR\")\nupdateR(admin_password = \"PASSWORD\") # Where \"PASSWORD\" stands for your system password\n```\n:::\n\n\nMBP15 The downloaded source packages are in **\"/private/var/folders/xc/rxn5vywj3lvd_qt78ss92cc80000gn/T/Rtmp8TJvA5/downloaded_packages\"** MBP20 The downloaded binary packages are in ~~/var/folders/1v/nbx_5tgn553dq8s639lyln5c0000gn/T//Rtmp8AkWwy/downloaded_packages~~ **/private/var/folders/1v/nbx_5tgn553dq8s639lyln5c0000gn/T/RtmpP5nIXV/downloaded_packages**\n\nOption 1\n\n[Painless way to install a new version of R?](https://stackoverflow.com/questions/1401904/painless-way-to-install-a-new-version-of-r)\n\nFiles are `.rda`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#--run in the old version of R\nsetwd(\"C:/Temp/\")\npackages <- installed.packages()[,\"Package\"]\nsave(packages, file=\"Rpackages\")\n\n#--run in the new version\nsetwd(\"C:/Temp/\")\nload(\"Rpackages\")\nfor (p in setdiff(packages, installed.packages()[,\"Package\"]))\ninstall.packages(p)\n\n#-----\n\n# Just for completeness, you can save your packages in another directory on your computer.\ninstall.packages(\"thepackage\",lib=\"/path/to/directory/with/libraries\")\n#You can change the default .Library value using the function .libPaths too\n.libPaths(\"/path/to/directory/with/libraries\")\n\n# -----\n\n#Finally, You can also include a small code in my Rprofile.site allowing  to reinstall all packages when installing a new R version. You just have to list them up before you update to the new R version by using an .RData file containing an updated list with all packages.\n\nlibrary(utils)\n\n## Check necessary packages\nload(\"G:\\Setinfo\\R\\packagelist.RData\") # includes a vector \"pkgs\"\ninstalled <- pkgs %in% installed.packages()[, 'Package']\nif (length(pkgs[!installed]) >=1){\n  install.packages(pkgs[!installed])\n}\n# I make the packagelist.RData by specifying .Last() in my Rprofile.site. This updates the package list if I installed some :\n\n.Last <- function(){\n  pkgs <- installed.packages()[,1]\n  if (length(pkgs) > length(installed)){\n    save(pkgs,file=\"G:\\Setinfo\\R\\packagelist.RData\")\n  }\n}\n```\n:::\n\n\nOption 2:\\\n[How to migrate Rstudio files and installed packages ( by version to a new computer )](https://stackoverflow.com/questions/67660414/how-to-migrate-rstudio-files-and-installed-packages-by-version-to-a-new-comput)\\\n\nSave as `.csv files`.\\\nOr `.xlsx files`.\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()\nsetwd()\n# /Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/file_name.csv  \n\ninstalled <- as.data.frame(installed.packages())\nwrite.csv(installed, 'installed_previously.csv') # Path/to/folder/installed_previously.csv \ninstalledPreviously <- read.csv('installed_previously.csv') # Path/to/folder/installed_previously.csv \nbaseR <- as.data.frame(installed.packages())\ntoInstall <- setdiff(installedPreviously, baseR)\n\n# the first thing to do would be to make sure that the set of currently installed packages is up-to-date. \n\nupdate.packages(checkBuilt=TRUE, ask=FALSE)  #check spelling of arguments\n  new_pacs <- paste( setdiff( installedPreviously$Package, baseR$Package), \n                       collapse=\",\")\n  install.packages( new_pacs, dependencies=TRUE)\n\n# For excel files, requires: \ninstall.packages(\"writexl\")\nlibrary(\"writexl\")\nwrite_xlsx(the_dataframe_name,\"path/to/folder/file_name.xlsx\")\n```\n:::\n\n\n------------------------------------------------------------------------\n\n### An efficient way to istall and load R packages\n\n[An efficient way to install and load R packages](https://statsandr.com/blog/an-efficient-way-to-install-and-load-r-packages/#most-efficient-way)\\\n\n#### Inefficient way to install and load R packages:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Installation of required packages\ninstall.packages(\"tidyverse\")\ninstall.packages(\"ggplot2\")\ninstall.packages(\"readxl\")\ninstall.packages(\"dplyr\")\n\n# Load packages\nlibrary(\"tidyverse\")\nlibrary(\"ggplot2\")\nlibrary(\"readxl\")\nlibrary(\"dplyr\")\n```\n:::\n\n\n#### More efficient way\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Package names\npackages <- c(\"ggplot2\", \"readxl\", \"dplyr\", \"tidyr\", ...)\n\n# Install packages not yet installed\ninstalled_packages <- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages])\n}\n\n# Packages loading\ninvisible(lapply(packages, library, character.only = TRUE))\n```\n:::\n\n\n#### Most efficient way\n\n`{pacman} package`\\\nAfter this article was published, a reader informed me about the {pacman} package. After having read the documentation and try it out myself, I learned that the function p_load() from {pacman} checks to see if a package is installed, if not it attempts to install the package and then loads it. It can also be applied to several packages at once, all this in a very condensed way:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"pacman\")\n\npacman::p_load(ggplot2, tidyr, dplyr)\n\n## Make sure your current packages are up to date\nupdate.packages()\n## devtools is required\nlibrary(devtools)\ninstall_github(\"trinker/pacman\")\n```\n:::\n\n\nFind more about this package on [CRAN](https://github.com/trinker/pacman). [Introduction to the pacman Package in R (3 Examples)](https://statisticsglobe.com/pacman-r-package)\\\n\n`{librarian} package`\\\nLike `{pacman}`, the `shelf()` function from the `{librarian}` package automatically installs, updates, and loads R packages that are not yet installed in a single function. The function accepts packages from CRAN, GitHub, and Bioconductor (only if Bioconductor's Biobase package is installed). The function also accepts multiple package entries, provided as a comma-separated list of unquoted names (so no \"\" around package names).\\\n\n**Biobase: Base functions for Bioconductor** [DOI: 10.18129/B9.bioc.Biobase](https://bioconductor.org/packages/release/bioc/html/Biobase.html){target=\"_blank\"}\\\nInstallation:\\\nTo install this package, start R (version \"4.2\") and enter:\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBiocManager::install(\"Biobase\")\n```\n:::\n\n\nLast but not least, the `{librarian}` package allows to load packages automatically at the start of every R session (thanks to the `lib_startup()` function) and search for new packages on CRAN by keywords or regular expressions (thanks to the `browse_cran()` function).\\\n\nHere is an example of how to install missing packages and load them with the `shelf()` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# From CRAN:\ninstall.packages(\"librarian\")\n\nlibrarian::shelf(ggplot2, DesiQuintans / desiderata, pander)\n```\n:::\n\n\nFor CRAN packages, provide the package name as normal without \"\" and for GitHub packages, provide the username and package name separated by / (i.e., UserName/RepoName as shown for the desiderata package).\n\nFind more about this package on CRAN.\n\n### Stack Overflow 2\n\n[Every time I upgrade R using homebrew I need to install most packages again](https://stackoverflow.com/questions/27866834/everytime-i-upgrade-r-using-homebrew-i-need-to-install-most-packages-again)\n\n#### Before install:\n\n##### 1. Update all R packages\n\nRef: <https://www.neonscience.org/resources/learning-hub/tutorials/packages-r>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# list all packages where an update is available\nold.packages()\n\n# update all available packages\nupdate.packages()\n\n# update, without prompts for permission/clarification\nupdate.packages(ask = FALSE)\n\n# update only a specific package use install.packages()\ninstall.packages(\"plotly\")\n```\n:::\n\n\n##### 2. Backup current package list.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmp <- installed.packages()\ninstalledpkgs <- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1])\nsave(installedpkgs, file=\"installed_old.rda\")\n```\n:::\n\n\n##### 3. Backup your preferences file\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Copy a file\nsource_path <- \"/Users/marcelorosales/.config/rstudio/rstudio-prefs.json\"\ndestination_path <- \"/Users/marcelorosales/Box Sync/Github/RStudio_shared/RS_preferences/\"\n\nfile.copy(source_path, destination_path, overwrite = FALSE)\n\n# If: [1] TRUE, file was copied\n# If: [1] FALSE, file was not copied, error might be that the file already exists (change overwrite = TRUE, or paths not correct.)\n\n# Check if the copy was successful. This does not really work. \nif (file.exists(destination_path)) {\n  print(\"File copied successfully!\")\n} else {\n  print(\"File copy failed.\")\n}\n```\n:::\n\n\n##### Another way to do it:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# identify the folders\nsource_path <- \"/Users/marcelorosales/.config/rstudio/\"\ndestination_path <- \"/Users/marcelorosales/Box Sync/Github/RStudio_shared/RS_preferences/\"\nfile <- \"rstudio-prefs.json\"\n\n# find the files that you want\n\nlist.files(source_path)\n\nlist.of.files <- list.files(source_path, file)\nlist.of.files\n\n# copy the files to the new folder\nfile.copy(list.of.files, destination_path)\n```\n:::\n\n\nRef:\\\n- <https://fs.r-lib.org/reference/copy.html>\\\n- <https://www.r-bloggers.com/2014/11/copying-files-with-r/>\\\n- <https://r-lang.com/how-to-copy-a-file-in-r/>\\*\\*\\*\\\n- <https://stat.ethz.ch/R-manual/R-devel/library/base/html/files.html>\n\n#### Install new version of R\n\n``` bash\n#| eval: false\n\nbrew upgrade r\nbrew upgrade rstudio\n```\n\n#### Reload packages from CRAN\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"installed_old.rda\")\ntmp <- installed.packages()\ninstalledpkgs.new <- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1])\nmissing <- setdiff(installedpkgs, installedpkgs.new)\ninstall.packages(missing)\nupdate.packages()\n```\n:::\n\n\n#### Reload packages from BioConductor\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Update2022: 'biocLite' is not available for new versions of R\n\n\nchooseBioCmirror()\nbiocLite()\nload(\"installed_old.rda\")\ntmp <- installed.packages()\ninstalledpkgs.new <- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1])\nmissing <- setdiff(installedpkgs, installedpkgs.new)\nfor (i in 1:length(missing)) biocLite(missing[i])\n```\n:::\n\n\n### Location of the R packages\n\n``` {.bash filename=\"terminal\"}\n#| eval: false\n\n# MBP15: The downloaded source packages are in:\nopen /private/var/folders/xc/rxn5vywj3lvd_qt78ss92cc80000gn/T/Rtmp8TJvA5/downloaded_packages \n\n# MBP20: The downloaded binary packages are in:\n# old: open /private/var/folders/1v/nbx_5tgn553dq8s639lyln5c0000gn/T/Rtmp8AkWwy/downloaded_packages \nopen /private/var/folders/1v/nbx_5tgn553dq8s639lyln5c0000gn/T/RtmpP5nIXV/downloaded_packages\n```\n\n### Comparing files\n\nTo compare and find whether two files differ and where, there are a few packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tools)\nmd5sum(\"path/to/file1\") == md5sum(\"path/to/file2\")\n\nlibrary(diffobj)\ndiffFile(\"path/to/file1\", \"path/to/file2\")   # or `diffChr` if you data is in R already\n\nlibrary(diffr)\ndiffr(\"path/to/file1\", \"path/to/file2\")\n\nses(readLines(\"path/to/file1\"), readLines(\"path/to/file1\"))\n\npackages <- installed.packages()\nstructure(packages)\n```\n:::\n\n\n#### Summary\n\nrecap\\\ncore\\\nshell\\\noutline\\\nsynopsis\n\nUpdate 20230522\n\n#### Saved installed packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Run in the old version of R\n\n# ------\n# 1. Before you upgrade, update all old packages.\n# ------\n\n# A. Update current packages.\nupdate.packages(checkBuilt=TRUE, ask=FALSE)  #check spelling of arguments\n\n# B. Upgrade packages of Bioconductor\n# Install packages from a newer version of Bioconductor.\n# https://www.bioconductor.org/install/ \n\nif (!require(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\nBiocManager::install(version = \"3.16\") # Or the newest version\n\n# ------\n# 2. Before you upgrade: 1. build and save a file with all current packages (old packages) and 2. Backup your rstudio preferences files.  \n# ------\n\n# MBP15: setwd(\"/Users/Marcelo-Rosales/Box Sync/Github/RStudio_shared/R_packages/\")\n# MBP20: setwd(\"~/Box Sync/Github/RStudio_shared/R_packages/\")\n\ngetwd()\n\n# Variables for generic code:\n\n## Create a new folder for packages files\nnew_folder <- \"Rpkgs230522/\" # <----------------change folder name here, don't forget the \"/\".\nfolder <- \"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/\"\ndir.create(paste0(folder,new_folder)) #use paste0(), paste() inserts a space between obj.\n\n## Create the packages list files\nfile_name <- \"Rpkgs_MBP20_230522\" # <------------change file name here.\nrda <- \".rda\"\ncsv <- \".csv\"\ndf <- \"_df\"\nxlsx <- \".xlsx\"\n\nfile1 <- paste0(folder,new_folder,file_name) \nfile2 <- paste0(folder,new_folder,file_name,rda)\nfile3 <- paste0(folder,new_folder,file_name,csv)\nfile4 <- paste0(folder,new_folder,file_name,df,csv)\nfile5 <- paste0(folder,new_folder,file_name,xlsx)\n\nfile1\nfile2\nfile3\nfile4\nfile5\n\n# Generic code: I use this method because it is easy to change the names of the variables in one place once.\n\n## No extension\nRpkgs <- installed.packages()[,\"Package\"] # This is a temp file. \nsave(Rpkgs, file= file1) \nload(file1) # load as values (vector?)\n\n## As .rda file\ntmp <- installed.packages() # save in environment as data (dataframe?)\nRpkgs_rda<- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1]) # save as vector package names.\nsave(Rpkgs_rda, file= file2)\nload(file2)\n\n## As .csv file requires a dataframe.  \n### 1. Only the Package column variable (as vector?), or 2. as full csv data frame.  \nRpkgs_csv <- installed.packages()[,\"Package\"] \nRpkgs_df <- as.data.frame(installed.packages()) \nwrite.csv(Rpkgs_csv, file= file3)\nwrite.csv(Rpkgs_df, file= file4)\n\n## As as excel files also requires a dataframe (df)\n### install.packages(\"writexl\")\nlibrary(\"writexl\")\nRpkgs_df <- as.data.frame(installed.packages()) # same as in df_csv\nwrite_xlsx(Rpkgs_df, file5)\n\n\n# Specific code: I do not use this method because requires changing the name of the folder and file in each instance, and paths are also troublesome.\n\nRpkgs_MBP20_230329 <- installed.packages()[,\"Package\"] # save as vector values?\nsave(Rpkgs_MBP20_230329, file=\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329\") # Or Rpkgs_MBP20_230329.rda\nload(\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329.rda\") # load as values (vector?)\n\n## As .rda file\nRpkgs_MBP20_230329 <- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1]) # save as vector package names.\nsave(Rpkgs_MBP20_230329, file=\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329.rda\") # save as vector .rda; names... environment: installedpkgs, file: installed_old.rda, but when loaded in environment is back to installedpkgs.  \nload(\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/installed_old.rda\") # In environment is back to installedpkgs.  \n\n## Save as csv requires a dataframe (df)\nRpkgs_MBP20_230329 <- installed.packages()[,\"Package\"] # save only the Package (name) variable as vector values?, still can be save as csv\nwrite.csv(Rpkgs_MBP20_230329, '/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329.csv')\n\n## Or df with all the info of packages\nRpkgs_MBP20_230329df1 <- as.data.frame(installed.packages())\nwrite.csv(Rpkgs_MBP20_230329df1, '/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329df1.csv')\n\n# As excel file also requires a dataframe (df)\n# install.packages(\"writexl\")\nlibrary(\"writexl\")\nwrite_xlsx(Rpkgs_MBP20_230329df1,\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329df1.xlsx\")\n\n# Copy/Paste Rstudio global settings and preferences (~/.config/rstudio/rstudio-prefs.json)\n\n## Open folder \nfolder_path <- \"~/.config/rstudio/\"  # seems like \"~/path\" does not work on rstudio. \nfolder_path <- \"/Users/marcelorosales/.config/rstudio/\"\n\nsystem(paste(\"open\", shQuote(folder_path)))\n\n## Copy a file (direct).\nsource_path <- \"/Users/marcelorosales/.config/rstudio/rstudio-prefs.json\"\ndestination_path <- \"/Users/marcelorosales/Box Sync/Github/RStudio_shared/RS_preferences/\"\n\nfile.copy(source_path, destination_path, overwrite = FALSE)\n\n## Copy a file (indirect). Find the file(s) first.\nfile <- \"rstudio-prefs.json\"\n\nlist.files(folder_path) # list all files in folder\nfind.files <- list.files(folder_path, file) # select a specific file\nfind.files\n\n## copy the files to the new folder\nfile.copy(find.files, destination_path, overwrite = FALSE)\n\n# If: [1] TRUE, file was copied\n# If: [1] FALSE, file was not copied, error might be that the file already exists (change overwrite = TRUE, or paths not correct.)\n# Another way to do it, see Stack overflow 2 section. \n\n# Check if the copy was successful (THis code does not work properly, is )\nif (file.exists(paste0(destination_path, file))) {\n  print(\"File copied successfully!\")\n} else {\n  print(\"File copy failed.\")\n}\n\n# ------\n# 3. Install the new version of R (use homebrew). See Brew cask upgrade below.\n# ------\n\n#　4. Once the new version up and running, reload the saved packages and re-install them from CRAN.\n\n# run in the new version\n# MBP20: setwd(\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/\")\n\nload(\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329.rda\")\nfor (p in setdiff(RSpacks230324MBP15, installed.packages()[,\"Package\"]))\n  install.packages(p)\n```\n:::\n\n\n### Copy/Paste Rstudio global settings and preferences if necessary.\n\n``` {.bash filename=\"Terminal\"}\n#| eval:false\n\n# Copy/Paste Rstudio global settings and preferences.. \nopen ~/.config/rstudio\n\n# Search and Copy file to same place as packages files. \nrstudio-prefs.json\n```\n\n``` bash\n#| eval: false\n\nopen ~/.config/rstudio\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Open folder \nfolder_path <- \"~/.config/rstudio/\"  # seems like \"~/path\" does not work on rstudio. \nfolder_path <- \"/Users/marcelorosales/.config/rstudio/\"\n\nsystem(paste(\"open\", shQuote(folder_path)))\n\n# Copy a file\nsource_path <- \"/Users/marcelorosales/.config/rstudio/rstudio-prefs.json\"\ndestination_path <- \"/Users/marcelorosales/Box Sync/Github/RStudio_shared/RS_preferences/\"\n\nfile.copy(source_path, destination_path)\n\n# Check if the copy was successful\nif (file.exists(destination_path)) {\n  print(\"File copied successfully!\")\n} else {\n  print(\"File copy failed.\")\n}\n```\n:::\n\n\n#### Brew cask upgrade R and Rstudio.\n\n\n::: {.cell filename='Terminal'}\n\n```{.bash .cell-code}\n# Upgrade R and rstudio\nbrew update\nbrew upgrade --cask r\n# password\n#`brew cleanup` has not been run in the last 30 days, running now...\n\n# Upgrade RStudio\nbrew upgrade --cask rstudio\n\n# Copy paste the `rstudio-prefs.json` if needed, usually it still remains after upgrade. \nrstudio-prefs.json\n```\n:::\n\n\n### Errors and trouble shooting.\n\n#### non-UTF8 locale error in R\n\n**WARNING: You're using a non-UTF8 locale**\\\n\nWhen opening R new version... an error message is displayed.\n\n\n::: {.cell filename='error message' code-block-bg='false' code-block-border-left='#31BAE9'}\n\n```{.bash .cell-code}\nDuring startup - Warning messages:\n1: Setting LC_CTYPE failed, using \"C\" \n2: Setting LC_COLLATE failed, using \"C\" \n3: Setting LC_TIME failed, using \"C\" \n4: Setting LC_MESSAGES failed, using \"C\" \n5: Setting LC_MONETARY failed, using \"C\" \n[R.app GUI 1.79 (8198) x86_64-apple-darwin17.0]\n\nWARNING: You're using a non-UTF8 locale, therefore only ASCII characters will work.\nPlease read R for Mac OS X FAQ (see Help) section 9 and adjust your system preferences accordingly.\n```\n:::\n\n\nA solution: For english:\\\n- [Installing R on Mac - Warning messages: Setting LC_CTYPE failed, using \"C\"](https://stackoverflow.com/questions/9689104/installing-r-on-mac-warning-messages-setting-lc-ctype-failed-using-c){target=\"_blank\"}\\\n- [For Japanese:](https://maku77.github.io/r/basic/locale.html){target=\"_blank\"}.\\\n\n\n::: {.cell filename='Terminal'}\n\n```{.bash .cell-code}\ndefaults write org.R-project.R force.LANG en_US.UTF-8  # 英語表示\ndefaults write org.R-project.R force.LANG ja_JP.UTF-8  # 日本語表示\n```\n:::\n\n\n#### How to change language settings in R.\n\n[How to change language settings in R](https://stackoverflow.com/questions/13575180/how-to-change-language-settings-in-r)\n\nYou can set this using the Sys.setenv() function. My R session defaults to English, so I'll set it to French and then back again:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n> Sys.setenv(LANG = \"fr\")\n> 2 + x\n# Erreur : objet 'x' introuvable\n\n> Sys.setenv(LANG = \"en\")\n> 2 + x\n# Error: object 'x' not found\n```\n:::\n\n\n#### There is already an App... (legacy)\n\n**Error: It seems there is already an App at '/Applications/Rstudio'**\\\n[is it possible to override the legacy app when install using brew](https://apple.stackexchange.com/questions/435745/is-it-possible-to-override-the-legacy-app-when-install-using-brew){targe=\"_blank\"}\n\nSome times is not possible to install, re-intall or upgrade a program via brew because first installation was made manually (downloaded zip or tar files).\\\nThis leaves a \"legacy\" app. To fix it use the **`--force`** attribute while installing\n\n``` bash\n#| eval: false\n\nbrew install --cask rstudio --force\n```\n\n### Other relevant files\n\n\n::: {.cell}\n\n:::\n\n\n### How to's:\n\n#### Find out R library location in Mac OSX?\n\nWith .Library you get your default library location With .libPaths(\"your/path\") you can also get/set you library trees (see ?.libPaths) and with getwd() resp. setwd(\"your/path\") you get/set your working-directory.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n.Library\n.libPaths()\n```\n:::\n\n\n[Loading packages: the difference between R's library() and require() functions](https://timfarewell.co.uk/loading-packages-the-difference-between-rs-library-and-require-functions/){target= \"\\_blank\"}\n\n#### Create Directory and File If It doesn't Exist in R\n\n[How to Create Directory and File If It doesn't Exist in R](https://r-lang.com/how-to-create-files-and-directories-in-r/)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Syntax\n# dir.create(path, showWarnings = TRUE, recursive = FALSE, mode = \"0777\")\n# file.create(…, file1, file2)\n\n# Ex. New folder\nfolder <- \"mortalkombat\"\nif (file.exists(folder)) {\n cat(\"The folder already exists\")\n} else {\n dir.create(folder)\n}\n\n# Ex. New file\nfile <- \"dataframe.R\"\nif (file.exists(file)) {\n cat(\"The file already exists\")\n} else {\n file.create(file)\n}\n\n# Output\n[1] TRUE  # file created\n[1] FALSE # file not created\n```\n:::\n\n\n#### Concatenate Strings in R programming language\n\n[Concatenate Strings in R](https://www.tutorialkart.com/r-tutorial/concatenate-two-or-more-strings-in-r)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Syntax:\n# paste(…, sep=\"\", collapse=NULL)\n\n# Sep = a character that would be appended between two adjacent strings and acts as a separator\n# collapse = is an optional character to separate the results\n\n# Concatenate two strings\nstr1 = 'Hello'\nstr2 = 'World!'\n\nresult = paste(str1,str2)\nprint (result)\n\n# concatenate with No Separator\nresult = paste(str1,str2,sep=\"\")\nresult = paste0(str1,str2)\nprint (result)\n\n# concatenate with \"some separator\" \nresult = paste(str1,str2,str3,str4,sep=\"-\")\nprint (result)\n```\n:::\n\n\n#### R code to open a file or folder with OS system / finder\n\nTo open a file in Finder using R, you can use the `shell.exec()` function in Windows or the `system()` function in macOS. Here's an example of how you can achieve this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Windows\nfile_path <- \"C:/path/to/file.txt\"\nshell.exec(file_path)\n\n# macOS\nfile_path <- \"/path/to/file.txt\"\nsystem(paste(\"open\", shQuote(file_path)))\n```\n:::\n\n\nIn the code snippet above, replace `\"C:/path/to/file.txt\"` or `\"/path/to/file.txt\"` with the actual path to the file you want to open in Finder.\n\nOn Windows, `shell.exec()` launches the default program associated with the file type, which will typically open the file in the default application for that file type.\n\nOn macOS, `system()` is used with the `open` command to open the file in Finder. The `shQuote()` function is used to properly handle file paths that contain spaces or special characters.\n\nMake sure to adjust the file path accordingly to match the location of the file you want to open.\n\n#### Tables in Rstudio\n\n[top](#)\n\n-   [A new RStudio addin to facilitate inserting tables in Rmarkdown documents](https://lbusett.netlify.app/post/a-new-rstudio-addin-to-facilitate-inserting-tables-in-rmarkdown-documents/#:~:text=To%20use%20it%2C%20open%20a,Addins%20%E2%80%93%3E%20Insert%20Table%E2%80%9D)\\\n-   [Copy Table in Excel and Paste as a Markdown Table](https://thisdavej.com/copy-table-in-excel-and-paste-as-a-markdown-table/)\\\n-   [Tables Generator](https://www.tablesgenerator.com/markdown_tables)\\\n-   [The function knitr::kable()](https://bookdown.org/yihui/rmarkdown-cookbook/kable.html)\\\n-   [Other packages for creating tables](https://bookdown.org/yihui/rmarkdown-cookbook/table-other.html)\n\n``` html\n/Users/marcelorosales/Documents/GitHub/Quarto/quarto-trials/quarto_website/xls2wb.htm\n```\n\nExample:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read.csv(\"/Users/marcelorosales/Documents/GitHub/Quarto/quarto-trials/quarto_website/qt01.csv\")\n\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Programm VS_code VS_code.1 VS_code.2 Rstudio Rstudio.1  Rstudio.2 Rstudio.3\n1     type      md       Rmd       qmd      md       Rmd Rmd visual       qmd\n2        r       o         o         o                            o          \n3       .r                                                                   \n4      {r}                           o       o         o                    o\n5     {.r}                           o       o                    o          \n6   rev  r                                                        o          \n   Rstudio.4\n1 qmd visual\n2          o\n3          o\n4           \n5          o\n6          o\n```\n:::\n\n```{.r .cell-code}\nknitr::kable(data, \"pipe\", align = \"c\")\n```\n\n::: {.cell-output-display}\n| Programm | VS_code | VS_code.1 | VS_code.2 | Rstudio | Rstudio.1 | Rstudio.2  | Rstudio.3 | Rstudio.4  |\n|:--------:|:-------:|:---------:|:---------:|:-------:|:---------:|:----------:|:---------:|:----------:|\n|   type   |   md    |    Rmd    |    qmd    |   md    |    Rmd    | Rmd visual |    qmd    | qmd visual |\n|    r     |    o    |     o     |     o     |         |           |     o      |           |     o      |\n|    .r    |         |           |           |         |           |            |           |     o      |\n|   {r}    |         |           |     o     |    o    |     o     |            |     o     |            |\n|   {.r}   |         |           |     o     |    o    |           |     o      |           |     o      |\n|  rev  r  |         |           |           |         |           |     o      |           |     o      |\n:::\n\n```{.r .cell-code}\nknitr::kable(data, \"simple\", align = \"c\")\n```\n\n::: {.cell-output-display}\nProgramm    VS_code    VS_code.1    VS_code.2    Rstudio    Rstudio.1    Rstudio.2     Rstudio.3    Rstudio.4  \n----------  ---------  -----------  -----------  ---------  -----------  ------------  -----------  ------------\n   type        md          Rmd          qmd         md          Rmd       Rmd visual       qmd       qmd visual \n    r           o           o            o                                    o                          o      \n    .r                                                                                                   o      \n   {r}                                   o           o           o                          o                   \n   {.r}                                  o           o                        o                          o      \n  rev  r                                                                      o                          o\n:::\n\n```{.r .cell-code}\nknitr::kable(data, \"html\", align = \"c\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:center;\"> Programm </th>\n   <th style=\"text-align:center;\"> VS_code </th>\n   <th style=\"text-align:center;\"> VS_code.1 </th>\n   <th style=\"text-align:center;\"> VS_code.2 </th>\n   <th style=\"text-align:center;\"> Rstudio </th>\n   <th style=\"text-align:center;\"> Rstudio.1 </th>\n   <th style=\"text-align:center;\"> Rstudio.2 </th>\n   <th style=\"text-align:center;\"> Rstudio.3 </th>\n   <th style=\"text-align:center;\"> Rstudio.4 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:center;\"> type </td>\n   <td style=\"text-align:center;\"> md </td>\n   <td style=\"text-align:center;\"> Rmd </td>\n   <td style=\"text-align:center;\"> qmd </td>\n   <td style=\"text-align:center;\"> md </td>\n   <td style=\"text-align:center;\"> Rmd </td>\n   <td style=\"text-align:center;\"> Rmd visual </td>\n   <td style=\"text-align:center;\"> qmd </td>\n   <td style=\"text-align:center;\"> qmd visual </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> r </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> .r </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> {r} </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> {.r} </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> rev  r </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> o </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\nknitr::kable(data, \"latex\", align = \"c\")\n```\n\n::: {.cell-output-display}\n\\begin{tabular}{c|c|c|c|c|c|c|c|c}\n\\hline\nProgramm & VS\\_code & VS\\_code.1 & VS\\_code.2 & Rstudio & Rstudio.1 & Rstudio.2 & Rstudio.3 & Rstudio.4\\\\\n\\hline\ntype & md & Rmd & qmd & md & Rmd & Rmd visual & qmd & qmd visual\\\\\n\\hline\nr & o & o & o &  &  & o &  & o\\\\\n\\hline\n.r &  &  &  &  &  &  &  & o\\\\\n\\hline\n\\{r\\} &  &  & o & o & o &  & o & \\\\\n\\hline\n\\{.r\\} &  &  & o & o &  & o &  & o\\\\\n\\hline\nrev  r &  &  &  &  &  & o &  & o\\\\\n\\hline\n\\end{tabular}\n:::\n\n```{.r .cell-code}\nknitr::kable(data, \"rst\", align = \"c\")\n```\n\n::: {.cell-output-display}\n========  =======  =========  =========  =======  =========  ==========  =========  ==========\nProgramm  VS_code  VS_code.1  VS_code.2  Rstudio  Rstudio.1  Rstudio.2   Rstudio.3  Rstudio.4 \n========  =======  =========  =========  =======  =========  ==========  =========  ==========\n  type      md        Rmd        qmd       md        Rmd     Rmd visual     qmd     qmd visual\n   r         o         o          o                              o                      o     \n   .r                                                                                   o     \n  {r}                             o         o         o                      o                \n  {.r}                            o         o                    o                      o     \n rev  r                                                          o                      o     \n========  =======  =========  =========  =======  =========  ==========  =========  ==========\n:::\n\n```{.r .cell-code}\nstr(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t6 obs. of  9 variables:\n $ Programm : chr  \"type\" \"r\" \" .r\" \" {r}\" ...\n $ VS_code  : chr  \"md\" \"o\" \"\" \"\" ...\n $ VS_code.1: chr  \"Rmd\" \"o\" \"\" \"\" ...\n $ VS_code.2: chr  \"qmd\" \"o\" \"\" \"o\" ...\n $ Rstudio  : chr  \"md\" \"\" \"\" \"o\" ...\n $ Rstudio.1: chr  \"Rmd\" \"\" \"\" \"o\" ...\n $ Rstudio.2: chr  \"Rmd visual\" \"o\" \"\" \"\" ...\n $ Rstudio.3: chr  \"qmd\" \"\" \"\" \"o\" ...\n $ Rstudio.4: chr  \"qmd visual\" \"o\" \"o\" \"\" ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Error: Values are not numeric. \n# ! Can't subset columns with `data`.\n# ✖ `data` must be numeric or character, not a <data.frame> object.\n# ! Arguments in `...` must be used.\n\n\nlibrary(tidyverse)\ndata_long <- data %>%\n  pivot_longer(\n    data,\n    2:9,\n    names_to = \"Programm\",\n    values_to = \"values\"\n  )\n```\n:::\n\n\n#### Convert wide data frame to long data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n# Example wide data frame\nwide_df <- data.frame(\n  id = c(1, 2, 3),\n  var1 = c(10, 20, 30),\n  var2 = c(40, 50, 60),\n  var3 = c(70, 80, 90)\n)\n\n\nwide_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id var1 var2 var3\n1  1   10   40   70\n2  2   20   50   80\n3  3   30   60   90\n```\n:::\n\n```{.r .cell-code}\n# Convert wide data frame to long\nlong_df <- wide_df %>%\n  pivot_longer(\n    cols = starts_with(\"var\"),  # Specify the columns to pivot\n    names_to = \"variable\",      # Name of the new variable column\n    values_to = \"value\"         # Name of the new value column\n  )\n\n# View the resulting long data frame\nprint(long_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 3\n     id variable value\n  <dbl> <chr>    <dbl>\n1     1 var1        10\n2     1 var2        40\n3     1 var3        70\n4     2 var1        20\n5     2 var2        50\n6     2 var3        80\n7     3 var1        30\n8     3 var2        60\n9     3 var3        90\n```\n:::\n\n```{.r .cell-code}\nknitr::kable(wide_df, \"pipe\", align = \"c\")\n```\n\n::: {.cell-output-display}\n| id | var1 | var2 | var3 |\n|:--:|:----:|:----:|:----:|\n| 1  |  10  |  40  |  70  |\n| 2  |  20  |  50  |  80  |\n| 3  |  30  |  60  |  90  |\n:::\n\n```{.r .cell-code}\nknitr::kable(long_df, \"pipe\", align = \"c\")\n```\n\n::: {.cell-output-display}\n| id | variable | value |\n|:--:|:--------:|:-----:|\n| 1  |   var1   |  10   |\n| 1  |   var2   |  40   |\n| 1  |   var3   |  70   |\n| 2  |   var1   |  20   |\n| 2  |   var2   |  50   |\n| 2  |   var3   |  80   |\n| 3  |   var1   |  30   |\n| 3  |   var2   |  60   |\n| 3  |   var3   |  90   |\n:::\n:::\n\n\n#### Change language of R and Rstudio\n\n> Requires re-start app.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set r environment to english\n\nSys.setenv(LANG = \"en\")\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\ndefaults write org.R-project.R force.LANG en_US.UTF-8  # 英語表示\n\n```\n:::\n\n\n------------------------------------------------------------------------\n\n### Shell_Core\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Run in the old version of \n\n# ===== Before upgrade =====\n\n# ------1. Update all old packages ----------\n\n# Check R version or session info.\nR.Version()\nsessionInfo()\n\n# A. Update current packages.\nupdate.packages(checkBuilt=TRUE, ask=FALSE)  #check spelling of arguments\n## 20230608: The downloaded binary packages are in:  /var/folders/1v/nbx_5tgn553dq8s639lyln5c0000gn/T//Rtmpt7WwKz/downloaded_packages\n\n# B. Upgrade packages of Bioconductor\n# Install packages from a newer version of Bioconductor https://www.bioconductor.org/install/ \nif (!require(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\n# BiocManager::install(version = \"3.17\") # Or the newest version\nBiocManager::install(\"Biobase\")\nBiocManager::install(\"BiocGenerics\")\n\n# if error,  re-install: 'Biobase'Old packages: 'learnr'\ninstall.packages(\"learnr\")\n\n# ------ 2. Save backup of old packages and preferences ----\n# 2. Before you upgrade: 1. build and save a file with all current packages (old packages) and 2. Backup your rstudio preferences files.  \n\n# ---- 2.1 Variables / info ----\n# Run paths and pc`s info\n# ~/path/to/folder \"~\" doesn't work?\n\npdir <- \"/Box Sync/Github/RStudio_shared/R_packages/\" # Path to directory\npth15 <- \"/Users/Marcelo-Rosales\" # MBP15\npth20 <- \"/Users/marcelorosales\"  # MBP20\npc15 <- \"MBP15\"\npc20 <- \"MBP20\"\n\np15 <- paste0(pth15,pdir)  # MBP15 destination folder\np20 <- paste0(pth20,pdir)  # MBP20 destination folder\n\nrpref <- \"/.config/rstudio/rstudio-prefs.json\" # ~ Location of preferences.json\n# rprefd <- \"/Box Sync/Github/RStudio_shared/RS_preferences/\" # destination folder\npref15 <- paste0(pth15,rpref)\npref20 <- paste0(pth20,rpref)\n\n# Run paths and pc`s info\n#--- 2.2 Variables manual imput ----\nlibrary(stringr)\nSys.Date()\nSys.time()\ngsub(\"-\",\"\",Sys.Date())\nstr_sub(gsub(\"-\",\"\",Sys.Date()), 3, -1) # https://youtu.be/343VCX3ynOA\n\ndate <- \"230608\"   # <--------------------- change date (file name) here (manual).\ndate <- str_sub(gsub(\"-\",\"\",Sys.Date()), 3, -1)   # date auto.\nfolder <- p20      # <--------------------- change destination folder (path) here.\npc <- pc20         # <--------------------- change PC (device name) here.\nrs_pref <- pref20  # <--------------------- change r prefs location here.\n\nnew_folder <- paste0(\"Rpkgs\",date,\"/\")   \nfile_name <- paste0(\"Rpkgs_\",pc,\"_\",date)   \nrda <- \".rda\"\ncsv <- \".csv\"\ndf <- \"_df\"\nxlsx <- \".xlsx\"\n\nrpref.json <- paste0(\"rstudio-prefs_\", pc,\"_\", date, \".json\") # .json file name\nsource_path <- paste0(rs_pref)\ndestination_path <- paste0(folder,new_folder,rpref.json)  # Place after the creation of the folder var.\n\n\nsystem(paste(\"open\", shQuote(folder)))\n\n\n## Check Destination folder\ndate\nfolder\nnew_folder\nfile_name\npc\nrs_pref\n\n## Create a new folder for packages files... use paste0(), paste() inserts a space between obj.\ndir.create(paste0(folder,new_folder)) \n\n## Create file names (only), extensions and path to folder. \nfile1 <- paste0(folder,new_folder,file_name) \nfile.rda <- paste0(folder,new_folder,file_name,rda)\nfile.csv <- paste0(folder,new_folder,file_name,csv)\nfile.csv2 <- paste0(folder,new_folder,file_name,df,csv)\nfile.xlsx <- paste0(folder,new_folder,file_name,xlsx)\n\nfile1\nfile.rda\nfile.csv\nfile.csv2\nfile.xlsx\n\n#--------- 2.3 Create files ----------\n\n# Ways to create and save Packages (old Rpkgs)\ntmp <- installed.packages()                         # <--- Matrix\ntemp2 <- installed.packages()[,\"Package\"]           # <--- Vector\ntemp3 <- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1]) # <--- Vector\ntemp4 <- as.data.frame(installed.packages())        # <--- Dataframe\ntemp5 <- as.data.frame(installed.packages()[,\"Package\"])\n\n# Which script to use?...\n# 1.  \nas.vector(tmp[is.na(tmp[,\"Priority\"]), 1]) # Is currently the most common script.\n# a) is.na(tmp[,\"Priority\"]) checks for missing or NA (Not Available) values in the \"Priority\" column. Returns a logical \"vector\" where TRUE = NA values and FALSE = non-NA values.\n# b) It will return only NA rows. \n# b) Non-NA rows are the default installed packages at clean/new start of program. \n# c) Is NOT very good for comparing files good.\n\n# 2. \nas.data.frame(installed.packages()[,\"Package\"]) # Vector of only the packages column\n# a) It will return a df of only the packages column, but will include all packages\n# b) DF can be saved as csv files, very easy to compare with VS code \"File: Compare...\"\n\n\n#=====2.3.1 PASTE FILE NAME!!! to each file type.====\nprint(file_name)\n# [1] \"Rpkgs_MBP15_230612\" <-----------------------------Copy/Paste from console.\n\n## No extension\nRpkgs_MBP20_230612 <- installed.packages()[,\"Package\"] # This is a temp file. \nsave(Rpkgs_MBP20_230612, file= file1) \n\n## As .rda file\ntmp <- installed.packages() # save in environment as data (dataframe?)\nRpkgs_MBP20_230612_rda<- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1]) # save as vector package names.\nsave(Rpkgs_MBP20_230612_rda, file= file.rda)\n\ntmp2 <- as.vector(installed.packages()[,\"Package\"])\ntmp3 <- as.data.frame(installed.packages()[,\"Package\"])\n\n\n## As .csv file requires a dataframe.  \n### 1. Only the Package column variable (as vector?), or 2. as full csv data frame.  \nRpkgs_MBP20_230612_csv <- installed.packages()[,\"Package\"] \nRpkgs_MBP20_230612_df <- as.data.frame(installed.packages()) \nwrite.csv(Rpkgs_MBP20_230612_csv, file= file.csv)\nwrite.csv(Rpkgs_MBP20_230612_df, file= file.csv2)\n\n## As as excel files also requires a dataframe (df)\n### install.packages(\"writexl\")\nlibrary(\"writexl\")\nRpkgs_MBP20_230612_df <- as.data.frame(installed.packages()) # same as in df_csv\nwrite_xlsx(Rpkgs_MBP20_230612_df, file.xlsx)\n\n# Copy/Paste Rstudio global settings and preferences (~/.config/rstudio/rstudio-prefs.json)\n\n## Open folder \nfolder\nnew_folder\nsystem(paste(\"open\", shQuote(folder))) # seems like \"~/path\" does not work on rstudio. \nsystem(paste(\"open\", shQuote(paste0(folder, new_folder))))\n\n## Copy a file (direct).\n\nfile.copy(source_path, destination_path, overwrite = FALSE) # overwrites old file.\n\n# If: [1] TRUE, file was copied\n# If: [1] FALSE, file was not copied, error might be that the file already exists (change overwrite = TRUE, or paths not correct.)\n# Another way to do it, see Stack overflow 2 section. \n\n# ------ 3. Install the new version of R (use homebrew).------\n\n# Close R and Rstudio!! RUN in terminal better.\n\n# {bash filename=\"Terminal\"}\n#| eval: false \n\n# Upgrade R and rstudio\nbrew update\nbrew upgrade --cask r\nbrew reinstall --cask r  \n\nsystem(\"brew update\")\nsystem(\"brew update\", intern = TRUE) # Setting intern = TRUE captures the output of the command and returns it as a character vector in R. \n# password\n#`brew cleanup` has not been run in the last 30 days, running now...\n\n# Upgrade RStudio\nbrew upgrade --cask rstudio\n\n# ------ After upgrade -----\n\n# 4. Once the new version up and running, reload the saved packages and re-install them from CRAN\n\n# run in the new version/device\n\n#--- 4. Reload Variables and files ------\n\npdir <- \"/Box Sync/Github/RStudio_shared/R_packages/\" # Path to directory\npth15 <- \"/Users/Marcelo-Rosales\" # MBP15\npth20 <- \"/Users/marcelorosales\"  # MBP20\npc15 <- \"MBP15\"\npc20 <- \"MBP20\"\n\np15 <- paste0(pth15,pdir)  # MBP15 destination folder\np20 <- paste0(pth20,pdir)  # MBP20 destination folder\n\nrpref <- \"/.config/rstudio/rstudio-prefs.json\" # ~ Location of preferences.json\n# rprefd <- \"/Box Sync/Github/RStudio_shared/RS_preferences/\" # destination folder\npref15 <- paste0(pth15,rpref)\npref20 <- paste0(pth20,rpref)\n\n# Run paths and pc`s info\n## Variables:\ndate <- \"230609\"   # <--------------------- change date (file name) here.\ndate <- str_sub(gsub(\"-\",\"\",Sys.Date()), 3, -1)   # date auto.\nfolder <- p20      # <--------------------- change destination folder (path) here.\npc <- pc20         # <--------------------- change PC (device name) here.\nrs_pref <- pref20  # <--------------------- change r prefs location here.\n\nnew_folder <- paste0(\"Rpkgs\",date,\"/\")   \nfile_name <- paste0(\"Rpkgs_\",pc,\"_\",date)   \nrda <- \".rda\"\ncsv <- \".csv\"\ndf <- \"_df\"\nxlsx <- \".xlsx\"\n\nrpref.json <- paste0(\"rstudio-prefs_\", pc,\"_\", date, \".json\") # .json file name\nsource_path <- paste0(rs_pref)\ndestination_path <- paste0(folder,new_folder,rpref.json)  # Place after the creation of the folder var.\n\n# file1 <- paste0(folder,new_folder,file_name) \nfile.rda <- paste0(folder,new_folder,file_name,rda)\n# file.csv <- paste0(folder,new_folder,file_name,csv)\n# file.csv2 <- paste0(folder,new_folder,file_name,df,csv)\n# file.xlsx <- paste0(folder,new_folder,file_name,xlsx)\n\n# file1\nfile.rda\n# file.csv\n# file.csv2\n# file.xlsx\n\n#---- 5. Load old packages list ------\n\nsystem(paste(\"open\", shQuote(folder)))\n\n#---- 5.1 \"new\" (base) vs \"old\" (backup) pkgs differences installation----\n\n#load(installedpkgs_old)\n\nfile.rda\nfile_name_rda <- paste0(file_name,\"_rda\")\nfile_name_rda\n\nload(file.rda) # will load as Rpkgs_MBP20_230612_rda\n\ninstalledpkgs_old <- Rpkgs_MBP20_230612_rda # .rda\n\ntmp <- installed.packages()\ninstalledpkgs_new <- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1])\nmissing <- setdiff(installedpkgs_old, installedpkgs_new)\nmissing\ninstall.packages(missing)\nupdate.packages()\n\n\n#------ 5.2 \"pc1\" vs \"pc2\" pkgs differences install ----\n\nfile.rda　# pc1.\nload(file.rda) # will load as Rpkgs_MBP20_230612_rda\n\npc2 <- \"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230612/Rpkgs_MBP15_230612.rda\"\nload(pc2) # will load as Rpkgs_MBP15_230612_rda\n\nmissing2 <- setdiff(Rpkgs_MBP20_230612_rda, Rpkgs_MBP15_230612_rda)\nmissing2\n# [1] \"Biobase\"      \"BiocGenerics\"\n\nrm(Rpkgs_MBP15_230612_rda)\nrm(Rpkgs_MBP20_230612_rda)\n\n\n#----- 5.3 Install \"Bioconductor\" packages -----\n\n## Packages from Bioconductor (before or after Rpackages install?)\n## Install packages from a newer version of Bioconductor https://www.bioconductor.org/install/\nif (!require(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\n# BiocManager::install(version = \"3.17\") # Or the newest version\nBiocManager::install(\"Biobase\")\nBiocManager::install(\"BiocGenerics\")\n\n# if error,  re-install: 'Biobase'Old packages: 'learnr'\ninstall.packages(\"learnr\")\n\n\n#----- 5.4 Install packages short code\n\n# for (p in setdiff(installedpkgs_old, installed.packages()[,\"Package\"]))\n#   install.packages(p)\n\n\n\n\n#-----6. Compare csv files -----\n\n# 6.1 Open csv files in VS code\npath_csv <- paste0(p20, new_folder)\nsystem(paste(\"open\", shQuote(path_csv)))\n\n# Select csv for pc1 and pc2 > drag to VS code icon > ....[]... will open in VS code\n# In VS code: Select pc1 > cmd + p ...[]... > File: Compare Active File With...\n\n\n# ------ 7. copy paste preferences. -------\n```\n:::\n\n\n------------------------------------------------------------------------\n\n220830\n\n### Create Files&Dirs in R\n\n[How to Create Files and Directories in R - R-Lang](https://r-lang.com/how-to-create-files-and-directories-in-r/)\n\nHow to Create a **directory** in R To create a directory in R, use the dir.create() method. The dir.create() method accepts a folder generated in the current working directory or specifies a path. Before working with files, it's a better idea to know what directory you're working in. In R, you can figure out which directory you are working on the getwd() function.\n\nSyntax\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndir.create(path, showWarnings = TRUE, recursive = FALSE, mode = \"0777\")\n```\n:::\n\n\nArguments\n\npath: It is a character vector containing a single path name.\\\npaths: They are character vectors containing file or directory paths.\\\nshowWarnings: It is a logical argument; should the warnings on failure be shown?\\\nrecursive: It is a logical argument. Should elements of the path other than the last be created? If true, like the Unix command mkdir -p.\\\nmode: It will be used on Unix-alikes: it will be coerced by as.octmode. For Sys.chmod, it is recycled along paths.\n\nReturn Value\\\nThe dir.create() function returns an invisibly logical vector indicating if the operation succeeded for each of the files attempted.\n\nExample Before creating a folder in R, you need to check if the same-named folder exists. To check if the folder exists, use the file.exists() method. Then if it does not exist, you can create a folder.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfolder <- \"mortalkombat\"\nif (file.exists(folder)) {\n cat(\"The folder already exists\")\n} else {\n dir.create(folder)\n}\n```\n:::\n\n\nIf the folder does not exist, then it will create a new directory for you.\n\nTrailing path separators are discarded. On Windows, drives are allowed in the path specification, and unless the path is rooted, it will be interpreted relative to the current directory on that drive. The mode is ignored on Windows.\n\n#### Create a file in R\n\nTo create a file in R programmatically, use the file.create() method. The file.create() function creates files with the given names if they do not already exist and truncates them if they do.\n\nSyntax\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile.create(x, showWarnings = TRUE)\n```\n:::\n\n\nParameters ..., file1, file2: They are character vectors containing file names or paths.\n\nExample\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile <- \"dataframe.R\"\nif (file.exists(file)) {\n cat(\"The file already exists\")\n} else {\n file.create(file)\n}\n```\n:::\n\n\nOutput \\[1\\] TRUE\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"rChoiceDialogs\")\ninstall.packages(\"rJava\")\n\nlibrary(rChoiceDialogs)\ntk_choose.dir()\n```\n:::\n\n\nworks only on linux/mac not windows.\n\ntk_choose.dir {tcltk}\n\n#### Function to make symlinks.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nln -s /path/to/original /path/to/link \n\n# upadate:\n\nln -s \"/Users/name/My Files\" \"/Users/name/Desktop/My Link\"\n```\n:::\n\n\n1.  Choose a file\\\n2.  choose a folder\\\n3.  create symlink \\<In r there is a command already.\\>\n\n-   paste name of original file\n\n1.  In \\>\\_?\n\n\n::: {.cell}\n\n```{.bash .cell-code}\npwd\ncd /Users/rosalesrocabadomarcelo/Documents/GitHub/tests\npwd\ntouch test.txt\nls\n#rm test.txt\n#ls\n```\n:::\n\n\n[Select file from command-line](https://apple.stackexchange.com/questions/399510/select-file-from-command-line)\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ntheSelectedFile=\"$(osascript -l JavaScript -e 'a=Application.currentApplication();a.includeStandardAdditions=true;a.chooseFile({withPrompt:\"Please select a file to process:\"}).toString()')\"\n\necho \"Selected file: $theSelectedFile\"\n```\n:::\n\n\n1.  With in R and Rstudio.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile.choose()\n```\n:::\n\n\n`file.choose()` is a {base} function, it works by itself, does not need a package to work.\n\nHowever, for choosing directories:\n\nThe `choose.dir`, from the utils package Choose a Folder Interactively on MS Windows only. Not mac.\n\nFor mac an Unix, use `tk_choose.dir()` form {tcltk} package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tcltk)\ntk_choose.dir()\n```\n:::\n\n\nFor multiplataform usage, create a custom function in the global environment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchoose_directory = function(caption = 'Select data directory') {\n  if (exists('utils::choose.dir')) {\n    choose.dir(caption = caption) \n  } else {\n    tk_choose.dir(caption = caption)\n  }\n}\n```\n:::\n\n\nThen use it as a function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchoose_directory()\n```\n:::\n\n\nHow to Create Files and Directories in R - R-Lang\n\nWindows\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()\nsetwd(choose.dir)\nfolder <- \"test\"\nif (file.exists(folder)) {\n cat(\"The folder already exists\")\n} else {\n dir.create(folder)\n}\n```\n:::\n\n\nMac\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()\nsetwd(tk_choose.dir())\nfolder <- \"test\"\nif (file.exists(folder)) {\n cat(\"The folder already exists\")\n} else {\n dir.create(folder)\n}\n```\n:::\n\n\nMac&Windows\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()\nsetwd(choose_directory())\nfolder <- \"test\"\nif (file.exists(folder)) {\n cat(\"The folder already exists\")\n} else {\n dir.create(folder)\n}\n```\n:::\n\n\nInteractively, choose a folder.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (interactive()) tk_choose.dir(getwd(), \"Choose a suitable folder\")\n```\n:::\n\n\n1.  Create symlink\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile.symlink(tk_choose.files(), tk_choose.dir())\n```\n:::\n\n\nSee files {base}\\\nR Documentation File Manipulation\n\n------------------------------------------------------------------------\n\n[top](#)\n\n## Install python\n\n### Install python with brew\n\n``` bash\n#| eval: false\n\nbrew install python@3.8 \nbrew install python3\nbrew install pyenv\nbrew install jupyter\n\n# Check ojs\nwhich ojs   \n\n# To run python in r install packages require, ex. \npip install numpy\npip install matplotlib\n```\n\nAndrea Cirillo's updateR package. T\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"devtools\")\ndevtools::install_github(\"AndreaCirilloAC/updateR\")\nupdateR(admin_password = \"PASSWORD\") # Where \"PASSWORD\" stands for your system password\n```\n:::\n\n\n------------------------------------------------------------------------\n\n[top](#)\n\n## VS code\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ifTF3ags0XI\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[25 VS Code Productivity Tips and Speed Hacks](https://www.youtube.com/watch?v=ifTF3ags0XI)\n\n**VS Code key shortcuts**\\\nShft+Cmd+P » show all commands, search key shortcuts.\\\nCmd+P » Go to file (open).\\\nCmd+W » close file.\\\nCont+Tab » Switch between Tabs/Pages.\\\nShift+Cmd+F » Find in File.\\\nF5 » Start debugging.\\\nCont+\\` » Toggle Terminal.\\\nshift+Cmd+X » Extensions.\n\n**VS Indentation**\\\nI had a problem with intending. The default `Command+]` is set to 4 and I wanted it to be 2. Installed \"Indent 4-to-2\" but it changed the entire file and not the selected text. I changed the tab spacing in settings and it was simple.\n\n`Go to Settings` -\\> `Text Editor` -\\> `Tab Size`\n\n[Don't Use the Sidebar in VS Code!! vid](https://youtu.be/s3H6PmB4SZ4)\n\nExtensions Recomended:\n\n-   Advanced-new-file by patbenatar.\\\n-   File Utils by Steffen Leistner.\n\n**Setting Sync** on: Account -\\> Github.\n\n### Extensions installed\n\nHow to install extension: -\\> Open VS code \\> Extensions (shift+Cmd+X) \\> search: extension name \\> ©Install button.\\\nTop 40+ VSCode Extensions for Developers in 2022 [Link](https://www.tabnine.com/blog/top-vscode-extensions/)\\\n[Top 10 VSCode extensions to use in 2022](https://www.educative.io/blog/top-vscode-extensions)\n\n-   **Markdown-preview-enhanced** by Yiyi Wang.\\\n-   **Live Preview** by Microsoft [vid](https://youtu.be/hDh1rGG0pTQ)\\\n-   **Markdown All in One** by Yu Zhang, [link](https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one)\\\n    +**Markdown AutoTOC** by Jim Paton [link](https://marketplace.visualstudio.com/items?itemName=wibblemonkey.markdown-auto-toc) Not working.\\\n    +**Auto Markdown TOC** by Hunter Tran [link](https://marketplace.visualstudio.com/items?itemName=huntertran.auto-markdown-toc) \\[ü\\] √\\\n-   **R** by REditorSupport\\\n-   **GitLens --- Git supercharged** by GitKraken\\\n-   **YAML** by Red hat.\\\n-   **Auto Rename Tag** by TabNine.\\\n-   **Peacock** by John Papa.\\\n-   **Colorize** by kamikillerto.\\\n-   **Code Runner** by Jun Han. To run only a small snippet of code.\\\n-   **Auto rename tag** by Jun Han.\\\n-   **Excel Viewer** by GrapeCity\n-   ~~**Vim** by vscodevim (need this emulator? Probably not, it just gives you some special shortcuts **do not install**).~~\n\n> Warning. This extension will Override Rich Text Copy/Paste of VS. **Copy and Paste code into Word, Ignores Syntax Highlighting** (When copy code and paste in Word, code colors will no longer be applied).\n\n> 1.  Make sure that // Code \\> Preferences\\> Settings \\> Text Editor \\> √ **Editor: Copy With Syntax Highlighting** **(is checked)**. Controls whether syntax highlighting should be copied into the clipboard.\n\n> 1.  To solve: shift+Cmd+P \\> type: copy \\> in: Vim: !© Override Copy **(uncheck vim override copy)**. Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.\n\n[top](#)\n\n### VS Setting tips\n\n-   **Indentation settings and the indentation status bar entry**\\\n    Footer: right // Tab Sizeˇ (Spaces:\\~) \\> Indent using tabs \\> © 2. (or Cmd+Shift+p \\> indent using spaces) Convert indentation to tab/spaces:\\\n    Footer: right // Tab Sizeˇ \\> Convert indentation to Spaces \\|\\| Convert indentation to Tabs.\\\n    or\n\nVS code panel \\> R© \\> Format document \\>\n\n-   [HTML preview in VS Code](https://youtu.be/kIH1Pyk-bwQ)\n\n    -   Live Server by Ritwick Dey (Opens in Web browser only).\\\n    -   HTML Preview by Thomas Haakon Townsend (Deprecated).\\\n    -   [Markdown preview enhanced](https://shd101wyy.github.io/markdown-preview-enhanced/#/). Check out shd101wyy/markdown-preview-enhanced (Public).\n\n-   **Unsplit an editor**, go back from 2 code views to 1, same with terminal. [Link](https://stackoverflow.com/questions/50355987/how-do-you-unsplit-an-editor-go-back-from-2-code-views-to-1-same-with-terminal)\\\n    To \"unsplit\" [editor groups](https://code.visualstudio.com/docs/getstarted/userinterface#_editor-groups) **without closing any open files**, use the menu-bars:\\\n    View \\> Editor Layout \\> Single (or, while in the editor, press and release ALT and then type vls).\\\n    Editor groups are also closed by default when they become empty.\n\n-   **Wrap code**\\\n    Settings » Cmd+, //Code \\> Preferences \\> Settings \\> Editor: Word Wrap Controls how lines should wrap.\n\n-   **Enable minimap**\n\nTo enable VS Code's Minimap, set **\"editor.minimap.enabled\"**: true to turn on the rendering of a Minimap for the current file.\n\nYou can also tune the appearance with the Size (editor.minimap.size), Scale (editor.minimap.scale), and Slider (editor.minimap.showSlider) settings. If the minimap is hidden, you can still display the context menu by right-clicking the side gutter.\n\n**Command Center**\n\n++cmd+\",\"++\n\nThe Command Center has been polished and is now ready to be tried. Enable it via `window.commandCenter` setting.\n\n**Terminal Shell integration**\\\nShell integration for PowerShell, bash, and zsh that has been in preview since the January release is now out of preview! We're planning on enabling it by default in the 1.70 release.\n\nTo enable the shell integration feature, check Terminal \\> Integrated \\> Shell Integration : Enabled in the Settings editor or set the value in your settings.json:\n\n```         \nterminal.integrated.shellIntegration.enabled: true\n```\n\n**Updates:**\n\nJune 2022 (version 1.69)\\\nWelcome to the June 2022 release of Visual Studio Code. There are many updates in this version that we hope you'll like, some of the key highlights include:\n\n-   [3-way merge editor](https://code.visualstudio.com/raw/#3-way-merge-editor) - Resolve merge conflicts within VS Code.\n-   [Command Center](https://code.visualstudio.com/raw/#command-center) - New UI to search files, run commands, and navigate cursor history.\n-   [Do Not Disturb mode](https://code.visualstudio.com/raw/#do-not-disturb-mode) - Silence non-critical notification popups.\n-   [Toggle Light/Dark themes](https://code.visualstudio.com/raw/#toggle-between-light-and-dark-themes) - Quickly switch between preferred light and dark themes.\n-   [Terminal shell integration](https://code.visualstudio.com/raw/#shell-integration) - Display command status, run recent commands, and more.†\n-   [Task output decorations](https://code.visualstudio.com/raw/#decorations) - Highlights task success or failure exit codes.\n-   [Git Commit action button](https://code.visualstudio.com/raw/#commit-action-button-for-git-repositories) - Configure your default Git Commit action.\n-   [Debug Step Into Target support](https://code.visualstudio.com/raw/#improved-step-into-target-ui) - Allows you to step directly into functions when paused.\n-   [JavaScript sourcemap toggling](https://code.visualstudio.com/raw/#javascript-debugging) - Switch to debugging compiled rather than source code.\n-   [Color theme tester](https://code.visualstudio.com/raw/#theme-tester-supports-built-in-themes) - Use vscode.dev to preview color themes.\n-   [VS Code Server preview](https://code.visualstudio.com/raw/#vs-code-server-private-preview) - Run the same server used for Remote Development.\n\n**Types of comments:**\n\n```         \n1.  Single-line comment.\\\n    Syntax\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This is a single line comment\n```\n:::\n\n\n1.  Multi-line comment?.\n\nSyntax:\n\n``` bash\n#| eval: false\n\n: '\nThis is a\nMulti-line comments'\nExample:\necho \"multiline comments\"\n: '\nPrint some word'\n```\n\n**Types of codes?**\n\n------------------------------------------------------------------------\n\n### Markdown and Visual Studio Code\n\n[Markdown Basic Syntax](https://www.markdownguide.org/basic-syntax/)\\\n[Markdown Cheatsheet](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)\n\n#### VS md Extensions & Syntax\n\n[Markdown and Visual Studio Code](https://code.visualstudio.com/docs/languages/markdown)\n\n-   markdownlint : Checks md code errors {== uninstalled==}{\\>\\> too many corrections clutter \\<\\<}\\\n-   Markdown Shortcuts: Usefull key shortcuts {==available with right click==}\\\n-   Markdown Theme Kit: {== uninstalled==}\n-   Print: {== Not installed ==}\n\n!!! info inline {++ addition ++}\\\n{\\>\\> visible comment \\<\\<}\\\n{-- deletion --}\\\n{== highlight==}{\\>\\> comment \\<\\<}\\\n{\\~\\~ substitution \\~\\> by \\~\\~}\n\nCode Without the {\\>\\> \\<\\<} at the beginning and end\n\n```         \n{>>{++ addition ++}<<}  \n{>>{>> visible comment <<}<<}  \n{>>{-- deletion --}<<}  \n{>>{== highlight==}{>> visible comment <<}<<}  \n{>>{~~ substitution ~> by ~~}<<}  \n```\n\n------------------------------------------------------------------------\n\n!!! info inline ++ addition ++\n\n```         \n-- deletion --  \n== highlight ==   \n~~ substitution ~> by ~~ \n```\n\nCode does not work without the `{}`\n\n```         \n\n++ addition ++  \n>> visible comment <<  \n-- deletion --  \n== highlight ==  \n~~ substitution ~> by ~~  \n```\n\n------------------------------------------------------------------------\n\n!!! note inline ++addition++\n\n```         \n--deletion--  \n==highlight==   \n~~substitution~~ \n```\n\nSpaces also place a roll in results\n\n```         \n\n++addition++  \n>>visible comment<<  \n--deletion--  \n==highlight==  \n~~substitution~~  \n```\n\n------------------------------------------------------------------------\n\n#### Comments\n\n[Markdown-comments](https://stackoverflow.com/questions/4823468/comments-in-markdown#)\n\n1.  {% comment %}\\\n    These commments will not include inside the source. {% endcomment %}\n\n2.  <empty line> \\[comment\\]:: comment\n\n3.  <empty line> [whatever](text):: [whatever](text): comment is this true?\\\n    [whatever](text): : comment\\\n    [whatever](text): whatever comment\n\n4.  \n\nBut this mesage will appear!\n\n5.  \n\n\n::: {.cell}\n\n:::\n\n\n6.  {::comment} This text is completely ignored by kramdown - a comment in the text. {:/comment}\n\n7.  Do you see {::comment}this text{:/comment}? {::comment}some other comment{:/}\n\n8.  \n\n9.  <!-- this is a comment -->\n\n10. \n\n\n    ```{=html}\n    <!-- this is a comment \n    with a second,\n    a third,\n    and a 4th line of comment-->\n    ```\n\n    !!! check \"This works best\"\n\n```         \n<!-- this is a comment \nwith a second,\na third,\nand a 4th line of comment-->\n```\n\n11. `here's a comment`{=comment}\n\n#### Add images and links in Markdown by dragging a dropping\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/jpeh1WorrWM\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen>\n\n</iframe>\n\nhttps://www.youtube.com/watch?v=jpeh1WorrWM\n\n1.  find image file with the VSC explorer.\\\n2.  Drag image and take it over the current editor file or section\\\n3.  Hold down shift (while dragging) and drop to the editor\n\nSame procedure to add links to specific files.\n\n#### To reload a single file:\n\n1.  ⇧⌘P.\\\n2.  type \"Refresh\"\\\n3.  click on \"CSV: Refresh\"\\\n    You can also add a key shortcut.\n\n### VS Outline view (Headings toc)\n\nThe Outline view is a separate **==section in the bottom of the File Explorer==**. When expanded, it will show the symbol tree of the currently active editor. For Markdown files, the symbol tree is the Markdown file's header hierarchy.\n\n**VS Code tips --- Rename markdown headers and updating all links to them**\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/rpqABfuZAlU\" title=\"VS Code tips — Rename markdown headers and updating all links to them\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[**Collapse/Expand All items in Outline (Sidebar panel)**](https://github.com/microsoft/vscode/issues/146375)\n\n> Hold ++alt++ while pressing the expand/collapse arrow and it does that.\n\n### Trouble shooting\n\n#### Enter and Backspace do not work or are very slow to respond\n\nLook for reasons why this could happen:, I found this comment in vs code markdown:\n\n[Enter and Backspace do not work or are very slow to respond #855](https://github.com/yzhang-gh/vscode-markdown/issues/855)\n\nHi there, I might be able to add a bit of context. I'm seeing the same performance issues (on backspace and enter) that \\*\\*get resolved when I turn off Markdown: All in One's onBackspace and onEnter functional\n\n**Solution** https://github.com/yzhang-gh/vscode-markdown/issues/423\n\nCode \\> Settings \\> keyboard Shortcuts \\> Type: markdown \\> delete: onEnterKey, onBackspaceKey.\n\nIf you do not need the \"list continuation\" feature, you can delete some key bindings (e.g. onEnterKey, onBackspaceKey). See instructions at #88 (comment).\n\nIf you want to investigate more, you can check1 these extensions first, which are reported (probably) conflicting with Markdown-All-in-One:\n\n-   Spell Right\n-   Bracket Pair Colorizer 2\n\n1.  disable it and see whether the issue is gone\n\n------------------------------------------------------------------------\n\n[top](#)\n\n## Mac Word\n\n### How to\\`s\n\n[Generate Random Text](https://www.groovypost.com/howto/word-for-mac-2016-random-text/#:~:text=Unfortunately%2C%20Word%20for%20Mac%20doesn,and%20you%20need%20dummy%20content.)\n\nType `=rand()` and press enter.\n\n[top](#)\n\n### Custom keyboard shortcut\n\n[**Custom keyboard shortcut for Word for Mac.**](https://support.microsoft.com/en-au/office/create-a-custom-keyboard-shortcut-for-word-for-mac-3e865725-831c-4b45-9187-eeaf896fa110)\\\nYou can create custom keyboard shortcuts in Word for Mac within the application itself.\n\n#### Create a keyboard shortcut\n\nCreation of my shortcut for FontColorPicker » Cmd+Opt+Shft+F.\n\n1.  On the **Tools \\> Customize Keyboard \\> ...\\[\\]...**.\\\n2.  In the **Categories** list, select a tab name.\\\n3.  Alternatively, Type the command you are looking for in the **commands** search field. Then search by categories or in **All commands** to show that command from all categories.\\\n4.  In the **Commands** list, select the command that you want to assign a keyboard shortcut to.\n\n-   Any keyboard shortcuts that are currently assigned to the selected command will appear in the Current keys box.\\\n-   **Tip:** If you prefer to use a different keyboard shortcut, add another shortcut to the list, and then use it instead.\n\n1.  In the **Press new keyboard shortcut** box, type a key combination that includes at least one modifier key (CMD , CONTROL , OPTION , SHIFT ) and an additional key, such as CMD+ F11 .\n\n-   If you type a keyboard shortcut that is already assigned, the action assigned to that key combination appears next to Currently assigned to.\n\n1.  Select **Add**.\n\n-   Note: Keyboard shortcut descriptions refer to the U.S. keyboard layout. Keys on other keyboard layouts might not correspond to the keys on a U.S. keyboard. Keyboard shortcuts for laptop computers might also differ.\n\n#### Delete a custom keyboard shortcut\n\n1.  **// Tools \\> Customize Keyboard**.\\\n2.  In the **Categories** list, select a tab name.\\\n3.  In the **Commands** list, select the command that you want to delete a keyboard shortcut from.\\\n4.  In the **Current keys** box, select the keyboard shortcut that you want to delete, and then select **Remove**.\n\n-   **Note:** If the Remove button appears grayed out, then the selected keyboard shortcut is a default keyboard shortcut, thus it cannot be deleted.\n\n**Reset all keyboard shortcuts**\n\n1.  **// Tools \\> Customize Keyboard**.\\\n2.  To restore keyboard shortcuts to their original state, select **Reset All**.\n\n**Replace as you type**\\\n!© Bold (*bold*) and italic (*italic*) \\[or *italic*?\\] with real formatting.\\\n!© Hyphens (--) with a dash ( ).\\\n!© set left-and first-indent with tabs and backspaces\n\n#### Math symbols.\n\n//Preferences \\> Autocorect \\> Math AutoCorrect.\\\n© Use math autocorrect rules outside of math regions.\n\n**\\>** \\because  ∵ to **coz  ∵**\n\n##### Math Symbols List:\n\nRef: [Math notation](https://www.math.utah.edu/~schwede/MichiganClasses/math185/NotationAndTerminology.pdf)\n\nSymbol Key Meaning/original ∵ coz \\because ∴ \\therefore ∃ \\exists \\exists ∀ \\forall For all, for everyl ∆ \\inc Delta, change, triangle λ \\lambda Eigenvalues, Wavelength, percent variance, μ \\mu micro ∇ \\nabla Vector? ∋ \\ni under the condition that, contain ‖ \\norm Parallel, norm value or length of vector ∌ ν ν ∉ ν \\notelement, ν ν ν ν ω Ω \\omega last ⊖ \\ominus symmetric difference ∂ \\partial \\\\partial ⟡ \\phantom Diamond? ϕ \\phi \\\\phi π \\pi \\pi ⒨ \\pmatrix \\\\pmatrix ∑ \\sum \\\\sum × \\times \\\\times ⊤ \\top \\\\top\n\n| Symbol | Key        | Meaning/original                           |\n|--------|------------|--------------------------------------------|\n| ∵      | coz        | \\because                                   |\n| ∴      | \\therefore |                                            |\n| ∃      | \\exists    | \\exists                                    |\n| ∀      | \\forall    | For all, for everyl                        |\n| ∆      | \\inc       | Delta, change, triangle                    |\n| λ      | \\lambda    | Eigenvalues, Wavelength, percent variance, |\n| μ      | \\mu        | micro                                      |\n| ∇      | \\nabla     | Vector?                                    |\n| ∋      | \\ni        | under the condition that, contain          |\n| ‖      | \\norm      | Parallel, norm value or length of vector   |\n| ∌      | ν          | ν                                          |\n| ∉      | ν          | \\notelement, ν                             |\n| ν      | ν          | ν                                          |\n| ω Ω    | \\omega     | last                                       |\n| ⊖      | \\ominus    | symmetric difference                       |\n| ∂      | \\partial   | \\partial                                   |\n| ⟡      | \\phantom   | Diamond?                                   |\n| ϕ      | \\phi       | \\phi                                       |\n| π      | \\pi        | \\pi                                        |\n| ⒨      | \\pmatrix   | \\pmatrix                                   |\n| ∑      | \\sum       | \\sum                                       |\n| ×      | \\times     | \\times                                     |\n| ⊤      | \\top       | \\top                                       |\n\n##### 2 Spaces After Period\n\n//Preferences \\> Spelling and Grammar \\> Writing style \\> Settings \\> Space between Sentences ˇ \\> two spaces.\n\n::: callout-warning\n!!! warning Be careful to place the cursor on line with the correct doc language as the window option will be different according to the language.\n:::\n\n![image]()\n\nDoes not change auto correct, only check as spelling. Reverted to don't check.\n\n***Finally, Here***: **Disabling automatic periods after hitting double space bar:**\n\n![image]()\n\nMac//System Preferences \\> Keyboard \\>Text \\> !© Add period with double-space.\n\n***Disabling automatic bullet list and number:***\\\nWord// Preferences \\> Auto Correct \\>Autoformat as you type \\> !© Automatic bulleted list.\\\nWord// Preferences \\> Auto Correct \\>Autoformat as you type \\> !© Automatic number list.\n\n![image]()\n\n#### **Assigning key shortcuts to Symbols:**.\n\nWord//Insert \\> Advances Symbols \\> Search for symbol: Eg. Fonts \\> Windings \\> Check \\> Keyboard Shortcut \\> Press new keyboard shortcut \\> Assign \\>OK ü ++cont+shift+v++\n\n[99 Word Shortcuts for PC and Mac](https://www.goskills.com/Microsoft-Office/Shortcuts/Word/Selection).\n\n#### Custom Keyboard shortcuts (KS) list:\n\n**FontColor:** the KS will change the color font to red (only).\\\n**FontColorPicker:** the KS will change the color font to the one selected in the pallet.\n\n| Categories:  | Commands:       | New Keyboard shortcut: KS |\n|--------------|-----------------|---------------------------|\n| All Commands | FontColorPicker | Cmd+Opt+Sht+F             |\n\n[top](#)\n\n#### Key Shortcuts List\n\nFor Word and Command line.\n\n[232 Shortcuts for Microsoft Word](https://shortcutworld.com/Word/mac/Microsoft-Word_Shortcuts).\n\n| Command             | Key Shortcut                                |\n|---------------------|---------------------------------------------|\n| Font                | Cmd+Shift+F                                 |\n| Formatfont          | Cmd+D                                       |\n| GrowFont            | Cmd+Shift+\\>                                |\n| GrowFontOnePoint    | Cmd+\\]                                      |\n| ShrinkFont          | Cmd+Shift+\\<                                |\n| ShringkFontOnePoint | Cmd+ \\[                                     |\n| .                   | .                                           |\n| ApplyHeading1       | Cmd+Opt+1                                   |\n| ApplyHeading2       | Cmd+Opt+2                                   |\n| ApplyHeading3       | Cmd+Opt+3                                   |\n| ApplyListBullet     | Cmd+Shift+L                                 |\n| .                   | .                                           |\n| Bold                | Cmd+b ; Cmd+Shift+b ; Cont+B ; Cont+Shift+B |\n| BrowseNext          | Cmd+PgDwn                                   |\n| BrowsePrev          | Cmd+PggUp                                   |\n|                     | .                                           |\n| Cancel              | Cmd+. ; Esc                                 |\n| CenterPara          | Cmd+E                                       |\n| ChangeCase          | Shift+F3 ; Cmd+Opt+C                        |\n| CharLeft            | Left Arrow                                  |\n| CharLeftExtend      | Shift+LeftArrow                             |\n| CharRight           | Right Arrow                                 |\n| CharRightExtend     | Shift+Right Arrow                           |\n| ClosePane           | Cont+Shift+C                                |\n| ColumnSelect        | Cmd+Shift+F8                                |\n| CopyFormat          | Cmd+Shift+C                                 |\n| CopyText            | Shift+F2                                    |\n| CreateAutoText      | Opt+F3                                      |\n|                     |                                             |\n| DeleteBackWord      | Cmd+Del ; Opt+Del                           |\n\n**Key Shortcuts** cwh8gsb19.\n\nkeys » Command.\\\nOpt+Cmd+Spc » New Find ...\\[\\]....\\\nOpt+Cmd+M » Paragraph settings (For VS code).\\\nShift+Opt+Cmd+V » Paste and match the formatting. (Not VS code) Cont+H » Find and replace, Thumb, Nav-Map, Rev.\\\nCmd+\\[ or \\] » Font size by one point.\\\nCmd+Opt+1 « Heading 1.\\\nCnt+Shft+Arws » Move Up/Down Line or Paragraph.\\\nCnt+Tab » Code block in .md (word).\\\nCustom keys Cmd+Opt+Sht+F » FontColorPicker (Custom).\\\nCont+Shift+V » Check mark  ü in Markdown Opt+¥sqrt » √ (Math AutoC)\\\ncoz ∵ Because (Math AutoC)\n\nInput Sources. 1. ABC Extended\\\n2. Japanese: ©Kana, ©Half Kana\\\n3. Handwriting » Cnt+Shift+Spc\\\nRotate Keyboards » Cnt+Opt+Spc\\\nCharacter Viewer » Cnt+Cmd+Spc or fn+E\n\nvid ratio: 16:9 -\\> 560 x 315 fx(16/9\\*315=560) \\> 426x240 \\> 355x200 \\> 266x150\n\n**Finder**.\\\nCmd+Shift+H » Home directory. (home icon in Finder favorites).\\\nOpt+Cmd+W » Close all Finder windows.\n\n**Terminal Keyboard shortcuts (vid):**\\\nCnt+a » Jump to the beginning of the line.\\\nCnt+e » Jump to the end of the line.\\\nOpt+Arrows LR » To Jump one word at the time.\\\nOpt+Mouse © » To place cursor in any place in the line.†cursor.\\\nCnt+u » Delete everything before cursor.\\\nCnt+k » Delete everything after the cursor.\\\nTab » Autocomplete.\\\nDrag and drop folder » To autofill path of the folder. Ex. Cd (drag and drop folder).\\\nUp and Down errors » Cycle through previously runed commands.\\\n!+starting word of the command » To find previously runed commands.\\\nHistory » Type history in terminal will show all runed commands in a number list.\\\n!+history# » To find and paste that specific command.\\\nCnt+r » Resarch reverse. Auto filled type of find.\\\nCnt+L » Clear screen but not history scroll.\\\nCmd+K Clear screen and history scroll.\\\nCommand + Shift + . » Show/Hide hidden files.\n\n**System keys** Opt+Cmd+P+R » Reset Parameter Ram To reset Non-volatile storage, storage that persist form boot to boot called NVRAM or P-RAM.\n\n1.  Turn off mac, turn on and immediately press Opt+Cmd+P+R until you hear a sound. Cmd+R on reboot » Recovery mode. (to download macOS form net or Use time machine)\\\n    H on reboot » Safe mode in top right corner.\\\n    D on reboot » Apple Diagnostics; Opt+D on reboot » Apple Diagnostics over internet.\\\n    T on reboot » Target Disk Mode, makes mac in to a HDD. To copy data off a mac malfunctioning.\\\n    Opt/Alt on reboot » Start Up Manager, to choose bootcamp (Windows system) or form USB.\n\n------------------------------------------------------------------------\n\n### line space after c/p\n\nTo reduce the line space after c/p:\n\n-   **Set doc to \"No grid\", and then, each c/p section must be set to \"Single \\[Paragraph\\]\".** See 1 and 2 below.\n\n#### Grid/snap\n\n[Snap charts, pictures, and objects to a grid to align them in Word.](https://support.microsoft.com/en-au/office/snap-charts-pictures-and-objects-to-a-grid-to-align-them-in-word-d9c687fc-926e-4eca-8cef-952eed714012#:~:text=and%20vertical%20spacing.-,Select%20a%20chart%2C%20picture%2C%20or%20object%20in%20the%20document.,right%20side%20of%20the%20box.)\n\n1.  //\\[layout\\] \\> \\[page setup \\> Margins\\] \\> Custom margins \\> ...\\[\\]... \\> \\[Document Grid\\] \\> ©No grid.\\\n2.  **++opt+cmd+m++ -\\> Paragraph \\> Single \\> OK**\\\n3.  //\\[layout\\] \\> {page setup \\> Margins} \\> Custom margins \\> ...\\[\\]... \\> \\[Document Grid\\] \\> ©No grid \\> ... © Drawing Grid \\> ...\\[\\]... \\>\\\n4.  //\\[layout\\] \\> {page setup \\> Margins} \\> Custom margins \\> ...\\[\\]... \\> \\[Document Grid\\] \\> ©No grid \\> ... Set Font.\\\n5.  //\\[layout\\] \\> {Arrange \\> ˇAlign} \\> **Grid Settings** \\> ...\\[\\]... \\> Horizontal Spacing = 0.5 cm ; Vertical Spacing = 0.5 cm \\> ©OK  changes automatically to Horizontal Spacing = 1.78 ch; Vertical Spacing = 1.18 line.\n\n> **Tip:** Grid spacing will define the movement length of an object, ex. If you create an square, and move it with the mouse, the movement is not smooth (linear pixel by pixel) but it will jump(snap) to the next grid line, so if the grid spacing is 0.5 cm, the square will move 0.5 cm each time, whether the grid is displayed or not. **Set H and V spacing at 0.1 cm**.\n\nSnap to grid when document grid is defined -\\> KS possible?.\n\n#### Set Grid Spacing\n\n1.  //\\[layout\\] \\> {page setup \\> **Margins**} \\> Custom margins \\> ...\\[Grid options\\]... \\> \\[Document Grid\\] \\> ©No grid; \\> Drawing Grid \\> ..\\[Grid options\\].. \\> Horizontal spacing = 0.1 cm; Vertical Spacing= 0.1 cm \\> Ok =\\> ..\\[\\]\\> Grid options \\> grid settings: auto changed to, Horizontal spacing= 0.36 ch, Vertical spacing= 0.24 line \\> OK =\\> ..{document grid\\] \\> OK.\n\n-   Lines are 1mm x 1mm, in whole page cannot be seen, zoom in until lines appear.\\\n-   If not seen, // View \\> © grid lines.\n\nAnother option, **Shorter Path**:\n\n1.  //\\[layout\\] \\> {Arrange \\> **ˇAlign**} \\> **Grid Settings** \\> ...\\[Grid options\\]... \\> **Grid Settings**: Horizontal Spacing = 0.5 cm ; Vertical Spacing = 0.5 cm \\> ©OK  changes automatically to Horizontal Spacing = 1.78 ch; Vertical Spacing = 1.18 line.\\\n    -\\>\n\n> Make default in all MRR1template.\n\n**Insert and Customize Gridlines in Word \\| Microsoft Word Tutorials.**\\\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/MjsPuioLZNQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n### Word: grid units change.\n\nWindows: My default units are set to millimeters, under File-\\>Options-\\>Advanced-\\>Display-\\>Show measurements in units of: Millimeters.\\\nMac: // Word \\> Preferences \\> Authoring and proofing Tools \\> General \\> Show measurements in units of: Millimeters.\\\n\\> ?\\* Preferences \\> Authoring and proofing Tools \\> General \\> **!© Use character units.** What does this does? Is not available in other versions of word....\\\nWhen go back to the Grid and Guides dialog, and see that my spacing is no longer 1mm, it is .ch and .line.\n\n### Set Tab spacing\n\n// Format \\> Tab \\> ...\\[\\]... \\> Default stops: 1.5 ch. (in cm?)\n\n### Autoformat as you type:\n\n++cmd+\",\"++ \\> AutoCorrect \\>\n\n### Edit templates and Format Styles\n\nWord for Microsoft 365 Word 2021 Word 2019 Word 2016 Word 2013 Whether you're starting from a built-in template or updating one of your own, Word's built-in tools help you update templates to suit your needs. To update your template, open the file, make the changes you want, and then save the template.\n\nClick File \\> Open. Double-click This PC. (In Word 2013, double-click Computer). Browse to the Custom Office Templates folder that's under My Documents. Click your template, and click Open. Make the changes you want, then save and close the template. PC word file.dotx\n\nDefault Word styles file:s\\\n**Normal.dotm**: /Users/marcelorosales/Library/Group Containers/UBF8T346G9.Office/User Content.localized/Templates.localized/Normal.dotm\n\n#### Created personal templates:\n\nFolders: MBP15: /Users/Marcelo-Rosales/Library/Group Containers/UBF8T346G9.Office/User Content.localized/Templates.localized/MRdraft-01.dotx\\\nMBP20: /Users/marcelorosales/Library/Group Containers/UBF8T346G9.Office/User Content.localized/Templates.localized/ **TemplateMR21.dotx**\\\n**MR22** Same folder.\n\nTo change styles use: - Style pane (change style on the open document only) or\\\n- // Format \\> style... \\> ...\\[\\]... \\> organizer \\> (here you can copy styles form the Normal.dotm to other document template with the \\[\\<- Copy\\] button)\\\n- Tip: For formats, use the Home\\>Styles Pane \\> ..\\[\\].. \\> List all styles \\> Select Heading... \\> Modify Styles.. \\> ...\\[\\]... \\> style based on: choose the Heading style immediately before.\\\n\n---\n\n### Word Add-ins\n\n//Insert \\> Add-ins \\> Get Add-ins\n\n#### Easy Code Formatter\n\nTo fast and easy highlight code.\n\nPreferences \\> Line Numbering\\> Render line numbers: Off\\\nPreferences \\> Font: Calibry; size: 10\n\n::: {.cell}\n\n```{.r .cell-code}\nfile_path <- \"path/to/your/file.docx\"  \nsystem(sprintf(\"open %s\", file_path))  \n```\n:::\n\nExample:\n\n::: {.cell}\n\n```{.r .cell-code}\nfile_path <- \"path/to/your/file.docx\"  \nsystem(sprintf(\"open %s\", file_path))  \n```\n:::\n\nHighlight\n\n::: {.cell}\n\n```{.r .cell-code}\nfile_path <- \"path/to/your/file.docx\"  \nsystem(sprintf(\"open %s\", file_path))  \n```\n:::\n\n### Word and Rstudio\n\n#### rstudio code to open a word file in word\n\n**(windows)** To open a Word file in Microsoft Word from RStudio, you can use the `shell()` function in R to execute a command that opens the file with the default application associated with `.docx` files on your system.\n\nHere's an example of how you can open a Word file in Microsoft Word using RStudio:\n\n::: {.cell}\n\n```{.r .cell-code}\nfile_path <- \"path/to/your/file.docx\"\nshell(paste(\"start\", shQuote(file_path)))\n```\n:::\n\nReplace `\"path/to/your/file.docx\"` with the actual file path of your Word document.\n\nThe `shell()` function executes a system command, and the `start` command in Windows opens a file with the default associated application, which in this case is Microsoft Word for `.docx` files. The `shQuote()` function is used to properly quote the file path in case it contains spaces or special characters.\n\nWhen you run this code in RStudio, it will open the specified Word file in Microsoft Word or the default application associated with `.docx` files on your system.\n\nPlease note that this approach relies on the default behavior of the operating system and the file associations. If the default application for `.docx` files is set to a different program or if you're using a non-Windows operating system, the command may need to be adjusted accordingly.\n\n**in which package is the shell() function ?** The `shell()` function is not part of any package in R. It is a base R function that allows you to execute system commands.\n\n#### rstudio code to open a word file in word update:\n\n**(mac)**\n\nTo open a Word file using RStudio, you can use the `system()` function instead. Here's an updated example:\n\n::: {.cell}\n\n```{.r .cell-code}\nfile_path <- \"path/to/your/file.docx\"\nsystem(paste(\"open\", shQuote(file_path)))\n```\n:::\n\nReplace `\"path/to/your/file.docx\"` with the actual file path of your Word document.\n\nIn this example, the `system()` function is used to execute the system command `open` (on macOS) or `start` (on Windows) with the specified file path. The `shQuote()` function is used to properly quote the file path.\n\nWhen you run this code in RStudio, it should open the Word file in the default application associated with `.docx` files on your system.\n\nPlease note that the specific command to open files may vary depending on your operating system. The `open` command is used on macOS, while the `start` command is used on Windows. You may need to adjust the command accordingly if you're using a different operating system.\n\n------------------------------------------------------------------------\n\n#### Open word file w/i Rstudio\n\nTo open a Word file in RStudio, you can use the `read_docx()` function from the `officer` package. Here's an example of how you can open a Word file in RStudio:\n\n1.  Install the `officer` package by running the following command in RStudio:\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"officer\")\n```\n:::\n\n2.  Load the `officer` package:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(officer)\n```\n:::\n\n3.  Use the `read_docx()` function to read the Word file:\n\n::: {.cell}\n\n```{.r .cell-code}\ndoc <- read_docx(\"path/to/your/file.docx\")\n```\n:::\n\nReplace `\"path/to/your/file.docx\"` with the actual file path of your Word document.\n\nAfter running this code, the Word file will be loaded into RStudio and stored in the `doc` object, which you can then manipulate or extract information from using functions provided by the `officer` package.\n\nPlease note that the `officer` package provides functionality for manipulating Word documents in R, but it is not a full-featured word processing application. If you need to perform complex editing or formatting tasks on Word files, it is recommended to use Microsoft Word or other dedicated word processing software.\n\n#### Summary\n\n(See Markdown02.docx \\> Word and Rstudio for detail info on the code)\n\nfiles:\n\nMac:\n\n::: {.cell}\n\n```{.r .cell-code}\nMarkdown02 <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Markdown02.docx\"  \n\nResearch_map <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Research_map and guide.docx\"  \n\nMarkdown01 <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Markdown01.docx\"\n\nNotes <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/\"\n\nexcel <- \"/Users/marcelorosales/Documents/GitHub/Quarto/quarto-trials/quarto_website/test.xlsx\"\n\n#open in mac OS\nsystem(paste(\"open\", shQuote(Markdown02)))\nsystem(paste(\"open\", shQuote(Research_map)))\nsystem(paste(\"open\", shQuote(Notes)))\nsystem(paste(\"open\", shQuote(excel)))\n```\n:::\n\n[excel file test](test.xlsx)\n\nWindows:\n\n::: {.cell}\n\n```{.r .cell-code}\nfile_path <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Markdown01.docx\"\nshell(paste(\"start\", shQuote(file_path)))\n# or \nsystem(paste(\"start\", shQuote(file_path)))\n```\n:::\n\n------------------------------------------------------------------------\n\n[top](#)\n\n## Markdown\n\n### Intro and Tutorials\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/hpAJMSS8pvs\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[Academic Writing in Markdown](https://youtu.be/hpAJMSS8pvs)\n\nSee complete video collection [Markdown: Academic writing in plain text](https://www.youtube.com/playlist?list=PLXt-tu7G1H3tLeZgbbUmYjE0_kvbjA4YU)\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/HUBNt18RFbo\" title=\"Markdown Crash Course\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[Markdown Crash Course](https://youtu.be/HUBNt18RFbo)\n\n### Two column layout with markdown html\n\n**2 Column layout code:**\n\n+-----------------------+---------------+\n| Column 1              | Column 2      |\n+=======================+===============+\n| ```                   | Column 2 Text |\n|                       |               |\n|         {             |               |\n|         Column 1 text |               |\n|         }             |               |\n| ```                   |               |\n+-----------------------+---------------+\n\n: Table Caption\n\nNot working in .Rmd,\n\n[How to Create Multicolumn Layouts in RMarkdown](https://rfortherestofus.com/2021/11/multicolumn/)\n\n[top](#)\n\n### Markdown TOC: table of contents?\n\n[link to page](https://stackoverflow.com/questions/11948245/markdown-to-create-pages-and-table-of-contents)\n\nHow to link to part of the same document in Markdown?\n\n**Code example 1**\n\n```         \n# Table of Contents\n1. [Example](#example)\n2. [Example2](#example2)\n3. [Third Example](#third-example)\n4. [Fourth Example](#fourth-examplehttpwwwfourthexamplecom)\n\n\n## Example\n## Example2\n## Third Example\n## [Fourth Example](http://www.fourthexample.com)\n```\n\n**Code example 2**\n\n```         \n# Table of contents\n1. [Introduction](#introduction)\n2. [Some paragraph](#paragraph1)\n    1. [Sub paragraph](#subparagraph1)\n3. [Another paragraph](#paragraph2)\n\n## This is the introduction <a name=\"introduction\"></a>\nSome introduction text, formatted in heading 2 style\n\n## Some paragraph <a name=\"paragraph1\"></a>\nThe first paragraph text\n\n### Sub paragraph <a name=\"subparagraph1\"></a>\nThis is a sub paragraph, formatted in heading 3 style\n\n## Another paragraph <a name=\"paragraph2\"></a>\nThe second paragraph text\n```\n\nThere might also be the one or the other library, who can generate TOCs: see [Python Markdown TOC Extension](https://python-markdown.github.io/extensions/toc/).\n\n[top](#)\n\n#### Toc Word \\<=\\> VS\n\n**How to create a table of content in markdown and vs code.**\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/6V5yaVhK_hE\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[How to create a table of content in markdown and vs code](https://youtu.be/6V5yaVhK_hE)\n\nRequire: Installation of Add on: Markdown All in One by Yu Zhang required, see Table of contents.\\\nOr **Auto Markdown TOC** by Hunter Tran, (use: in md file, right click \\> Auto Markdown TOC: Insert/Update (++cont+m+t++).\\\n:\n\n1.  In Word, Create the toc \\[\\]// References \\> Table of contents \\> Custom Table of contents \\> !© show page numbers \\| Show levels =5 \\> OK.\\\n2.  Copy/paste table from word into vs and create mkd toc.\\\n3.  In VS press Shift+Cmd+P to bring Command Palette.\\\n4.  Run command **Create Table of Contents**.\\\n5.  TOC is **automatically created/updated** on file save by default.\\\n6.  The **indentation type (tab or spaces)** of TOC can be configured per file.\\\n7.  Find the setting in the right bottom corner of VS Code's status bar.\n\n**Note:** Be sure to also check the list.indentationSize option. To make TOC compatible with GitHub or GitLab, set option slugifyMode accordingly Three ways to control which headings are present in the TOC: Easily add/update/remove **section numbering**.\n\n-   Shft+Cmp+P ..\\[\\].. type section... search... \\> Markdown All in One Add/Update section numbers.\\\n-   Cnt+Shit+\\] or \"\\[\\]\" » to increase / decrease Indentation level. (Make sure cursor is in pasted toc and not in the VS created toc).\n\n> !!! tip \"toc tip\" Each md file can have only one \\# (title). If other section is mark as main title (#\\~), table of content.\n\n**Table of Contents Generator for Markdown \\| Productivity \\| Tech Primers**\\\n\\<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/xdNIia7Z2RE\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\\></iframe>\n\n[Table of Contents Generator for Markdown \\| Productivity \\| Tech Primers](https://youtu.be/xdNIia7Z2RE)\n\n**Making your R Markdown Pretty**\\\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/v048ru5v0BE\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n[Making your R Markdown Pretty](https://youtu.be/v048ru5v0BE)\n\n[Rmarkdown into Word - change a title in toc](https://community.rstudio.com/t/rmarkdown-into-word-change-a-title-in-toc/48137)\n\nIn the yaml set:\n\n::: {.cell}\n\n```{.yaml .cell-code}\n# yaml code:\n\ntitle: \"Mixture distributions\"\noutput: \n    word_document:\n        toc: yes\ntoc-title: Article Outline\n```\n:::\n\n------------------------------------------------------------------------\n\n[top](#)\n\n### Markdown symbols\n\nTip: Generate Images path with \"issues\" (in github).\n\n**code:**\n\n```         \n# heading 1  \n###### heading 6  \n*Italics*  \n**bold**  \n***bold and italics***  \n> Block quote  \n- Unordered list  \n1 ordered list  \n![Image Description](/path/to/image){size, position}\n[Link Text](link url)  \n\\ escape  (¥ = to back slash in japanese keyboards) \n```\n\n**outcome:**\n\n`# heading 1`\\\n\\###### heading 6\\\n*Italics*\\\n**bold**\\\n***bold and italics***\\\n\\> Block quote\\\n- Unordered list\\\n1. ordered list\\\n`![Image Description](/docs/img/s300/01-Incisor-300.jpg){ width=\"100\"; align=righ }`\n\n[Link Text](linkurl)\\\nescape (¥ = to back slash in japanese keyboards)\n\n<iframe width=\"266\" height=\"150\" src=\"https://www.youtube.com/embed/0bxa7rkur9o\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n<iframe width=\"266\" height=\"150\" src=\"https://www.youtube.com/embed/WkF7nqEYF1E\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n(See 32:39 cross talk document? Section?).\n\n[top](#) **How to draw checkbox or tick mark in GitHub Markdown table?**.\n\n-   [ ] (for unchecked checkbox)\n-   [x] (for checked checkbox)\n\n\\[\\] , \\[x\\] , ✗ , ✓ , ☐ , ☑ , <input type=\"checkbox\" disabled checked /> , <input type=\"checkbox\" disabled /> .\n\n| \\#  | Unchecked                                        | Checked                                           |\n|-----|--------------------------------------------------|---------------------------------------------------|\n| 1   | \\[\\]                                             | \\[x\\]                                             |\n| 2   | ✗                                                | ✓                                                 |\n| 3   | ☐                                                | ☑                                                 |\n| 4   | <input type=\"checkbox\" disabled checked /> works | <input type=\"checkbox\" disabled /> works here too |\n| 5   | Cont+Sht+V                                       |  in Word, ü in .md                               |\n| 6   | \\sqrt                                            | √                                                 |\n\n[top](#)\n\n#### Go to top\n\nCan I add a \"go to top\" button to an HTML document rendered in R Markdown? **In word**\n\n1.  Create a bookmark: //insert/bookmark.../...\\[\\].../{top}/©Add\\\n2.  Create a hyperlink to the bookmark: {top} or any {name} \\> select {top} \\> R© \\> Hyperlink (or ++cont+k++) \\> This Document \\> Bookmarks \\> ©top (bookmark name) \\> OK\\\n3.  c/p created link and place where back to top button/link is required: every heading better H2 and H3.\n\n**In word markdown**\\\nThis code will make it quick and simple.\n\n``` bash\n[top](#)  \n```\n\nIn md preview it will automatically provide a link to top.\\\nJust add the bookmark anchor and it will work for both, word and word-markdown but not with vs-markdown\\\n[top](#)\n\n**In vs-markdown**\n\n1.  Create an anchor at the top of page:\n\n```         \n###### top\n```\n\n1.  Create or c/p link wherever you need\n\n```         \n[top](#top)  \n```\n\n!!! check \"better option\" 1. In vs code raw md data and preview the `[top](#)` will not work, it is better to work with the vs outline panel.\\\n2. Place the TOC at the end and use the foot anchor in outline panel to jump to toc.\n\n**In mkdocs**\n\nThe code for word markdown will work in mkdocs.\n\n```         \n[top](#)  \n```\n\n**html code** will work for word-md extension.\n\n``` markdown\n<a href=\"#top\">Back to top</a>  \n[top](#) \n```\n\n<a href=\"#top\">Back to top</a>\\\n[top](#) // any text here would work unless you want to point to a particular id in the html\n\n------------------------------------------------------------------------\n\n#### Link anchor\n\nHow to link to part of the same document in Markdown? Github automatically parses anchor tags out of your headers. So you can do the following:\n\n```         \n[Custom foo description](#foo)  \n© in the link above and you will jump to the ankor (# Foo) below.    \n# Foo. \n```\n\n[Handbook Markdown Guide](https://about.gitlab.com/handbook/markdown-guide/).\n\n#### **Warnings boxes**\n\n**Code:**\n\n``` html\n<div style=\"padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #3c763d; background-color: #dff0d8; border-color: #d6e9c6;\">\nI am a success message\n</div>\n\n<div style=\"padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #a94442; background-color: #f2dede; border-color: #ebccd1;\">\nI am an error message\n</div>\n\n<div style=\"padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #31708f; background-color: #d9edf7; border-color: #bce8f1;\">\nI am a info message\n</div>\n\n<div style=\"padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #8a6d3b;; background-color: #fcf8e3; border-color: #faebcc;\">\nI am a warning message\n</div>\n\n\n<div class=\"alert alert-success\"><i class=\"icon-ok\"></i> **SUCCESS:** Markdown formatting _is_ supported here.\n </div>\n \n  <div class=\"alert alert-info\"><i class=\"icon-lightbulb\"></i><strong>INFO:</strong> Markdown formatting _is_ supported here.\n </div>\n\n <div class=\"alert alert-warning\"><i class=\"icon-right-hand\"></i> **WARNING:** Markdown formatting _is_ supported here.\n </div>\n\n <div class=\"alert alert-danger\"></i><i class=\"icon-attention-alt\"></i>**DANGER:** Markdown formatting _is_ supported here.\n </div>  \n\n<div style= \"border: 1px solid transparent; \n  border-color: transparent; \n  margin-bottom: 10px; \n  border-radius: 4px; \n  color: #000000; \n  background-color: #eeeee; \n  border-color: #ebccd1;\">\n\n  <div style = \"padding: 5px; \n    border: 1px solid transparent; \n    border-color: transparent; \n    border-radius: 4px; \n    color: #a94442; \n    background-color: #f2dede; \n    border-color: #ebccd1;\">\n  warning\n  </div>\n\n  <div style=\"padding: 5px;\">\n  Message!!.\n  </div>\n</div>\n```\n\n**Output:**\n\n::: {style=\"padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #3c763d; background-color: #dff0d8; border-color: #d6e9c6;\"}\nI am a success message\n:::\n\n::: {style=\"padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #a94442; background-color: #f2dede; border-color: #ebccd1;\"}\nI am an error message\n:::\n\n::: {style=\"padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #31708f; background-color: #d9edf7; border-color: #bce8f1;\"}\nI am a info message\n:::\n\n::: {style=\"padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #8a6d3b;; background-color: #fcf8e3; border-color: #faebcc;\"}\nI am a warning message\n:::\n\n::: {.alert .alert-success}\n<i class=\"icon-ok\"></i> **SUCCESS:** Markdown formatting *is* supported here.\n:::\n\n::: {.alert .alert-info}\n<i class=\"icon-lightbulb\"></i><strong>INFO:</strong> Markdown formatting *is* supported here.\n:::\n\n::: {.alert .alert-warning}\n<i class=\"icon-right-hand\"></i> **WARNING:** Markdown formatting *is* supported here.\n:::\n\n::: {.alert .alert-danger}\n</i><i class=\"icon-attention-alt\"></i>**DANGER:** Markdown formatting *is* supported here.\n:::\n\n> <i class=\"icon-quote-left\"></i> The secret to creativity is knowing how to hide your sources. -- <cite>\\[Albert Einstein\\]\\[1\\]</cite>\n\n::: {style=\"border: 1px solid transparent;    border-color: transparent;    margin-bottom: 10px;    border-radius: 4px;    color: #000000;    background-color: #eeeee;    border-color: #ebccd1;\"}\n::: {style=\"padding: 5px;      border: 1px solid transparent;      border-color: transparent;      border-radius: 4px;      color: #a94442;      background-color: #f2dede;      border-color: #ebccd1;\"}\nwarning\n:::\n\n::: {style=\"padding: 5px;\"}\nMessage!!.\n:::\n:::\n\n------------------------------------------------------------------------\n\n#### Comments in Markdown\n\n[Comments in Markdown](https://stackoverflow.com/questions/4823468/comments-in-markdown)\n\nIf you want a comment that is strictly for yourself (readers of the converted document should not be able to see it, even with \"view source\") you could (ab)use the link labels (for use with reference style links) that are available in the core Markdown specification:\n\n<http://daringfireball.net/projects/markdown/syntax#link>\n\nThat is:\n\n```         \n[comment]: <> (This is a comment, it will not be included)\n[comment]: <> (in  the output file unless you use it in)\n[comment]: <> (a reference style link.)\n```\n\n(works in: VS) Ex: (A line space is needed between text and comment).\n\nOr you could go further:\n\n```         \n[//]: <> (This is also a comment.)\n```\n\nEx. (A line space is needed between text and comment).\n\n[//](Here%20is%20another%20comment \"This is also a comment.\")\n\nTo improve platform compatibility (and to save one keystroke) it is also possible to use \\# (which is a legitimate hyperlink target) instead of \\<\\>:\n\n```         \n[//]: # (This may be the most platform independent comment)\n```\n\nEx. (A line space is needed between text and comment).\n\nFor maximum portability it is important to insert a blank line before and after this type of comments, because some Markdown parsers do not work correctly when definitions brush up against regular text. The most recent research with Babelmark shows that blank lines before and after are both important. Some parsers will output the comment if there is no blank line before, and some parsers will exclude the following line if there is no blank line after.\\\nIn general, this approach should work with most Markdown parsers, since it's part of the core specification. (even if the behavior when multiple links are defined, or when a link is defined but never used, is not strictly specified).\n\nPlacing a comment between `<>` will make it a comment and invisible in a markdown document. Ex. <this is a comment>\n\n**Other type of comments:**\\\nThis is an example 1\n\nThis is an example 2 [//](Here%20is%20another%20comment \"This is also a comment.\"): \\<comment here only text no numbers nor punctuation other than. Hover over comment dash lines and text will appear. unfortunatelly is not from this comment but from previous one. \\> (This is also a comment.)\\\nThis is an example 3 [//](Here%20is%20another%20comment \"This is also a comment.\"): \\# (This may be the most platform independent comment)\n\nComments Examples: (3):\\\n[comment](here%20is%20the%20comment%20only%20text%20no%20numbers%20or%20punctuation \"This is a comment, it will not be included, only text no numbers or punctuation\"): <here is the comment> (This is a comment, it will not be included)\n\n[//](Here%20is%20another%20comment \"This is also a comment.\"): #This is the comment (This may be the most platform independent comment) **this type of comment does not seems to be working)**\n\n::: {.alert .alert-danger}\n</i><i class=\"icon-attention-alt\"></i>**Warning:** Try to avoid using the above comment code since it requires for each one to be labeled different, and error messages may be displayed.\\\n:::\n\n### Markdown Shortcuts\n\nHandy {++shortcuts++} for ==editing== Markdown (.md, .markdown) files by ==right clicking==. You can also use markdown formats in any other file (see configuration settings).\n\n-   Quickly toggle bullet points\n-   Easily generate URLs\n-   Convert tabular data to tables\n-   Context and title menu integration\n-   You can show and hide icons in the title bar with the markdownShortcuts.icons.\\* config settings.\n\n[Markdown Shortcuts in VS](https://marketplace.visualstudio.com/items?itemName=mdickin.markdown-shortcuts)\n\n| Name                            | Description                 | Default key binding |\n|---------------------------------|-----------------------------|---------------------|\n| md-shortcut.showCommandPalette  | Display all commands        | ctrl+M ctrl+M       |\n| md-shortcut.toggleBold          | Make **bold**               | ctrl+B              |\n| md-shortcut.toggleItalic        | Make *italic* or *italic*   | ctrl+I              |\n| md-shortcut.toggleStrikethrough | Make ~~strikethrough~~      |                     |\n| md-shortcut.toggleLink          | Make [a hyperlink](Tab3.md) | ctrl+L              |\n| md-shortcut.toggleImage         | Make an image ![]()         | ctrl+shift+L        |\n| md-shortcut.toggleCodeBlock     | Make `a code block`         | ctrl+M ctrl+C       |\n| md-shortcut.toggleInlineCode    | Make `inline code`          | ctrl+M ctrl+I       |\n| md-shortcut.toggleBullets       | Make \\* bullet point        | ctrl+M ctrl+B       |\n| md-shortcut.toggleNumbers       | Make 1. numbered list       | ctrl+M ctrl+1       |\n\n------------------------------------------------------------------------\n\n### Preview Markdown files with Quick Look in Finder on Mac\n\nCommand to install with Homebrew Cask in \\~/Library/QuickLookIt will be installed when you run Install cask has changed (added on 2021-02-02) to\n\n``` bash\nbrew install --cask qlmarkdown\n```\n\nUninstall cask seems changed (added on 2021-02-02)\n\n``` bash\nbrew uninstall --cask qlmarkdown\n```\n\n------------------------------------------------------------------------\n\n[top](#)\n\n## MkDocs\n\n[MkDocs](https://www.mkdocs.org/) is a **fast, simple and downright gorgeous** static site generator that's geared towards building project documentation.\n\nDocumentation source files are written in Markdown, and configured with a single YAML configuration file.\\\nStart by reading the introductory tutorial, then check the User Guide for more information.\n\n[**Mkdocs Python - How to Create & Publish Documentations For Your Packages**](https://youtu.be/NuNj75iE8KA)\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/NuNj75iE8KA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[video](https://youtu.be/NuNj75iE8KA)\n\n</br>\n\n[**Alexys Jacob - Create beautiful and localized documentations and websites using MkDocs + Github**](https://youtu.be/0pYN6Z-t1-s)\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/0pYN6Z-t1-s\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[Crear páginas web con Rmarkdown, MkDocs y GitHub pages: una alternativa para documentación.](https://www.youtube.com/watch?v=ytngbbTt0Xo)\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ytngbbTt0Xo\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen>\n\n</iframe>\n\nGithubpage: https://github.com/ronnyhdez/docmaker\n\n[MkDocs Materials official github account](https://squidfunk.github.io/mkdocs-material/):\n\nDocumentation that simply works. Write your documentation in Markdown and create a professional static site in minutes -- searchable, customizable, for all devices.\n\n[MkDocs Themes](https://github.com/mkdocs/mkdocs/wiki/MkDocs-Themes)\n\n[top](#)\n\n### MkDocs Install\n\n[MkDocs official site](https://www.mkdocs.org/)\n\nUser Guide\n\nBuilding Documentation with MkDocs\n\nThe MkDocs Developer Guide provides documentation for users of MkDocs. See Getting Started for an introductory tutorial. You can jump directly to a page listed below, or use the next and previous buttons in the navigation bar at the top of the page to move through the documentation in order.\n\n-   [Installation](https://www.mkdocs.org/user-guide/installation/)\\\n-   [Writing Your Docs](https://www.mkdocs.org/user-guide/writing-your-docs/)\\\n-   [Choosing Your Theme](https://www.mkdocs.org/user-guide/choosing-your-theme/)\\\n-   [Customizing Your Theme](https://www.mkdocs.org/user-guide/customizing-your-theme/)\\\n-   [Configuration](https://www.mkdocs.org/user-guide/configuration/)\\\n-   [Deploying Your Docs](https://www.mkdocs.org/user-guide/deploying-your-docs/)\n\n[HOW TO INSTALL MKDOCS ON MAC AND SETUP THE INTEGRATION TO GITHUB PAGES](https://suedbroecker.net/2021/01/25/how-to-install-mkdocs-on-mac-and-setup-the-integration-to-github-pages/) January 25, 2021\n\n#### Summary:\n\n**LOCAL SETUP ON MAC OS**\n\n-   [brew](https://brew.sh) `brew --version`;\n-   [Python 3](https://www.python.org/) `python --version`; find&install `brew list <formula1> || brew install <formula1>`; `brew install python3`; **`brew install python@3.10`**\\\n-   [Pip](https://pypi.org/project/pip/) : `pip --version`; `pip3 install --upgrade pip`\\\n-   [MkDocs](https://www.mkdocs.org/) : `pip3 install mkdocs` (I used this install as described in guide); option: `brew install mkdocs` (error)\\\n-   [MkDocs Material Extensions](https://pypi.org/project/mkdocs-material-extensions/) : `pip3 install mkdocs-material`\\\n    Other Plugins:\\\n-   [i18n](https://github.com/ultrabug/mkdocs-static-i18n): `pip install mkdocs-static-i18n`;\\\n-   Theme Materials: `pip install mkdocs-material`\n\n**INSTALL ON RSTUDIO:**\n\n-   You can install the development version of docmaker from GitHub with:\n\n``` r\ndevtools::install_github(\"ronnyhdez/docmaker\")\n```\n\n-   When published on CRAN, you will be able to install the package with:\n\n``` r\ninstall.packages(\"devtools\")\n```\n\n> Why I don't use this in Rstudio directly? Because the commands to render the pages do NOT seem to work with in Rstudio, I can code and preview in VS code But only the page, the R graphs are not displayed, is would be a constant changing from Rstudio \\<=\\> VS code \\<=\\> Word. Use better quarto, write all in \"visual\", can paste images directly in and R will automatically create a img folder and name the file (which is a great feature, can leave without it). Internationalization is not good yet. Image galleries are very good.\n\n**CONFIGURATION IN THE GITHUB PROJECT**\n\n-   [GitHub CI](https://docs.github.com/en/actions/guides/about-continuous-integration)\\\n-   [GitHub Pages](https://pages.github.com/)\\\n-   [GitHub Branch](https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-and-deleting-branches-within-your-repository)\n\n**MKDOCS INSTALLATION ON MAC**\n\n**STEP 1: VERIFY THE BREW INSTALLATION**\\\nCheck if intalled:\n\n``` bash\nbrew –version\n```\n\n**STEP 2: CHANGE THE FOLDER PERMISSION TO INSTALL PYTHON, IF NEEDED**\n\n``` bash\nsudo chown -R $(whoami) /usr/local/lib/pkgconfig  \nchmod u+w /usr/local/lib/pkgconfig  \n```\n\n**STEP 3: INSTALL PYTHON3**\n\nTo check if python and pip are installed use:\\\n`python --version` (Python 3.8.2)\\\n`pip --version` (pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8))\\\nOr `brew list <formula1> || brew install <formula1>` If not installed use:\\\n`brew install python3`\\\n20220704: Already Installed version 3.8, 3.9 I installed lates version: `brew install python@3.10`\n\n``` python\nPython has been installed as\n  /usr/local/opt/python@3.10/bin/python3\n\nUnversioned symlinks `python`, `python-config`, `pip` etc. pointing to\n`python3`, `python3-config`, `pip3` etc., respectively, have been installed into\n  /usr/local/opt/python@3.10/libexec/bin\n\nYou can install Python packages with\n  /usr/local/opt/python@3.10/bin/pip3 install <package>\nThey will install into the site-package directory\n  /usr/local/lib/python3.10/site-packages\n\ntkinter is no longer included with this formula, but it is available separately:\n  brew install python-tk@3.10\n\nSee: https://docs.brew.sh/Homebrew-and-Python\n\npython@3.10 is keg-only, which means it was not symlinked into /usr/local,\nbecause this is an alternate version of another formula.\n\nIf you need to have python@3.10 first in your PATH, run:\n  echo 'export PATH=\"/usr/local/opt/python@3.10/bin:$PATH\"' >> ~/.zshrc\n\nFor compilers to find python@3.10 you may need to set:\n  export LDFLAGS=\"-L/usr/local/opt/python@3.10/lib\"\n\nFor pkg-config to find python@3.10 you may need to set:\n  export PKG_CONFIG_PATH=\"/usr/local/opt/python@3.10/lib/pkgconfig\"\n\n==> Summary\n🍺  /usr/local/Cellar/python@3.10/3.10.5: 3,137 files, 56.8MB\n==> Running `brew cleanup python@3.10`...\nDisable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.\nHide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).\n```\n\n**STEP 4: Install UPGRADE PIP**\n\n`pip –version`\\\n`pip3 install --upgrade pip`\n\n**STEP 5: INSTALL MKDOCS**\n\n`pip3 install mkdocs` (I used this install as described in guide).\n\n`brew install mkdocs` :\n\n```         \nError: The `brew link` step did not complete successfully\nThe formula built, but is not symlinked into /usr/local\nCould not symlink bin/mkdocs\nTarget /usr/local/bin/mkdocs\nalready exists. You may want to remove it:\n  rm '/usr/local/bin/mkdocs'\n```\n\n**STEP 6: INSTALL MKDOCS-MATERIAL**\n\n``` bash\npip3 install mkdocs-material  \n```\n\n**STEP 7: INSTALL MKDOCS-MATERIAL-EXTENSIONS**\n\n``` bash\npip3 install mkdocs-material-extensions  \n```\n\n**VERIFY AND BUILD YOUR DOCUMENTATION**\n\nSTEP 1: ENSURE YOU HAVE THE MKDOCS.YML FILE IN PLACE\\\nHere is an example configuration for the mkdocs.yml file and here you find an example project, which is based on that configuration.\\\n[configuration](https://www.mkdocs.org/user-guide/configuration/) [example project](https://github.com/thomassuedbroecker/How-to-install-MkDocs-on-Mac-and-setup-integration-with-GitHub/)\n\n------------------------------------------------------------------------\n\n[top](#)\n\n### Documentation\n\nFor full documentation visit [mkdocs.org](https://www.mkdocs.org).\n\n### Commands\n\n-   `mkdocs new [dir-name]` - Create a new project.\n-   `mkdocs serve` - Start the live-reloading docs server.\n-   `Cnt+C` - to stop server.\n-   `mkdocs build` - Build the documentation site.\n-   `mkdocs -h` - Print help message and exit.\n-   `mkdocs gh-deploy` - deploy to github.\n\n**Project layout**\n\nmkdocs.yml \\# The configuration file. docs/\n\nindex.md \\# The documentation homepage. ... \\# Other markdown pages, images and other files.\n\n------------------------------------------------------------------------\n\n[top](#)\n\n### To create a site\n\n``` bash\n#| eval: false\n\ncd /Users/marcelorosales/Documents/GitHub/MkDocs/MkDocsTut220704\nmkdocs new Hello-siteTest  \n```\n\nINFO - Creating project directory: Hello-siteTest\\\nINFO - Writing config file: Hello-siteTest/mkdocs.yml\\\nINFO - Writing initial docs: Hello-siteTest/docs/index.md\n\n``` bash\n#| eval: false\n\nls  \n```\n\nHello-siteTest\n\n``` bash\n#| eval: false\n\ncd Hello-siteTest  \n```\n\n``` bash\n#| eval: false\n\ntree  \n```\n\n.\\\n├── docs\\\n│ └── **index.md**\\\n└── **mkdocs.yml**\n\n``` bash\n#| eval: false\n\ncode .  \n```\n\nIn editor softw Modify mkdocs.yml, the site_name, site_url, Nav, etc.\n\n``` yaml\nsite_name: Hello-siteTest\nsite_url: https://example.com_or_my.github\nnav:\n  - Home: Index.md\n```\n\nSave..\n\n------------------------------------------------------------------------\n\n[top](#)\n\n### Live Pre-view of the site (Local Server)\n\nIn terminal.\n\n``` bash\n#| eval: false\nmkdocs serve  \n```\n\nINFO - Building documentation...\\\nINFO - Cleaning site directory\\\nINFO - Documentation built in 0.07 seconds\\\nINFO - \\[16:12:35\\] Watching paths for changes: 'docs', 'mkdocs.yml'\\\nINFO - \\[16:12:35\\] Serving on <http://127.0.0.1:8000/>\\\nINFO - \\[16:13:00\\] Browser connected: <http://127.0.0.1:8000/>\n\n[top](#)\n\n------------------------------------------------------------------------\n\n### To create more Nav Tabs\n\nIn editor: New File \\> language: .md \\> {# Name of the Tab or Section} \\> Save: {NewNavTabName} \\> Save Eg. NewNavTab1.md NewNavTab2.md\n\nOpen mkdocs.yml \\> Add NavTabs file Names to Nav\n\n``` yaml\nsite_name: Hello-siteTest\nsite_url: https://example.com_or_my.github\nnav:\n  - Home: Index.md\n  - New Nav Tab 1: NewNavTab1.md\n  - New Nav Tab 2: NewNavTab2.md\n```\n\n[top](#)\n\n### MkDocs Themes\n\nIn the **mkdocs.yml** file add a theme: Eg theme: readthedocs\n\n``` yaml\nsite_name: Test site\nsite_url: https://example.com_or_my.github\nnav:\n  - Home: index.md\n  - New Nav Tab 1: NewNavTab1.md\n  - New Nav Tab 2: NewNavTab2.md\n\ntheme: readthedocs \n```\n\nOther themes.\n\n``` yaml\ntheme: \n#  name: readthedocs \n  name: material\n```\n\n[top](#)\n\n### Add images/assets\n\nStop server.\\\nCreate assets/ in the docs/ .\\\nInsert images in the folder.\\\nIn the Home\n\n![NiigataUicon](assets/NiigataUicon.png){size, position}\n\n[top](#)\n\n### Internationalization plugin\n\n#### Pages\n\n1.  Create the pages in the desired languages.\n\nIndex.md --\\> Index.en.md\\\n\\| --\\> Index.jp.md\\\n\\| --\\> Index.es.md\n\n2.  Add plugins to .yaml file\n\n``` yaml\nplugins:\n  - search # add search box.\n  - i18n: # language plugin. \n      default_language: en\n      languages:\n        en: English\n        jp: 日本語\n        es: Español\n```\n\nThen deploy: mkdocs serve\\\n\\> May require Install plunging\n\n``` bash\n#| eval: false\npip install mkdocs-static-i18n  \n```\n\nMore info [here](https://github.com/ultrabug/mkdocs-static-i18n)\n\n#### Images\n\n1.  Create the images in the desired languages and **`add the language as an extension`**.\n\nimg.png --\\> img.en.png\\\n\\| --\\> img.ja.png\\\n\\| --\\> img.es.png\\\n\\> WARNING - Language jp is not supported by mkdocs-material==8.3.8, not setting the 'theme.language' option. CORRECTION: is `ja` for Japanese, not jp.\n\nIt works anyways‼!\n\n2.  In md files just use the name of the image, plug in will automatically assign the language extension to the corresponding language .md file. Eg.\n\n``` md\n![imgName](assets/img.png)   \n```\n\n[top](#)\n\n### To build site\n\nOnce site is finished, stop live preview **`Cnt+C`**\\\nIn Terminal:\n\n``` bash\n#| eval: false\nmkdocs build\n```\n\nINFO - Cleaning site directory\\\nINFO - Building documentation to directory:\\\n/Users/marcelorosales/Documents/GitHub/MkDocs/MkDocsTut220704/Hello-siteTest/site\\\nINFO - Documentation built in 0.11 seconds\n\n> Will create all the files and folders required for an HTML site.\\\n> In terminal: (Make sure you are in the directory containing the site)\n\n``` bash\n#| eval: false\nmkdocs gh-deploy\n```\n\n[top](#)\n\n### To deploy in Github\n\n\\*\\*To create a site with Terminal (\\>\\_):\\*\\*\\\ncd /Documents/GitHub..(local, not in cloud)\\\n`mkdocs new {rojectName}` (Creates new dir)\\\ncd ProjectName\\\n`tree` (√ if ∃ mkdocs.yml, index.md)\n\n**In VS code:**\\\ndrag/File \\> Add Folder to Workspace ProjectName \\|\\| code mkdocs.yml\\\ncopy/paste template \\|\\| code .ylm\\\ntouch .md (Create page content)\\\n.\\\n\\*\\*In \\>\\_:\\*\\*\\\n`mkdocs serve` (no need to build to serve)\\\nstop server Cont+C\n\n**Connect to Github**\\\n\\*\\*With \\>\\_:\\*\\*\\\n`git init` (√ if ∃? .git)\\\n`gedit gitignore` (edit gitignore to don't track files...)\\\n`git add .` (add all files to git)\\\n`git status` (files currently staged)\\\n`git config --global user.name “MyGitAccount”` (MR)\\\n`git config --global user.email “myemail.com”` (hot)\\\n`git commit -m “Initial Commit”`\\\n`git status` (empty, no files staged) -\\> up to here, ver control only in local dir/repo.\\\n**In github.com:**\\\ncreate git repo in github.com\\\ncopy the repo_url\\\n\\*\\*In \\>\\_:\\*\\*\\\n`git remote add origin repo_url`\\\n`git push origin master`\\\ntype github username:\\\ntype github Password: (push from local master branch to remote master branch)\\\n\\*\\*Mkdocs deploy in \\>\\_:\\*\\*\\\n`mkdocs build`\\\n`mkdocs gh-deploy`\n\n**After first commit:**\\\nModify code. (and save files)\\\n`mkdocs build`\\\n`mkdocs gh-deploy`\\\n`git add .`\\\n`git status`\\\n`git commit -m “”`\\\n`git status` (nothing to commit)\\\n`git reflog` (commit history)\n\n**Other git commands:**\\\n`git reflog` (past git logs)\\\n`git checkout -b other-branch` (Switch to a new branch)\\\n`git branch -a` (lists of branches)\\\n`rm -fr .git` (remove git files)\n\n\\*\\*To create a site with GitHub Desktop (\\>\\_):\\*\\*\n\n1.  Create mkdocs site in \\>\\_ (local, not cloud)\\\n2.  Open Github Desktop\\\n3.  Add \\> Add an existing repocitory \\> ..\\[\\].. \\> choose \\> path \\> add \\> ..\\[!∆!\\].. © `create a repository` \\> ...\\[\\]...\\\n4.  Name:{} \\> Description: {} \\> © Create Repository.\\\n5.  Commit \\> Description \\> © Commit to main\\\n6.  Go to my github.com \\> General \\> Danger zone \\> Change visibility \\> ...\\[\\]... Make public \\> Please type ... to confirm.\\\n7.  Go to Pages \\> Branch: © gh-pages \\> © root \\> save\\\n8.  \\` Your site is published at Error! Hyperlink reference not valid.\n\nAfter committing to github.\\\nVS Source Control \\> stage all changes \\> commitName \\> Commit \\> Push\n\n[Adding Existing Project To Git/GitHub Using Command Line](https://youtu.be/KlggT7ZjKOw)\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/KlggT7ZjKOw\" title=\"Adding Existing Project To Git/GitHub Using Command Line\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n**Extra comments**\n\n```         \n>_ git init\nhint: Using 'master' as the name for the initial branch. This default branch name  \nhint: is subject to change. To configure the initial branch name to use in all  \nhint: of your new repositories, which will suppress this warning, call:  \nhint:   \nhint:   git config --global init.defaultBranch <name>  \nhint:   \nhint: Names commonly chosen instead of 'master' are 'main', 'trunk' and   \nhint: 'development'. The just-created branch can be renamed via this command:  \nhint:   \nhint:   git branch -m <name>  \n\ngithub.com  \nnew repository  \n=============================================================  \nQuick setup — if you’ve done this kind of thing before  \nor    \nhttps://github.com/MarceloRosales/mkt2.git  \nGet started by creating a new file or uploading an existing file. We recommend every repository include a README, LICENSE, and .gitignore.  \n  \n…or create a new repository on the command line  \necho \"# mkt2\" >> README.md  \ngit init  \ngit add README.md  \ngit commit -m \"first commit\"  \ngit branch -M main  \ngit remote add origin https://github.com/MarceloRosales/mkt2.git  \ngit push -u origin main  \n…or push an existing repository from the command line  \ngit remote add origin https://github.com/MarceloRosales/mkt2.git  \ngit branch -M main  \ngit push -u origin main  \n…or import code from another repository  \nYou can initialize this repository with code from a Subversion, Mercurial, or TFS project.  \n===============================================================  \n\n>_ git status  \nOn branch master  \nnothing to commit, working tree clean  \n>_  \n>_ git remote add origin https://github.com/MarceloRosales/mkt2.git  \n>_  \n>_  git push origin master  \nEnumerating objects: 60, done.  \nCounting objects: 100% (60/60), done.  \nDelta compression using up to 4 threads  \nCompressing objects: 100% (53/53), done.  \nWriting objects: 100% (60/60), 447.09 KiB | 1.92 MiB/s, done.  \nTotal 60 (delta 7), reused 0 (delta 0), pack-reused 0  \nremote: Resolving deltas: 100% (7/7), done.  \nTo https://github.com/MarceloRosales/mkt2.git  \n * [new branch]      master -> master  \n```\n\n------------------------------------------------------------------------\n\n[top](#)\n\n### Automatic mkdocs gh-deploy and plugin extensions {#automatic-mkdocs-gh-deploy-and-plugin-extensions}\n\n[**Alexys Jacob - Create beautiful and localized documentations and websites using MkDocs + Github**](https://youtu.be/0pYN6Z-t1-s)\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/0pYN6Z-t1-s\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\nUse **Github Actions** to run **`mkdocs gh-deploy`** automatically when `push` new commits.\n\n.github/workflows/gh-deploy.yml\n\n\\[ \\] Finish this section.\n\n### Theme Materials\n\nInstall\n\n``` bash\n#| eval: false\npip install mkdocs-material\n```\n\n**Check this Resources¶**\\\nSome useful and awesome MkDocs plugins¶\\\nref. website: [ultrabug](https://ultrabug.fr/Tech%20Blog/2021/2021-07-28-create-beautiful-and-localized-documentations-and-websites-using-mkdocs-github/#resources)\\\nhttps://github.com/ultrabug/ultrabug.fr\n\n[MkDocs Wiki's Plugins list (community based)](https://github.com/mkdocs/mkdocs/wiki/MkDocs-Plugins)\\\n[Plugin to handle URL redirections](https://github.com/datarobot/mkdocs-redirects)\\\n[Plugin to handle navigation pages ordering in a very flexible way](https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin)\\\n[Plugin to hook your own functions without having to create a MkDocs plugin](https://github.com/aklajnert/mkdocs-simple-hooks)\n\n[top](#)\n\n### Material theme extension guide\n\n[Navigation](https://squidfunk.github.io/mkdocs-material/setup/setting-up-navigation/#navigation-expansion)\n\n### brewfile Mkdocs Install MAC OS\n\n### Demo:\n\n\\*\\*Installed required (\\>\\_)\\*\\*\n\n``` bash\n#| eval: false\n\nbrew --version  \npython --version  \nbrew list <formula1> || brew install <formula1>  \nbrew install python3  \nbrew install python@3.10  \npip --version  \npip3 install --upgrade pip  \npip3 install mkdoc  \nbrew install mkdocs (error)   \npip3 install mkdocs-material  \nOther Plugins:  \npip install mkdocs-static-i18n  \npip install mkdocs-material  \n```\n\n\\*\\*Create a site with Terminal (\\>\\_)\\*\\*\n\n``` bash\n#| eval: false\n\nmkdocs -h  # (help)  \nmkdocs new {dir-name}   \n    ls  \n    tree  \nmkdocs serve \nCnt+C \n    + code  .  \n    + rstudio . \n    + open -na Rstudio  \n    + open myproject.Rproj  \n        - Modify yml # (simple, just to check if render)\n        - Theme, nav, plugs  \n        - Add content file  \nmkdocs serve \nCnt+C \n```\n\n**In github.com:**\\\ncreate git repo in github.com (follow recommendation of Hernandez?)\\\n1. Github \\> create new repo \\> name: {x: demo_docmaker } \\> description {dockmaker demo} \\> ©Public \\> © Add readme file \\> © Add .gitignore: ˇ{R} \\> © Create repository\\\n2. Repo settings \\> Pages \\> Source \\> ˇBranch: © main \\> /(root) \\> ©save (new page is created)\\\n3. Got to // Code \\> code \\> clone \\> htpps (copy github page address)\n\n-   git ignore R files\\\n-   copy the repo_url\n\n\\*\\*Connect Mkdocs to Gith with \\>\\_:\\*\\*\n\n``` bash\n#| eval: false\ngit init  \n  git config --global init.defaultBranch main # New repos will use \"main\" as default branch.\n  git branch -m main  # changes the name of branch from \"master\" to \"main\"\ngit add .  \ngit status  \ngit config --global user.name “MyGitAccount”  (MR)  \ngit config --global user.email “myemail.com”  (hot)  \ngit commit -m “Initial Commit”  \ngit status (empty) \n\ngedit gitignore #(edit gitignore to don’t track files…??)  \n```\n\n\\*\\*Connect Mkdocs to Github repository \\>\\_:\\*\\*\n\n``` bash\n#| eval: false\n\ngit remote add origin <repo_url>  \ngit push origin master  \ntype github username:\ntype github Password:\n# (push from local master branch to remote master branch)  \n```\n\n\\*\\*Mkdocs site build and deploy in \\>\\_:\\*\\*\n\n``` bash\n#| eval: false\nmkdocs build  \nmkdocs gh-deploy  \n```\n\n**After first commit:**\n\n``` bash\n#| eval: false\nModify code. (and save files)  \nmkdocs build  \nmkdocs gh-deploy   \ngit add .  \ngit status  \ngit commit -m “commit message”    \ngit status   \n```\n\n**Other git commands:**\n\n``` bash\n#| eval: false\n\ngit reflog # (past git logs)  \ngit checkout -b other-branch # (Switch to a new branch)  \ngit branch -a # (lists of branches)  \nrm -fr .git # (remove git files)  \ngit config --global user.name \"MarceloRosales\"  \ngit config --global user.email \"...@hotmail.com\"  \ngit config credential.helper store  \ngit commit -m \"1st commit\"  \ngit log # If want to revert to a preview's version, Copy hash click Q to quit.  \ngit checkout {hash copied from log}  \ngit checkout -b {new branch name} # Create a new branch.  \ngit branch {new branch name} {hash}  # Create new branch, if revert to previous, add hash\ngit checkout {branch name} # To change branches\ngit merge {branch name} # merge branch to main\n```\n\n### Other examples\n\n[yml example of a Mkdoc site in R documentation](https://github.com/rstudio/team-admin.rstudio.com/blob/main/mkdocs.yml) » here the [github page](https://github.com/rstudio/team-admin.rstudio.com) » and here the render [html page](https://team-admin.rstudio.com/)\n\n------------------------------------------------------------------------\n\n[top](#)\n\n## Mkdocs Markdown guide\n\n### Key shortcuts format\n\n++ctrl+alt+del+cmd+fn++\\\n++opt++ ++alt+opt++ ++alt+shift+f++\n\n```         \n++ctrl+alt+del+cmd+fn++  \n++opt++   \n++alt+opt++\n++alt+shift+f++\n```\n\n------------------------------------------------------------------------\n\n### Admonition anotations\n\n`!!! Fix Note`\\\n`??? Collapsable Note`\\\n`???+ Uncollapse collapsable note`\\\nto add content into the anotation box, 2x tab indentation is requierd.\n\n!!! Info \"This is an **admonition** markdown extension info icon(!).\"\\\nThis is the emal address.\n\n```         \n!!! Info \"This is an **admonition** markdown extension  info icon(!).\"  \n        This is the emal address.  \n```\n\n!!! note \" This is and admonition note icon (pencil)\" See manual [here](https://squidfunk.github.io/mkdocs-material/reference/admonitions/#collapsible-blocks)\n\n```         \n!!! note \" This is and admonition note  icon (pencil)\"\n        See manual [here](https://squidfunk.github.io/mkdocs-material/reference/admonitions/#collapsible-blocks)  \n```\n\n??? \"collapsable note\"\\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.\n\n```         \n???  \"collapsable note\"  \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. \n```\n\n???+ note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla.\\\nCurabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.\n\n```         \n???+ note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla.  \n```\n\n!!! example \"![picture](assets/NiigataUicon.png \"pic/iconName\"){: style=\"width:20px\"} [Ansible Infra](https://github.com/binbashar/le-ansible-infra)\" 1. Get into the folder that you need to work with (e.g. `ansible-playbook-vpn-pritunl`) 2. Run `leverage run init` to get all the necessary Ansible roles based on each `requirements.yml` 3. Make whatever changes you need to make as stated in each Playbook Documentation (check Documentation section above) - Opt-1: - Opt-2:\\\n- Opt-3:\n\n```         \n!!! example \"![picture](assets/NiigataUicon.png \"pic/iconName\"){: style=\"width:20px\"} [Ansible Infra](https://github.com/binbashar/le-ansible-infra)\"\n    1. Get into the folder that you need to work with (e.g. `ansible-playbook-vpn-pritunl`)\n    2. Run `leverage run init` to get all the necessary Ansible roles based on each `requirements.yml`\n    3. Make whatever changes you need to make as stated in each Playbook Documentation (check Documentation section above)\n        - Opt-1:\n        - Opt-2:  \n        - Opt-3:  \n```\n\n??? check \"Governance \\| AWS Organizations\" - \\[x\\] [AWS Organizations Initialization]() - \\[x\\] [Invite pre-exiting accounts to AWS Organizations]() - \\[ \\] other\n\n```         \n??? check \"Governance | AWS Organizations\"\n    - [x] [AWS Organizations Initialization]()\n    - [x] [Invite pre-exiting accounts to AWS Organizations]()\n    - [ ] other\n```\n\n!!! summary \"sumary, abstract, tldr have tge same icon\"\n\n```         \n!!! summary\n    \"sumary, abstract, tldr have tge same icon\"\n```\n\n!!! tip `!!! tip`\n\n```         \n!!! tip\n    `!!! tip`\n```\n\n!!! success `!!! success`\n\n```         \n!!! success\n    `!!! success`\n```\n\n!!! question question, help, faq have tge same icon\n\n!!! warning !!! failure !!! danger !!! bug\n\n**In html**\n\n::: {style=\"border: 1px solid transparent; border-color: transparent; margin-bottom: 10px; border-radius: 4px; color: #000000; background-color: #eeeee; border-color: #FF7475;\"}\n::: {style=\"padding: 5px; border: 1px solid transparent; border-color: transparent; border-radius: 4px; color: #FF7475; background-color: #FFEDED;\"}\nFail\n:::\n\n::: {style=\"padding: 5px;\"}\nmessage\n:::\n:::\n\n::: {style=\"border: 1px solid transparent; border-color: transparent; margin-bottom: 10px; border-radius: 4px; color: #000000; background-color: #eeeee; border-color: #ebccd1;\"}\n::: {style=\"padding: 5px; border: 1px solid transparent; border-color: transparent; border-radius: 4px; color: #a94442; background-color: #FFF4E5;\"}\nWarning\n:::\n\n::: {style=\"padding: 5px;\"}\nmessage\n:::\n:::\n\n::: {style=\"border: 1px solid transparent; border-color: transparent; margin-bottom: 10px; border-radius: 4px; color: #000000; background-color: #eeeee; border-color: #64DD22;\"}\n::: {style=\"padding: 5px; border: 1px solid transparent; border-color: transparent; border-radius: 4px; color: #64DD22; background-color: #F0FBE6;\"}\nQuestion / Success\n:::\n\n::: {style=\"padding: 5px;\"}\nmessage\n:::\n:::\n\n::: {style=\"border: 1px solid transparent; border-color: transparent; margin-bottom: 10px; border-radius: 4px; color: #000000; background-color: #eeeee; border-color: #FF3F69;\"}\n::: {style=\"padding: 5px; border: 1px solid transparent; border-color: transparent; border-radius: 4px; color: #FF3F69; background-color: #FFE7EC;\"}\nDanger\n:::\n\n::: {style=\"padding: 5px;\"}\nmessage\n:::\n:::\n\n::: {style=\"border: 1px solid transparent; border-color: transparent; margin-bottom: 10px; border-radius: 4px; color: #000000; background-color: #eeeee; border-color: #57C0FE;\"}\n::: {style=\"padding: 5px; border: 1px solid transparent; border-color: transparent; border-radius: 4px; color: #57C0FE; background-color: #E8F6FF;\"}\nTip/Summary\n:::\n\n::: {style=\"padding: 5px;\"}\nmessage\n:::\n:::\n\n------------------------------------------------------------------------\n\n[top](#)\n\n### Inline blocks\n\n\\[:octicons-tag-24: 7.0.0\\]\\[Inline support\\] · :octicons-beaker-24: Experimental\n\nAdmonitions can also be rendered as inline blocks (i.e. for sidebars), placing them to the right using the `inline` + `end` modifiers, or to the left using only the `inline` modifier:\n\n!!! info inline end\n\n```         \nLorem ipsum dolor sit amet, consectetur adipiscing elit. \n```\n\nUse `inline end` to align to the right (left for rtl languages).\n\n```         \n!!! info inline end\n  \n    Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit. Nulla et euismod nulla.\n```\n\n------------------------------------------------------------------------\n\n!!! info inline Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n\nUse `inline` to align to the left (right for rtl languages).\n\n```         \n!!! info inline\n  \n    Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit. Nulla et euismod nulla.\n```\n\n------------------------------------------------------------------------\n\n[top](#)\n\n### Nested Fence Format\n\nFor this refer to [Fenced Code Blocks](https://squidfunk.github.io/mkdocs-material/setup/extensions/python-markdown/?h=fence#codehilite), [Extension](https://python-markdown.github.io/extensions/fenced_code_blocks/), or better the [SuperFences](https://facelessuser.github.io/pymdown-extensions/extensions/superfences/) in mkdocs page. This does not work in rmd nor word md.\n\nVisit /Users/marcelorosales/Box Sync/Github/mkdocs/MBA03/docs/All.md and run with vs code mkdocs package.\n\n**Fenced Block**\\\nFenced blocks have a specific use, revise later!!! \\>\n\n```         \n  a fenced block  \n```\n\nor better:\n\n!!! check \"best option\" in mkdocs.\n\n```         \nfenced block\n```\n\n```         \n  >\n```\n\nfenced block\n\n```         \n```\n\n**title**\n\nEnd!!!\n\n### Button\n\n[Subscribe to our newsletter](#){.md-button}\n\n### Tabs\n\nMkdocs only.\n\n=== \"Tab 1\" Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\\\n{ .annotate }\\\n1. :man_raising_hand: I'm an annotation!\n\n=== \"Tab 2\" Phasellus posuere in sem ut cursus (1)\\\n{ .annotate }\\\n1. :woman_raising_hand: I'm an annotation as well!\n\nExample:\n\n=== \":octicons-arrow-right-16: inline end\"\n\n````         \n!!! info inline end\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n\n``` markdown\n!!! info inline end\n\n    Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit. Nulla et euismod nulla.\n```\n\nUse `inline end` to align to the right (left for rtl languages).\n````\n\n=== \":octicons-arrow-left-16: inline\"\n\n````         \n!!! info inline\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla.\n\n``` markdown\n!!! info inline\n\n    Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit. Nulla et euismod nulla.\n    \n```\n\nUse `inline` to align to the left (right for rtl languages).\n````\n\nNext, you will setup all required dependencies to work on a Leverage project in your local machine.\n\n```         \n::: {.grid .cards markdown=\"\"}\n-   :fontawesome-brands-html5: **HTML** for content and structure\n-   :fontawesome-brands-js: **JavaScript** for interactivity\n-   :fontawesome-brands-css3: **CSS** for text running out of boxes\n-   :fontawesome-brands-internet-explorer: **Internet Explorer** ... huh?\n:::\n```\n\nExample:\n\n```         \n::: {.grid .cards markdown=\"\"}\n-   :material-clock-fast:{ .lg .middle } **Set up in 5 minutes**\n\n    ------------------------------------------------------------------------\n\n    Install [`mkdocs-material`](#) with [`pip`](#) and get up and running in minutes\n\n    [:octicons-arrow-right-24: Getting started](#)\n\n-   :fontawesome-brands-markdown:{ .lg .middle } **It's just Markdown**\n\n    ------------------------------------------------------------------------\n\n    Focus on your content and generate a responsive and searchable static site\n\n    [:octicons-arrow-right-24: Reference](#)\n\n-   :material-format-font:{ .lg .middle } **Made to measure**\n\n    ------------------------------------------------------------------------\n\n    Change the colors, fonts, language, icons, logo and more with a few lines\n\n    [:octicons-arrow-right-24: Customization](#)\n\n-   :material-scale-balance:{ .lg .middle } **Open Source, MIT**\n\n    ------------------------------------------------------------------------\n\n    Material for MkDocs is licensed under MIT and available on \\[GitHub\\]\n\n    [:octicons-arrow-right-24: License](#)\n:::\n```\n\n::: {.grid markdown=\"\"}\n:fontawesome-brands-html5: **HTML** for content and structure { .card }\n\n:fontawesome-brands-js: **JavaScript** for interactivity { .card }\n\n:fontawesome-brands-css3: **CSS** for text running out of boxes { .card }\n\n> :fontawesome-brands-internet-explorer: **Internet Explorer** ... huh?\n:::\n\nExample:\n\nExample below to be run in mkdocs files only:\n\n::: {.grid markdown=\"\"}\n=== \"Unordered list\"\\\n\\* Sed sagittis eleifend rutrum\\\n\\* Donec vitae suscipit est\\\n\\* Nulla tempor lobortis orci\n\n=== \"Ordered list\"\\\n1. Sed sagittis eleifend rutrum\\\n2. Donec vitae suscipit est\\\n3. Nulla tempor lobortis orci\n\n\\`\\`\\`title=\"Content tabs\" === \"Unordered list\" \\* Sed sagittis eleifend rutrum \\* Donec vitae suscipit est \\* Nulla tempor lobortis orci\n\n=== \"Ordered list\" 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci \\`\\`\\`\n:::\n\nThe fence 4\\`\\`\\`\\` is added coz it prevents code fence to extend. I don't know why it does that.\n\n------------------------------------------------------------------------\n\n### TOC\n\nnot added.\n\n------------------------------------------------------------------------\n\n### Adding abbreviations\n\nAbbreviations can be defined by using a special syntax similar to [links](#adding-tooltips) and [footnotes](footnotes.md), starting with a `*` and immediately followed by the term or acronym to be associated in square brackets:\n\n::: {.cell title='Text with abbreviations'}\n\n```{.markdown .cell-code}\nThe HTML specification is maintained by the W3C.\n\n*[HTML]: Hyper Text Markup Language\n*[W3C]: World Wide Web Consortium\n```\n:::\n\n::: {.result markdown=\"\"}\nThe HTML specification is maintained by the W3C.\n\n*\\[HTML\\]: Hyper Text Markup Language* \\[W3C\\]: World Wide Web Consortium\n:::\n\n------------------------------------------------------------------------\n\n### Adding a glossary\n\nThe \\[Snippets\\] extension can be used to implement a simple glossary by moving all abbreviations in a dedicated file[^1], and [auto-append](https://facelessuser.github.io/pymdown-extensions/extensions/snippets/#auto-append-snippets) this file to all pages with the following configuration:\n\n[^1]: It's highly recommended to put the Markdown file containing the abbreviations outside of the `docs` folder (here, a folder with the name `includes` is used), as MkDocs might otherwise complain about an unreferenced file. In vs preview, this glossary snippet will be displayed (auto-append) at the end of the page, will it be displayed in mkdocs page?.\n\n=== \"includes/abbreviations.md\"\n\n`````         \n```` markdown\n*[HTML]: Hyper Text Markup Language\n*[W3C]: World Wide Web Consortium\n````\n`````\n\n=== \"mkdocs.yml\"\n\n`````         \n```` yaml\nmarkdown_extensions:\n  - pymdownx.snippets:\n      auto_append:\n        - includes/abbreviations.md\n````\n`````\n\n------------------------------------------------------------------------\n\n### Content tabs\n\nSometimes, it's desirable to group alternative content under different tabs, e.g. when describing how to access an API from different languages or environments. Material for MkDocs allows for beautiful and functional tabs, grouping code blocks and other content.\n\n**Configuration**\\\nThis configuration enables content tabs, and allows to nest arbitrary content inside content tabs, including code blocks and ... more content tabs! Add the following lines to mkdocs.yml:\n\n``` yaml\nmarkdown_extensions:\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n```\n\n**code**:\n\n\\`\\`\\` title=\"Content tabs\" === \"Unordered list\"\n\n```         \n* Sed sagittis eleifend rutrum\n* Donec vitae suscipit est\n* Nulla tempor lobortis orci\n```\n\n=== \"Ordered list\"\n\n```         \n1. Sed sagittis eleifend rutrum\n2. Donec vitae suscipit est\n3. Nulla tempor lobortis orci\n```\n\n```         \nulla tempor lobortis orci\n```\n\n**Result**:\n\n=== \"Unordered list\"\n\n```         \n* Sed sagittis eleifend rutrum\n* Donec vitae suscipit est\n* Nulla tempor lobortis orci\n```\n\n=== \"Ordered list\"\n\n```         \n1. Sed sagittis eleifend rutrum\n2. Donec vitae suscipit est\n3. Nulla tempor lobortis orci\n```\n\n------------------------------------------------------------------------\n\n### Images and Galleries Tests\n\n[top](#)\n\n#### Markdown images\n\n**Configuration** ¶ This configuration adds the ability to align images, add captions to images (rendering them as figures), and mark large images for lazy-loading. Add the following lines to mkdocs.yml:\n\n``` yaml\nmarkdown_extensions:\n  - attr_list\n  - md_in_html\n```\n\n**Lightbox**¶ If you want to add image zoom functionality to your documentation, the glightbox plugin is an excellent choice, as it integrates perfectly with Material for MkDocs. Install it with pip:\n\n``` bash\npip install mkdocs-glightbox\n```\n\nThen, add the following lines to mkdocs.yml:\n\n``` yaml\nplugins:\n  - glightbox\n```\n\n!!! warning \\* Images with mkdocs markdown code will not be displayed correctly by vs code preview. \\* html image code is not recognize by mkdocs build \\* Image galleries in html may not work in mkdocs markdown\n\n``` markdown\n![name](img/src/path \"alt\"){width=\"300\"}  \n![01-Incisor-1000x684](img/01-Incisor-1000x684.jpg \"incisor\"){width=\"300\"}  \n```\n\nTo reference an image:\\\n`![02-Premolar][Premolar]{width=\"300\"}`\n\nPlace the reference at the end or in a list of image references. Reference code line will not be displayed. (Space between this line and the reference is required)\n\nAbove this section there is a reference list, but it is not displayed in vs code nor mkdocs is:\n\n```         \n[Incisor]: img/01-Incisor-1000x684.jpg  \n[Premolar]: img/02-Premolar-1000x684.jpg   \n[Molar]: img/03-Molar-1000x684.jpg  \n[Articulator]: img/04-Articulator-1000x684.jpg  \n[Waxup]: img/05-Waxup-1000x684.jpg  \n[MetalPlate]: img/06-metalplate.png  \n[Pro-Arch]: img/Pro-Arch-Ig.png\n[Incisor_3]: img/s300/01-Incisor-300.jpg  \n[Premolar_3]: img/s300/02-Premolar-300.jpg   \n[Molar_3]: img/s300/03-Molar-300.jpg  \n[Articulator_3]: img/s300/04-Articulator-300.jpg  \n[Waxup_3]: img/s300/05-Waxup-300.jpg \n```\n\n??? failure \"**Other references for md image size** (not working with mkdocs)\"\\\n[Changing image size in Markdown](https://stackoverflow.com/questions/14675913/changing-image-size-in-markdown)\n\n```         \nWith certain Markdown implementations (including Mou and Marked 2 (only macOS)) you can append **=WIDTHxHEIGHT** after the URL of the graphic file to resize the image. Do not forget the space before the =.  \n\n`![](./pic/pic1_50.png =100x20)`   \n`![01-Incisor-1000x684](img/01-Incisor-1000x684.jpg =200x100)` not working.  \n\nYou can skip the HEIGHT\n`![](./pic/pic1s.png =250x)`\n\nAnd Width\n`![](./pic/pic1s.png =x250)`\n```\n\n**Nested images, from small to larger ver** (not working?)\n\nTo make a link from image displayed (small size thumb img) to larger version of the img: Nested links...\n\n![![](http://unsplash.it/500/500?image=1000)](http://unsplash.it/50/50?image=1000)\n\n![\\<image src=\"http://unsplash.it/50/50?image=1000\"](http://unsplash.it/500/500?image=1000){width=\"300\"}\n\n```         \n![![](http://unsplash.it/500/500?image=1000)](http://unsplash.it/50/50?image=1000)   \n![<image src=\"http://unsplash.it/50/50?image=1000\"](http://unsplash.it/500/500?image=1000){ width=\"300\" }  \n```\n\n```         \n![<image src=\"img/01-Incisor-1000x684.jpg\"](img/01-Incisor-1000x684.jpg){ width=\"10%\" } \n```\n\n<http://unsplash.it/50/50?image=1000>\\\n<http://unsplash.it/500/500?image=1000>\n\n------------------------------------------------------------------------\n\n#### Simple list of images mkdocs\n\n[top](#)\n\nBetter to place a space between images.\n\n![Inc](img/01-Incisor-1000x684.jpg){width=\"200\"}\n\n![Prem](img/02-Premolar-1000x684.jpg){width=\"200\"}\n\n![Mol](img/03-Molar-1000x684.jpg){width=\"200\"}\n\n![Art](img/04-Articulator-1000x684.jpg){width=\"200\"}\n\n``` markdown\n![Inc][Incisor]{ width=\"200\" }   \n![Prem][Premolar]{width=\"200\" }   \n![Mol][Molar]{width=\"200\" }   \n![Art][Articulator]{width=\"200\" }   \n```\n\n#### Image align left and right\n\n[top](#)\n\n![Image title](img/s300/01-Incisor-300.jpg){align=\"left\"} `![Image title](img/s300/01-Incisor-300.jpg){ align=left }` **Lorem Ipsum** is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\n\n![Image title](img/s300/02-Premolar-300.jpg){align=\"right\"} **Start Text in the same line as code,** `![Image title](img/s300/02-Premolar-300.jpg){ align=right }` so text align to top of the image.\\\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n\n**Aling + image reference**\n\n![Inc](img/s300/01-Incisor-300.jpg){align=\"left\"} `![Inc][Incisor_3]{ align=left }` Start Text in the same line as code, so text align to top of the image. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n\n![Inc](img/s300/02-Premolar-300.jpg){align=\"right\"} `![Inc][Premolar_3]{ align=right }` Start Text in the same line as code, so text align to top of the image. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n\n**Image reference + size + Align**\n\n1.  ![01-Incisor-1000x684](img/01-Incisor-1000x684.jpg \"incisor\"){width=\"100\"; align=right} `![01-Incisor-1000x684](img/01-Incisor-1000x684.jpg \"incisor\"){width=\"100\"; align=right}` Start Text in the same line as code, so text align to top of the image. Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n2.  ![01-Incisor](img/s300/01-Incisor-300.jpg){width=\"100\"; align=right} `![01-Incisor][Incisor_3]{width=\"100\"; align=right}` Start Text in the same line as code, so text align to top of the image. Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n\n#### Image align center\n\n[top](#)\n\n<figure>\n\n![Inc](img/01-Incisor-1000x684.jpg){width=\"300\"}\n\n<figcaption>Image caption</figcaption>\n\n</figure>\n\n#### Photo gallery\n\n-   [ ] [Simple Photo Gallery](https://haltakov.net/simple-photo-gallery/)\n\n#### HTML photo gallery (bootstrap?)\n\n[top](#)\n\nNot working coz needs style or align tags. Appears just like a list of images.\n\n``` html\n <div class=\"container-fluid\" id=\"spacer-Nav-Content\"></div>\n  <div class=\"header\" id=\"メディア\"> <h1>ビデオ・メディア</h1></div>\n  <div class=\"wrapper\"><b><a href=\"動画の再生方法について.html\" target=\"_blank\"><h2>動画の再生方法</h2></a></b></div>\n  <!-- Gallery Grid Start -minmax() in auto-fill repeating tracks, by example https://gridbyexample.com/examples/example28/ -->\n  <div class=\"wrapper\">\n    <div class=\"box a\"><a href=\"movies/Video01/video01.m3u8\" target=\"_blank\"><img src=\"/img/01-Incisor-1000x684.jpg\" alt=\"\" style=\"width:50%\"/><br>上顎左側中切歯ビデオ</a></div>\n    <div class=\"box b\"><a href=\"movies/Video02/video02.m3u8\" target=\"_blank\"><img src=\"/img/02-Premolar-1000x684.jpg\" alt=\"\" width=\"100\"/><br>上顎左側第１小臼歯ビデオ</a></div>\n    <div class=\"box c\"><a href=\"movies/Video03/video03.m3u8\" target=\"_blank\"><img src=\"/img/03-Molar-1000x684.jpg\" alt=\"\" width=\"200\"/><br>上顎左側第１大臼歯ビデオ</a></div>\n    <div class=\"box d\"><a href=\"movies/2019-ArticulatorMount/video01.m3u8\" target=\"_blank\"><img src=\"/img/04-Articulator-1000x684.jpg\" alt=\"\" width=\"200\"/><br>咬合器装着ビデオ</a></div>\n    <div class=\"box d\"><a href=\"movies/video04mp4/ProArchGI.mp4\" target=\"_blank\"><img src=\"/img/Pro-Arch-Ig.png\" alt=\"\" width=\"200\"/><br>プロアーチIG咬合器装着ビデオ</a></div>\n    <div class=\"box e\"><a href=\"movies/2019-wax-up/2019-wax-up.m3u8\" target=\"_blank\"><img src=\"/img/05-Waxup-1000x684.jpg\" alt=\"\" width=\"20\"/><br>下顎右側第1大臼歯ワックスアップビデオ</a></div>\n    <div class=\"box f\"><a href=\"movies/202001/202001.mp4\" target=\"_blank\"><img src=\"/img/06-metalplate.png\" alt=\"\" width=\"20\"/><br>金属板の取り出し方法</a></div>\n    <!--<div class=\"box g\">G</div>-->\n    <!--<div class=\"box h\">H</div>-->\n\n  </div>\n  <!-- Gallery Grid End -minmax() in auto-fill repeating tracks, by example https://gridbyexample.com/examples/example28/ -->\n```\n\n------------------------------------------------------------------------\n\n#### Check this out\n\nSearch:\\\n- simple html photo gallery code\n\n-   [57 CSS Galleries](https://freefrontend.com/css-gallery/)\\\n-   [Rmarkdown image gallery](https://stackoverflow.com/questions/68196767/rmarkdown-image-gallery)\n\n#### Simple list of images in html\n\n(added the {sh} code and fence for Rmd coz of error rendering page. For md and mkdocs, delete the fence)\n\n``` bash\n<img src=\"/docs/img/01-Incisor-1000x684.jpg\" alt=\"HTML5 Icon\" width=\"128\" height=\"128\">\n<img src=\"/docs/img/02-Premolar-1000x684.jpg\" alt=\"HTML5 Icon\" style=\"width:128px;height:128px;\">\n<img src=\"/docs/img/02-Premolar-1000x684.jpg\" alt=\"HTML5 Icon\" style=\"width:100%;\">\n<img src=\"/docs/img/02-Premolar-1000x684.jpg\" alt=\"HTML5 Icon\" style=\"width:30%;\">\n<img src=\"/docs/img/02-Premolar-1000x684.jpg\" alt=\"HTML5 Icon\" style=\"width:30%;\">\n<img src=\"/docs/img/02-Premolar-1000x684.jpg\" alt=\"HTML5 Icon\" style=\"width:30%;\">\n```\n\n``` html\n<img src=\"/docs/img/01-Incisor-1000x684.jpg\" alt=\"HTML5 Icon\" width=\"128\" height=\"128\">\n<img src=\"/docs/img/02-Premolar-1000x684.jpg\" alt=\"HTML5 Icon\" style=\"width:128px;height:128px;\">\n<img src=\"/docs/img/02-Premolar-1000x684.jpg\" alt=\"HTML5 Icon\" style=\"width:100%;\">\n<img src=\"/docs/img/02-Premolar-1000x684.jpg\" alt=\"HTML5 Icon\" style=\"width:30%;\">\n<img src=\"/docs/img/02-Premolar-1000x684.jpg\" alt=\"HTML5 Icon\" style=\"width:30%;\">\n<img src=\"/docs/img/02-Premolar-1000x684.jpg\" alt=\"HTML5 Icon\" style=\"width:30%;\">\n```\n\n† Does display in vs code preview,\\\nDoes not display in word md panel (preview),\\\nDoes display in mkdocs site,\n\nIt is also possible to **set the size of all images at once** with the\n\n```{=html}\n<style></style>\n```\ntags in heading. ex.\n\n``` html\n<!DOCTYPE html>\n<html>\n<head> <!--CAUTION: This is a head style! This will set the size of ALL images in the page, not only in this section but all the page -->\n<style>\nimg {\n  width: 50%;\n}\n</style>\n</head>\n<body>\n<img src=\"/img/01-Incisor-1000x684.jpg\" alt=\"HTML5 Icon\" width=\"128\" height=\"128\">\n<img src=\"/img/02-Premolar-1000x684.jpg\" alt=\"HTML5 Icon\" style=\"width:128px;height:128px;\">\n.\n.\n.\n</body>\n</html>\n```\n\n!!! warning CAUTION: This is a head style, it will set the size of ALL images in the page\n\n#### Gallery using .md Table\n\n``` html\n|   |   |   |   |\n|---|---|---|---|\n| <div class=\"box a\"><a href=\"movies/Video01/video01.m3u8\" target=\"_blank\"><img src=\"/img/01-Incisor-1000x684.jpg\" alt=\"\" width=\"30%\"/><br>上顎左側中切歯ビデオ</a></div>  |  <div class=\"box b\"><a href=\"movies/Video02/video02.m3u8\" target=\"_blank\"><img src=\"/img/02-Premolar-1000x684.jpg\" alt=\"\" width=\"200\"/><br>上顎左側第１小臼歯ビデオ</a></div>  |   <div class=\"box c\"><a href=\"movies/Video03/video03.m3u8\" target=\"_blank\"><img src=\"/img/03-Molar-1000x684.jpg\" alt=\"\" width=\"200\"/><br>上顎左側第１大臼歯ビデオ</a></div> |   |\n| ![01-Incisor-1000x684](img/01-Incisor-1000x684.jpg \"incisor\")  |   |   |   |\n```\n\n#### Simple photo gallery, github free open source\n\n[Simple Photo Gallery - Vladimir Haltakovhttps://haltakov.net › simple-photo-gallery](https://haltakov.net/simple-photo-gallery/)\n\n#### Animated GIFs in HTML\n\n`<img src=\"programming.gif\" alt=\"Computer Man\" style=\"width:48px;height:48px;\">`\n\n#### Image as Link\n\n``` html\n<a href=\"default.asp\">\n  <img src=\"smiley.gif\" alt=\"HTML tutorial\" style=\"width:42px;height:42px;\">\n</a>\n```\n\n<a href=\"https://www.w3schools.com/html/html_images.asp\"> <img src=\"img/01-Incisor-1000x684.jpg\" alt=\"HTML tutorial\" style=\"width:50%\"/> </a>\n\n#### Image Floating position in html\n\nUse the CSS float property to let the image float to the right or to the left of a text:\n\n```         \n<p><img src=\"smiley.gif\" alt=\"Smiley face\" style=\"float:right;width:42px;height:42px;\">\nThe image will float to the right of the text.</p>\n\n<p><img src=\"smiley.gif\" alt=\"Smiley face\" style=\"float:left;width:42px;height:42px;\">\nThe image will float to the left of the text.</p>\n```\n\nDelete fence for mkdocs in the code below:\n\n<p><img src=\"/img/01-Incisor-1000x684.jpg\" alt=\"Smiley face\" style=\"float:right;width:50%;\"/> The image will float to the right of the text.</p>\n\n/img/\\~... path in:\\\nVs code: will NOT be diplayed\\\nMkdocs: WILL be displayed\n\nDelete fence for mkdocs in the code below:\n\n<p><img src=\"/img/02-Premolar-1000x684.jpg\" alt=\"Smiley face\" style=\"float:left;width:50%;\"/> The image will float to the left of the text.</p>\n\n/docs/img/... path in:\\\nVs code: WILL be displayed\\\nMkdocs: will NOT be diplayed\n\n</br>\n\n------------------------------------------------------------------------\n\n</br>\n\n#### Photo gallery samples\n\n##### W3 school CSS photo gallery sample 1\n\n``` html\n<!-- coment this block coz it interfere with the mkdocs nav template\n<head>\n  <title>Bootstrap Example</title>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\">\n  <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.slim.min.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\n  <style>\n  /* Make the image fully responsive */\n  .carousel-inner img {\n    width: 100%;\n    height: 100%;\n  }\n  </style>\n</head>\nEnd head comment-->\n<body>\n\n<div id=\"demo\" class=\"carousel slide\" data-ride=\"carousel\">\n\n  <!-- Indicators -->\n  <ul class=\"carousel-indicators\">\n    <li data-target=\"#demo\" data-slide-to=\"0\" class=\"active\"></li>\n    <li data-target=\"#demo\" data-slide-to=\"1\"></li>\n    <li data-target=\"#demo\" data-slide-to=\"2\"></li>\n  </ul>\n  \n  <!-- The slideshow -->\n  <div class=\"carousel-inner\">\n    <div class=\"carousel-item active\">\n      <img src=\"/img/01-Incisor-1000x684.jpg\" alt=\"Los Angeles\" width=\"1100\" height=\"500\">\n    </div>\n    <div class=\"carousel-item\">\n      <img src=\"/img/02-Premolar-1000x684.jpg\" alt=\"Chicago\" width=\"1100\" height=\"500\">\n    </div>\n    <div class=\"carousel-item\">\n      <img src=\"/img/03-Molar-1000x684.jpg\" alt=\"New York\" width=\"1100\" height=\"500\">\n    </div>\n  </div>\n  \n  <!-- Left and right controls -->\n  <a class=\"carousel-control-prev\" href=\"#demo\" data-slide=\"prev\">\n    <span class=\"carousel-control-prev-icon\"></span>\n  </a>\n  <a class=\"carousel-control-next\" href=\"#demo\" data-slide=\"next\">\n    <span class=\"carousel-control-next-icon\"></span>\n  </a>\n</div>\n\n</body>\n```\n\n##### W3 school CSS photo gallery sample 2\n\n[w3schools photos](https://www.w3schools.com/howto/howto_js_slideshow.asp) Delete fence for mkdocs in the code below:\n\n```         \n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<style>\n* {box-sizing: border-box;}\nbody {font-family: Verdana, sans-serif;}\n.mySlides {display: none;}\nimg {vertical-align: middle;}\n\n/*Slideshow container*/\n.slideshow-container {\n  max-width: 1000px;\n  position: relative;\n  margin: auto;\n}\n\n/*Caption text*/\n.text {\n  color: #f2f2f2;\n  font-size: 15px;\n  padding: 8px 12px;\n  position: absolute;\n  bottom: 8px;\n  width: 100%;\n  text-align: center;\n}\n\n/*Number text (1/3 etc)*/\n.numbertext {\n  color: #f2f2f2;\n  font-size: 12px;\n  padding: 8px 12px;\n  position: absolute;\n  top: 0;\n}\n\n/*The dots/bullets/indicators*/\n.dot {\n  height: 10px;\n  width: 10px;\n  margin: 0 2px;\n  background-color: #bbb;\n  border-radius: 50%;\n  display: inline-block;\n  transition: background-color 0.6s ease;\n}\n\n.active {\n  background-color: #717171;\n}\n\n/*Fading animation*/\n.fade {\n  animation-name: fade;\n  animation-duration: 1.5s;\n}\n\n@keyframes fade {\n  from {opacity: .4}\n  to {opacity: 1}\n}\n\n/*On smaller screens, decrease text size*/\n@media only screen and (max-width: 300px) {\n  .text {font-size: 11px}\n}\n</style>\n</head>\n<body>\n\n<h2>Automatic Slideshow</h2>\n<p>Change image every 4 seconds:</p>\n\n<div class=\"slideshow-container\">\n\n<div class=\"mySlides fade\">\n  <div class=\"numbertext\">1 / 3</div>\n  <img src=\"/img/01-Incisor-1000x684.jpg\" style=\"width:100%\">\n  <div class=\"text\">Caption Text</div>\n</div>\n\n<div class=\"mySlides fade\">\n  <div class=\"numbertext\">2 / 3</div>\n  <img src=\"/img/02-Premolar-1000x684.jpg\" style=\"width:100%\">\n  <div class=\"text\">Caption Two</div>\n</div>\n\n<div class=\"mySlides fade\">\n  <div class=\"numbertext\">3 / 3</div>\n  <img src=\"/img/03-Molar-1000x684.jpg\" style=\"width:100%\">\n  <div class=\"text\">Caption Three</div>\n</div>\n\n</div>\n<br>\n\n<div style=\"text-align:center\">\n  <span class=\"dot\"></span>\n  <span class=\"dot\"></span>\n  <span class=\"dot\"></span>\n</div>\n\n<script>\nlet slideIndex = 0;\nshowSlides();\n\nfunction showSlides() {\n  let i;\n  let slides = document.getElementsByClassName(\"mySlides\");\n  let dots = document.getElementsByClassName(\"dot\");\n  for (i = 0; i < slides.length; i++) {\n    slides[i].style.display = \"none\";  \n  }\n  slideIndex++;\n  if (slideIndex > slides.length) {slideIndex = 1}\n  for (i = 0; i < dots.length; i++) {\n    dots[i].className = dots[i].className.replace(\" active\", \"\");\n  }\n  slides[slideIndex-1].style.display = \"block\";  \n  dots[slideIndex-1].className += \" active\";\n  setTimeout(showSlides, 4000); // Change image every 4 seconds\n}\n</script>\n\n</body>\n</html>\n```\n\n------------------------------------------------------------------------\n\n### Resize batch files\n\n[top](#)\n\n!!! tip Batch Resize files.\\\nBatch Rename files.\n\n\\*\\*Resize multiple images (resize img batch) in \\>\\_:\\*\\*\n\n``` bash\nsips -Z 600 *.jpg\n```\n\n!!! danger\\\nOriginal files will be changed, **NO undo option** available.\n\nsips: sips command is used to query or modify raster image files (JPG/GIF/PNG) and ColorSync ICC profiles. Image processing options include flip, rotate, change image format/width/height. Its functionality can also be used through the \"Image Events\" AppleScript suite.\\\n-Z: Maintain aspect ratio.\\\n600: output width? size in pixels.\\\n\\*.jpg: files to modify, in this case, all .jpg files in the current directory.\n\n```         \nsips -Z 600 *.jpg --out ~/new/dir/path/and/name\n```\n\nThis will create a new directory, make a copy of the files, modify size and save in the new directory.\n\n**Small Script to auto resize**\n\nImprove this script with user input.\n\n``` bash\n#!/bin/bash\n# Change format, and change max size. 20181231 DM\n\noldFormat=HEIC\nnewFormat=png\nnewSize=800\n\nfor i in *.$oldFormat\ndo\n    sips --setProperty format $newFormat --resampleHeightWidthMax $newSize \"$i\" --out \"${i%$oldFormat}\"$newFormat\ndone\nexit 0\n```\n\n------------------------------------------------------------------------\n\n### Rename batch files\n\n[top](#)\n\n!!! check \"**Step By Step: Using The Mac Batch Rename Tool**\"\n\n<iframe width=\"426\" height=\"240\" src=\"https://www.youtube.com/embed/rRIZAjylKDw\" title=\"Step By Step: Using The Mac Batch Rename Tool\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n1.  Select all files you want to rename.\n2.  Finder// File\\> Rename..Items \\> ...\\[\\]... Rename Finder items: Find= text_to_find Replace with= Text_to_replace\n\n!!! failure \"\\*\\*Rename all the files (rename batch) in \\>\\_: (not working, permission error)\\*\\*\"\\\n!!! bug bash: ./03-Molar-1000x684.jpg: Permission denied\n\n1.  Go to the directory containing files.\\\n2.  run command:\n\n``` bash\nfind . -type f -exec bash -c `mv “$0” “${0%  .jpg}-300.jpg”` {}   ;\n```\n\nfind all the files in the current directory of this type of files\\\nthen, execute this command ? ? disregard the extension .jpg and add the suffix: -300.jpg\n\n------------------------------------------------------------------------\n\n### Md tables\n\n[top](#)\n\n**Markdown table generator**\n\n-   [x] 1. [Markdown Table Editor and Generator](https://tableconvert.com/markdown-generator).\n-   [x] 2. [Tables Generator](https://www.tablesgenerator.com/markdown_tables#).\n-   [x] 3. [Copy Table in Excel and Paste as a Markdown Table](https://thisdavej.com/copy-table-in-excel-and-paste-as-a-markdown-table/).\n-   \\[ \\]\n\n!!! check \"Md shortcut tables\" - \\[ \\] Selecting text (don\\`t know how separation is made (coma?, tab?, space?))\\\n- \\[x\\] right click \\> Add table (with header)\\\n- \\[x\\] Table will be automatically created\n\nTables created with [Markdown Table Editor and Generator](https://tableconvert.com/markdown-generator) space cells width equally, much easer to see in raw md code but only up to 20 x 20 tables.\\\nTables created witn right click shortcut are in line separation and harder to see as raw data.\n\n!!! tip ++alt+shift+f++ Table formatter. After creating the table with shortcut ( cell size depends on word lenght, difficult to read in raw data). This key command will arrange cell space to be qual. See Mardown all in one extension for more tips.\n\n**Photo gallery**\n\n-   [ ] [Simple Photo Gallery](https://haltakov.net/simple-photo-gallery/)\n\n## HOW TO INSERT TABLES IN RSTUDIO.\n\n[top](#)\n\n[A new RStudio addin to facilitate inserting tables in Rmarkdown documents](https://lbusett.netlify.app/post/a-new-rstudio-addin-to-facilitate-inserting-tables-in-rmarkdown-documents/#:~:text=To%20use%20it%2C%20open%20a,Addins%20%E2%80%93%3E%20Insert%20Table%E2%80%9D)\n\n[Copy Table in Excel and Paste as a Markdown Table](https://thisdavej.com/copy-table-in-excel-and-paste-as-a-markdown-table/)\n\nhttps://www.tablesgenerator.com/markdown_tables\n\n## Pandocs\n\n[top](#)\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/N31E_NZYQQY\" title=\" Using Pandoc\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n**What is Pandoc?**: Is a universal document converter for:\n\n1.  **text** markup (markdown). *italics* --\\> <i>italics</i>\\\n2.  standalone **files**. .md --\\> .docx (or html, etc)\n\n[pandoc](https://pandoc.org/)\n\n### Install\n\n**macOS** [link](https://pandoc.org/installing.html#macos)\\\nThere is a package installer at pandoc's [download page](https://github.com/jgm/pandoc/releases/latest). If you later want to **uninstall** the package, you can do so by downloading [this script](https://raw.githubusercontent.com/jgm/pandoc/master/macos/uninstall-pandoc.pl) and running it with perl uninstall-pandoc.pl. Alternatively, you can install pandoc using Homebrew:\n\n``` bash\nbrew install pandoc\n```\n\nHomebrew can also install other software that integrates with Pandoc. For example, to install [librsvg](https://wiki.gnome.org/Projects/LibRsvg) (its rsvg-convert covers formats without SVG support), [Python](https://www.python.org/) (to use Pandoc filters), and [BasicTeX](https://www.tug.org/mactex/morepackages.html) (to typeset PDFs with LaTeX):\n\n``` bash\nbrew install librsvg python homebrew/cask/basictex\n```\n\nNote: On unsupported versions of macOS (more than three releases old), Homebrew installs from source, which takes additional time and disk space for the ghc compiler and dependent Haskell libraries. We also provide a zip file containing the binaries and man pages, for those who prefer not to use the installer. Simply unzip the file and move the binaries and man pages to whatever directory you like. By default, Pandoc creates PDFs using LaTeX. Because a full MacTeX installation uses four gigabytes of disk space, we recommend BasicTeX or TinyTeX and using the tlmgr tool to install additional packages as needed. If you receive errors warning of fonts not found: tlmgr install collection-fontsrecommended\n\n### Using Pandoc\n\n1.  Open \\>\\_\n2.  Go to folder containing files (or use path to files)\n3.  Ex. Txt -\\> RTF\n\n```         \npandoc test.txt --bibliography testlibrary.bib --smart --normalize -s -o success.rtf\n```\n\n-   pandoc: use pandoc package\n-   test.txt: \"input\" file to be converted to .rtf\n-   --bibliography testlibrary.bib: Generate citations (bibliography) using bib file (all the metadata needed for the citations is in the file testlibrary.bib (created before), Default format is Chicago Author-Date)\n-   -- smart: Produce topographically correct output.\n-   --normalize: Remove repeated spaces, other cleanup.\n-   -s: Produce a stand alone document.\\\n-   -o: output to a file.\\\n-   success.rtf: Is the name of the \"output\" file and the extension rtf is the type of file to convert to.\n\nIf input and bib files are not in the same folder where you run pandoc, you will need to include the file paths, too.\n\n**Convert Markdown into a Word Document**\n\nEnter:\n\n``` bash\npandoc -o output.docx -f markdown -t docx filename.md  \n```\n\n### Academic Writing in Markdown\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/hpAJMSS8pvs\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\nHere are three recommendations for people interested in learning more:\n\n1.  The Markdown Field Guide: <https://www.macsparky.com/markdown/>\n2.  The Pandoc website: <http://pandoc.org/>\n3.  David Smith's blog: <http://www.davidsmith.name/>\n\n------------------------------------------------------------------------\n\n## Create Mkdocs site\n\n::: note\n\\*\\*Installed required (\\>\\_)\\*\\*\n\n``` bash\n#| eval: false\n\nbrew --version   \npython --version  \nbrew list <formula1> || brew install <formula1>  \nbrew install python3  \nbrew install python@3.10  \npip --version  \npip3 install --upgrade pip  \npip3 install mkdoc  \nbrew install mkdocs (error)   \npip3 install mkdocs-material  \nOther Plugins:  \npip install mkdocs-static-i18n  \npip install mkdocs-material  \n```\n\n\\*\\*Create a site with Terminal (\\>\\_)\\*\\*\n\n::: {.cell}\n\n```{.bash .cell-code}\nmkdocs -h  (help)  \nmkdocs new {dir-name}   \ncd {dir-name}  \n  ls   \n  tree   \nmkdocs serve  \nCnt+C  \n\n# Other commands\ncode .  \nrstudio .   \nopen -na Rstudio   \nopen myproject.Rproj\n\n```\n:::\n\nThen continue by:\n\n```         \n- Modify yml (simple, just to check if render)  \n- Theme, nav, plugs   \n- Create Tab2.md, Tab3.md, Tab4.md for trial  \n```\n\n``` yaml\nsite_name: LabNotes\nsite_url: https://example.com_or_my.github\nrepo_url: https://github.com/squidfunk/mkdocs-material # url link of ripo in navbar\nrepo_name: squidfunk/mkdocs-material # name of ripo to be displayed in navbar\n\nnav:\n  - Home:\n    -  Hi: \"index.md\"\n  - Tab2: \"01-Tab2.md\"\n  - Tab3: \"02-Tab3.md\"\n  - Tab4: \n    - sub1:\n      - sub2: \n        - sub3: \n          - sub4: \"03-Tab4.md\"\n\ntheme: # https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#accent-color \n  name: material\n  favicon: assets/NiigataUicon.png #small icon in the \"browser`s\" tap.Save @ /dir  \n  features:\n    #- navigation.instant\n    - navigation.tabs #Nav tabs on top\n    - navigation.tabs.sticky # Keeps top nav menu from hiding.\n    #- header.autohide # Hides all top menu.\n    #- navigation.sections  #uncollapse all tab sections.\n    - navigation.top\n\n  palette:\n    #primary: green # Color of the Header\n    #accent: red # Colors change on hover. \n    # Palette toggle for light mode\n    - primary: Default  # The original was scheme: Default \n      accent: red # Colors change on hover. \n      toggle:\n        icon: material/brightness-7 \n        name: Switch to dark mode\n    # Palette toggle for dark mode\n    - scheme: slate\n      accent: light green # Colors change on hover. \n      toggle:\n        icon: material/brightness-4\n        name: Switch to light mode\n        accent: red # Colors change on hover. \n  logo: # assets/logo.png\n        assets/NiigataUicon.png\n  icon:\n    repo: fontawesome/brands/git-alt # repo icon\n\nextra:\n  homepage: https://www.niigata-u.ac.jp/ # url for the logo icon\n\n  \n\n#include_sidebar: true\n\n#===================================================================================\n# Mkdocs Markdown Extentions, Plugins & extras\n#===================================================================================\nmarkdown_extensions:\n  - admonition\n  - abbr\n  - attr_list\n  - def_list\n  - footnotes\n  - meta\n  - md_in_html\n  - codehilite\n  - pymdownx.critic\n  - pymdownx.caret\n  - pymdownx.keys\n  - pymdownx.mark\n  - pymdownx.tilde\n  - pymdownx.tabbed\n  - pymdownx.details\n  - pymdownx.inlinehilite\n  - pymdownx.smartsymbols\n  - pymdownx.tasklist:\n      custom_checkbox: true\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n  - toc:\n      # insert a blank space before the character\n      permalink: \"#\"\n\nplugins:\n  - glightbox # istall requied: images/lightbox\n  - search # add search box.\n  - i18n: # language plugin. \n      default_language: en\n      languages:\n        en: English\n        ja: 日本語\n        es: Español\n```\n\n-   Add content files: **Copy/paste Tabs.md files**\n\nmkdocs serve\\\nCnt+C\n\n> mkdocs build ??\n\n**In github.com:**\\\ncreate git repo in github.com (follow recommendation of Hernandez?)\\\n1. Github \\> create new repo \\>\\\nname: {x: demo_docmaker } \\>\\\ndescription {dockmaker demo} \\>\\\n©Public \\>\\\n© Add readme file \\>\\\n© Add .gitignore: ˇ{R} \\>\\\n© Create repository\n\n> 1.  Repo settings \\> Pages \\>\\\n>     Source: Deploy form a branch \\>\\\n>     ˇBranch: © main \\> /(root) \\> ©save (new page is created)\\\n> 2.  Got to // Code \\> code \\> clone \\> htpps (copy github page address)\\\n>     https://github.com/MarceloRosales/mkd_LabNotes.git\n\n**Connect Mkdocs to Git** \\>\\_:\\\ngit init\\\ngit add .\\\ngit status\n\n**Connect Mkdocs to Github repository** \\>\\_:\n\ngit remote add origin {git_url}\n\n> Sometime requires:\\\n> git config --global user.name \"MyGitAccount\"\\\n> git config --global user.email \"myemail.com\"\\\n> git config credential.helper store\\\n> gedit gitignore (edit gitignore to don't track files...??)\n\ngit commit -m \"Initial Commit\"\\\ngit status (empty)\\\ngit push origin master\n\n> Sometime requires:\\\n> type github username:\\\n> type github Password:\\\n> (push from local master branch to remote master branch)\n\n***Mkdocs site build and deploy*** \\>\\_:\\\nmkdocs build\\\nmkdocs gh-deploy\n\n**In github.com:**\\\nMake sure deploy branch is gh-pages.\\\n1. Repo settings \\> Pages \\> Source: Deploy form a branch \\> ˇBranch: © **gh-paages** \\> /(root) \\> ©save (new page is created)\n\n### Adding content\n\n**After first commit:**\\\n`Modify code. (and save files)`\\\nmkdocs build\\\nmkdocs gh-deploy\\\ngit add .\\\ngit status\\\ngit commit -m \"commit message\"\\\ngit push origin master\n\n**Other git commands:**\\\ngit reflog (past git logs)\\\ngit checkout -b other-branch (Switch to a new branch)\\\ngit branch -a (lists of branches)\\\nrm -fr .git (remove git files)\\\ngit config --global user.name \"MarceloRosales\"\\\ngit config --global user.email \"...@hotmail.com\"\\\ngit config credential.helper store\\\ngit commit -m \"1st commit\"\\\ngit log \\# If want to revert to a preview's version, Copy hash click Q to quit.\\\ngit checkout {hash copied from log}\\\ngit checkout -b {new branch name} \\# Create a new branch.\\\ngit branch {new branch name} {hash} \\# Create new branch, if revert to previous, add hash\\\ngit checkout {branch name} \\# To change branches\\\ngit merge {branch name} \\# merge branch to main\n:::\n\n## Create bs4_book in Rstudio\n\n//Rstudio \\> New Project \\>\\\nBook project using bookdown \\> ...\\[\\]... \\>\\\nSelect book format: bs4_book \\>\\\n© Open in new session.\\\nAdd 08-Preparation.Rmd\\\n\\[Build\\] \\> Build Book \\>\\\nbs4_book (wil convert .Rmd -\\> .md in /\\_book)\n\n## Creating symlinks\n\nTo make symlink:\n\n``` bash\nln -s /path/of/original/file /path/to/taget/dir/{filename} \n```\n\nBox Sync/../.md -\\> \\~/Documents/gitrepo/.md\n\nEx.\\\nFrom: \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/\\_book/08-Preparation.md\"\\\nTo: \"/Users/marcelorosales/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\"\n\nSamples \"/Users/marcelorosales/Box Sync/Github/mkdocs/mkdocs_dumpAll/Samples/08-Preparation.Rmd\"\n\n``` bash\n ln -s \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" \"/Users/marcelorosales/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\"\n```\n\n``` bash\n ln -s \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" \"/Users/marcelorosales/Box Sync/Github/mkdocs/mkdocs_dumpAll/Samples/08-Preparation.Rmd\"\n```\n\n!!! fail Partial address do NOT work.\\\n\"\\~/Box Sync/Github/mkdocs/bs4_LabNotes/\\_book/08-Preparation.md\"\\\n\"\\~/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\"\\\nln -s \"\\~/Box Sync/Github/mkdocs/bs4_LabNotes/\\_book/08-Preparation.md\"\n\n> Allways work the in bs4_book .Rmd\n\n------------------------------------------------------------------------\n\n## R » md » mkdocs » githug\n\n**Crear páginas web con Rmarkdown, MkDocs y GitHub pages: una alternativa para documentación.**\\\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ytngbbTt0Xo\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n[Github Page](https://github.com/ronnyhdez/docmaker)\n\n### docmaker\n\n!!! fail \"Warning\"\\\nNot working as described in the tutorials\n\n<a href=\"url\"><img src=\"/docs/img/s300/01-Incisor-300.jpg\" align=\"right\" width=\"50%\"/></a>\n\n<!-- badges: start -->\n\n[![CRAN status](https://www.r-pkg.org/badges/version/docmaker)](https://cran.r-project.org/package=docmaker)\n\n<!-- badges: end -->\n\n**Overview**\n\n`docmaker` is a package that allows you to automate your steps for using GitHub pages, MkDocs and Rmarkdown.\n\nIf you have a project in which there are files built with Rmarkdown that you would like to take to MkDocs, `docmaker` will help you with the all the steps in the middle to achieve this.\n\n**Installation:**\n\nYou can install the development version of `docmaker` from [GitHub](https://github.com/) with:\n\n``` r\n#| eval: false\n\ndevtools::install_github(\"ronnyhdez/docmaker\")\n```\n\nWhen published on CRAN, you will be able to install the package with:\n\n``` r\n#| eval: false\ninstall.packages(\"devtools\")\n```\n\n### Usage\n\nYou can create your repository on GitHub, clone your repo and from there, you will need to implement a structure to be able to use GitHub pages and MkDocs. For this you can use the function:\n\n``` r\n#| eval: false\nlibrary(docmaker)\nbuild_repo(github_page_url = \"https://ronnyhdez.github.io/drawer/\",\n           site_author = \"Ronny A. Hernández Mora\")\n```\n\nOnce you have a repository, you can take your Rmd notes and deploy it to GitHup pages\n\n``` r\n#| eval: false\nmake_doc(file = \"check.Rmd\", mkdocs_build = TRUE, mkdocs_deploy = TRUE)\n```\n\nIf you have several files in the root of your project directory, you can instead use the following function to build and deploy all your Rmd files:\n\n``` r\n#| eval: false\nmake_all_docs(deploy = TRUE)\n```\n\n**Getting help:**\n\nIf you find a bug please fill an issue with a reproducible example on [GitHub](https://github.com/ronnyhdez/docmaker/issues/)\n\n### Demo:\n\n[Video](https://www.youtube.com/watch?v=ytngbbTt0Xo) demo starts at 17:00 min.\\\n[dockmaker page](https://ronnyhdez.github.io/docmaker/)\\\n[dockmaker blog English](https://ronnyhdez.github.io/blog/)\\\n[Github Page](https://github.com/ronnyhdez/docmaker)\n\n**requirements:**\\\n- python - R - mkdocs - git - github account - docmaker installed in r\n\n**In Github**\\\n1. Github \\> create new repo \\> name: {x: demo_docmaker } \\> description {dockmaker demo} \\> ©Public \\> © Add readme file \\> © Add .gitignore: ˇ{R} \\> © Create repository\\\n1. Repo settings \\> Pages \\> Source \\> ˇBranch: © main \\> /(root) \\> ©save (new page is created)\\\n1. Got to // Code \\> code \\> clone \\> htpps (copy github page address)\n\n**In Rstudio**\\\n1. // New project \\> Version control \\> Git \\> Repository URL: {paste github repo address} \\> ...\\[\\]... choose directory: (/Documents/github or github_repos, **don't use sync folders** \\> ©ü Open in new session \\> © Create project.\\\n- If error: Repository Already exists \\>Go // Open Project (in New Session) \\> ...\\[\\]... \\> select folder \\> Open\n\n**In Rstudio console**\\\n1. Load docmaker library and make sure you are in the correct working directory.\n\n``` r\n#| eval: false\nlibrary(docmaker)\ngetwd()\n```\n\n1.  Built the mkdocs repository (through docmaker function)\n\n!!! bug \"outdated\"\\\n///////////////// Outdated\\\n`dockmaker::build.repo()     # or?     build_repo(github_page_url, site_author)` 1. Configure repo\\\n`dockmaker::build.repo(github_page_url = \"https://myname.github.io/ex:demo_docmaker/\",  site_author = \"My Name\")` //////////////////\n\n1.  Build and configure repo: **Updated code 2022**\\\n\n```         \nbuild_repo(github_page_url = \"https://github.com/MarceloRosales/docmakertest2.git\",  site_author = \"Marcelo Rosales\")\n```\n\n1.  It creates a \"docs\" folder (empty) and a .yml file\n2.  Open .yml file and modify as for mkdocs site: theme: material, nav ... etc\n\n**Add content** 1. // New Rmarkdown \\> write content... 1. // New folder \\> {img} \\> place all images here (this img folder is outside of docs).\\\n1. Now add Rmd files to github (through \\>\\_).\n\n\\*\\*In \\>\\_\\*\\*: 1. Check all modified or added files not yet commited (Rmd or images)\n\n``` bash\ngit status\n```\n\n1.  Stage all files\n\n``` bash\ngit add .\n```\n\n1.  Commit all files\n\n``` bash\ngit commit -m “estructura del repositorio y primeras notas”\n```\n\n1.  Because is first time adding in the new git repo it will not commit, git will ask \" \\*\\*\\* Please tell me who you are... \", Run:\n\n``` bash\ngit config user.email myemail@github\ngit config user.name mynameingithub\n```\n\n1.  Repeat Commit all files\n\n``` bash\ngit commit -m “estructura del repositorio y primeras notas”\n```\n\n1.  Push all files to git. Will ask username and password.\n\n``` bash\ngit push\n```\n\n1.  To avoid typing credential on every commit and pull\n\n``` bash\ngit config credential.helper store\n```\n\n1.  To pull form github\n\n``` bash\ngit pull\n```\n\nUp to here we just added contents, but in github the doc folder is not added (coz is empty) and github pages is only rendering form the readme.md file (28:35).\n\n**To construct the mkdocs pages in Rstudio console** make the .md files 1. In Rstudio \\> Console \\> If `Docmaker::make_all_docs()` or `Docmaker::make_all_docs(FALSE)`, it is not going to construct the documentation in github. It is going to render in local computer, like a preview or the page before commiting to github.\n\n!!! bug \"outdated\"\\\n///////////////// Outdated\\\n`Docmaker::make_all_docs(TRUE)` or `docmaker::make_all_docs(deploy = TRUE)` //////////////////\n\n**Update 2022**\n\n```         \nmake_all_docs(deploy = FALSE)\nmake_all_docs(deploy = TRUE)\n```\n\n!!! warning This will create .md files, images, plots, etc and it will commit-push to githubpages automatically\\\n`docmaker::make_doc` is to make md from Rmd one by one.\n\n```         \nmake_doc(file = \"check.Rmd\", mkdocs_build = TRUE, mkdocs_deploy = TRUE)\n```\n\n1.  **Go back to github** \\> code \\> (next to branches) ˇmain \\> ©gh-pages. Do not merge with main brach.\n2.  Go Setting \\>Source \\> ˇBranch: gh-pages; (/root) \\> save\n\n[Github Page](https://github.com/ronnyhdez/docmaker)\n\n!!! fail\\\nTHIS DOCMAKER PACKAGE IS NOT WORKING, THERE IS AN ERROR WHILE CONVERTING THE RMD TO MD FILES.\n\n##### Fail Solutions:\n\n1.  Check and correct package code (with cran, issue to author or self)\\\n2.  Find alternative conversion.\\\n    [How to convert .Rmd into .md in R studio? \\[duplicate\\]]()\\\n\n``` r\n#| eval: false\n---\ntitle: \"Example\"\nauthor: My Name\ndate: March 22, 2050\noutput: md_document\n# or\noutput:\n  md_document:\n    variant: markdown_github\n---\n```\n\n[knitr output to a different folder](https://www.thecodeteacher.com/question/105275/R:-In-RStudio-how-do-I-make-knitr-output-to-a-different-folder-to-avoid-cluttering-up-my-drive?)\n\n```         \n---\ntitle: \"Tab1\"\nauthor: \"Marcelo Rosales\"\ndate: \"2022-08-16\"\noutput: md_document\nknit: (function(inputFile, encoding) {\n  rmarkdown::render(inputFile, encoding = encoding, output_dir = \"docs\") })\neditor_options: \n  chunk_output_type: console\n---\n```\n\nsave rmarkdown output in different folder R: In RStudio how do I make knitr output to a different folder to avoid cluttering up my drive?\n\nIn console: `rmarkdown::render('my.Rmd', output_file = 'folder/my.html')`\n\n1.  Disregard and move on!!!.\n\n#### examples:\n\nSearch: rstudio how to deploy a mkdocs project\\\nhttps://github.com/rstudio/team-admin.rstudio.com/blob/main/mkdocs.yml\\\nhttps://team-admin.rstudio.com/getting-started/how-it-works/ nice page in github (seems it was made in Rstudio) with white background\n\nhttps://leverage.binbash.com.ar/ Nice page created with Mkdocs with custom land pages. [Github repo](https://github.com/binbashar/le-ref-architecture-doc)\n\n**Ultrabug**: see [Automatic mkdocs gh-deploy and plugin extensions](#automatic-mkdocs-gh-deploy-and-plugin-extensions), and [video](https://youtu.be/0pYN6Z-t1-s), web site at [ultrabug](https://ultrabug.fr/Tech%20Blog/2021/2021-07-28-create-beautiful-and-localized-documentations-and-websites-using-mkdocs-github/#resources)\\\nhttps://github.com/ultrabug/ultrabug.fr\n\n#### Trial pages:\n\n/Users/Marcelo-Rosales/Documents/GitHub_Repos/MkDocsTest1\\\n/Users/marcelorosales/Documents/GitHub/MkDocsTest1: gh-pages active, only .md, no Rmd.\\\n- index.en.md - index.es.md - index.ja.md - MkDocs.md: Mkdocs good info, move to archive\\\n- VS_Code.md: Vs code demo.. archive.\\\n/Users/marcelorosales/Box Sync/Github/mkdocs/MBA03: No gh-pages constructed, actually; DO NOT CONSTRUCT /SITE, only local, that's why it is in Box Sync\\\n- All.md: All notes are here\\\n- index.md: Welcome to MkDoc\\\n- Tab1.md: Mkdocs Markdown guide\\\n- Tab2.md: Images and Galleries Tests\\\n- Tab3.md: Markdown and Visual Studio Code\\\n- Tab4.md: Html guide\n\n~~/Users/marcelorosales/Documents/GitHub/MBP20mkdocsT01: Page not working (deleted)~~\\\nInit.Rmd: - Docmaker package guide - Docmaker package functions code: make_all_docs, make_doc.\\\n~~/Users/marcelorosales/Documents/GitHub/MBP20mkT02: Empty 404 site (deleted)~~\\\n~~/Users/marcelorosales/Documents/GitHub/MBP20mkT03: Empty site.~~\n\n/Users/ rosalesrocabadomarcelo/Documents/GitHub/mkdocs/MBAdocmaker01: No gh-page, no /site. In github: Yes, In github desktop: NO MBP15: None.\\\nMBP20: None.\\\nMBA11: Yes. Only test. Delete\n\n/Users/Marcelo-Rosales/Documents/GitHub_Repos/docmaker_demo2/Init.Rmd: No /site.\\\n- Init.Rmd: How to use docmaker tutorial (moved Rmd to dump).\n\n~~mkt2: https://marcelorosales.github.io/mkt2/Page3/ Where are the files? Not in MBP20, just a test delete.~~\n\n**Word table:** PC MBP20 MBP15 MBA11 /folder /Users/marcelorosales/Documents/GitHub/MkDocsTest1 /Users/Marcelo-Rosales/Documents/GitHub_Repos/MkDocsTest1\\\nGH desktop yes yes Gh-page yes\\\nDetails only .md\\`s no .Rmd\n\n[R: In RStudio how do I make knitr output to a different folder to avoid cluttering up my drive?](https://stackoverflow.com/questions/26174565/r-in-rstudio-how-do-i-make-knitr-output-to-a-different-folder-to-avoid-clutteri)\\\nDumpall\n\n#### Overview\n\n1.Working with different file types is difficult and confusing. Here I mainly work with .R, .Rmd, .md, docx, excel, python, .html. Notting and keeping record is challenging. But I think I finally found a good workflow.\\\nNotes and reports:\\\n- Use MS word (.docx) file to keep record of all research, it is easy to manage tables and figures, however:\\\n- **Download Markdown add in:** // Insert \\> Add ins \\> Get add ins \\> ...\\[\\]... \\> Search {markdown} \\> ©Markdown (britva Technologies LLC) \\> Add\\\n- **Keep all notes in word but written as markdown**, you can use the markdown viewer panel. Try not to make the file too long, md preview pane will slowdown computer\\\n- **Keep notes by date, dump all in one folder with Sync service** (Box Sync).\\\n- Keep track of all note changes: **Turn ON track changes**, // Review \\> Track changes: ON \\> SimpleMakup (red line to the left of doc).\\\n- **Create a gh-page to organize all notes and reports**. I recommend Bookdown or mkdocs. Mkdocs seems sleeker and more compact.\\\n- **Copy paste the notes from word to Rstudio** (as md or Rmd?) for now I think **as .md**, it is easier to go from md to Rmd than Rmd to md.\\\n- Once copied to gh-page, highlight copied section, and use the // Track changes \\> Accept This change, to indicate that the section was been pushed.\\\n- Use mainly R and Rstudio, will make things easer on the long run, vs code is also good for keeping track of changes, statistical analysis and reports.\n\nCreate mkdocs directory.\\\n- Do not create new project in Rstudio, mkdocs will create the folder, use terminal.\\\n- If scripting is in r; open new session // Session \\> New Session\n\n```         \n# In >_\n: \ncd ~/Documents/GitHub\nmkdocs new {dirname}\ncd ~/Documents/GitHub/{dirname}\n\nls\ntree\n\n# Check if create correctly.  \n# WARNING: Close all browser tabs connected. If Browser tab is or was connected: http://127.0.0.1:8000/All/ code 404\nmkdocs serve \n\n# To stop live preview **`Cnt+C`**  \n\ntouch home.md\n# Add content, mod .yml\n\n# Git and git command list:  \ngit init\ngit add .\ngit status\ngit config\ngit config --global user.name “MarceloRosales”  \ngit config --global user.email “selasorolecram@hotmail.com”  \ngit commit -m \"1st commit\"  \ngit log # If want to revert to a previews version, Copy hash click Q to quit. \ngit checkout {hash copied from log}  \ngit checkout -b {new branch name} # Create a new branch.  \ngit branch {new branch name} {hash}  # Create new branch, if revert to previous, add hash\ngit checkout {branch name} # To change branches\ngit merge {branch name} # merge branch to main\n\n# ref: https://youtu.be/DVRQoVRzMIY\n\n# 2. Create repository in github.   \n# Copy github address\n\ngit remote add origin {https//github.com/MarceloRosales/test_.git  \n# https://github.com/MarceloRosales/MBP20mkT02.git\ngit checkout master # makesure you are in master branch  \ngit push -u origin master # push commits to the \"origin\" repo and to the branch \"master\"; -u = save settings (next time with just \"git push\" will automatically add to the origin master.)   \n# Some times it requies  \ngit push origin {other branch name}  # to commit changes to a different branch.  \ngit config --global user.name “MR”  \ngit config --global user.email “….@hotmail.com”  \ngit pull origin master\n\n\n\nmkdocs build\n\ngit add .\ngit status\ngit commit -m \"2nd commit\"  \ngit push \n\nmkdocs gh-deploy\n```\n\n#### Non stop workflow Example\n\n```         \n\ncd ~\nmkdocs new MBP20mkT03\nls\ncd ~/Documents/GitHub/MBP20mkT03\nls\nmkdocs serve\n\n# Change .yml file \ntheme:\n    name: material\n    palette:\n        primary: white\n        accent: #75AADB\n    font:\n        text: Source Sans Pro\n\nmkdocs serve\n\n# Create repository in github and **Copy github address**.  \n\n#make the /site folder.  \nmkdocs build \n\ngit init\ngit add .\ngit status\n\ngit config --global user.name “MR”\ngit config --global user.email “....@hotmail.com”\ngit remote add origin https://github.com/MarceloRosales/MBP20mkT03.git  \n\ngit commit -m \"1st commit\"\ngit status # nothing to commit, working tree clean\ngit push origin master  \n\nmkdocs build # necessary?\nmkdocs gh-deploy # all settings to deploy in github -branch gh-pages\n\ngit status\ngit add .\ngit commit -m \"2nd commit\"\ngit push origin master\n\n# Add content\n\ngit pull origin master\nmkdocs serve\nmkdocs build\ngit add .\ngit status\ngit commit -m \"3rd commit\"\ngit push origin master\n```\n\nmkdocs gh-deploy creates 2 branches + the default github branch \"main\": - gh-pages - master - main\n\nThe \"main\" branch contains: - .gitignore file - License - readme.md\n\nThe \"master\" branch contains: - /doc - /site - mkdocs.yml\n\nThe gh-pages contains: **only all the files created in the /site folder**; it mirrors the /site content to create the wegpage.\n\n#### Docmaker trials\n\nInit.Rmd in MBP20mkdocsT01\n\n**See also mkdocs_demo.Rmd too**\\\n\\~/Documents/GitHub/MkDocsTest1 Config git ignore like in video?\n\n```         \nlibrary(docmaker)\n```\n\n```         \nbuild_repo(github_page_url = \"https://github.com/MarceloRosales/MBP20mkdocsT01.git\", site_author = \"Marcelo Rosales\")  \n```\n\n```         \ngit status\ngit add .\ngit commit -m \"1 commit\"\ngit push\ngit pull\n```\n\n```         \ndocmaker::make_all_docs(deploy = TRUE)\n```\n\n```         \nmake_doc(file = \"Tab1.Rmd\")\n```\n\nmake_doc function run for the first time will execute the creation of the md file and the corresponding plot image folder in the docs folder. Error for the Error **UseMethod(\"close\") : no applicable method for 'close' applied to an object of class \"character\"**\n\nIf run for a second time, it will create the plot images folder in root and NOT in the docs folder.\n\n#### Docmaker fx code\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n[R: In RStudio how do I make knitr output to a different folder to avoid cluttering up my drive?](https://stackoverflow.com/questions/26174565/r-in-rstudio-how-do-i-make-knitr-output-to-a-different-folder-to-avoid-clutteri)\n\n#### Yml code added examples\n\n\\~/Documents/GitHub/MBP20mkT03 MBP20mkT03.Rproj Overview.Rmd\\\nOverview.md\\\ndocs\\\nmkdocs.yml: Color theme is white:\n\n```         \nsite_name: My Docs\ntheme:\n    name: material\n    palette:\n        primary: white\n        accent: #75AADB\n    font:\n        text: Source Sans Pro\n\nnav:\n    - Home: index.md\n    - Overview: Overview.md\n```\n\n/Users/marcelorosales/Documents/GitHub/MBP20mkdocsT01\n\n``` yaml\n\ntitle: \"Tab1\"\nauthor: \"Marcelo Rosales\"\ndate: \"2022-08-16\"\noutput: md_document\nknit: (function(inputFile, encoding) {\n  rmarkdown::render(inputFile, encoding = encoding, output_dir = \"docs\") })\neditor_options: \n  chunk_output_type: console\n```\n\n``` yaml\n\nAdded section\nknit: (function(inputFile, encoding) {\n  rmarkdown::render(inputFile, encoding = encoding, output_dir = \"docs\") })\n```\n\n##### Example 1:\n\n[team-admin.rstudio](https://github.com/rstudio/team-admin.rstudio.com/tree/main/docs)\\\nhttps://team-admin.rstudio.com/getting-started/how-it-works/ nice page in github (seems it was made in Rstudio) with white background\n\n``` yaml\n\nsite_name: \"RStudio Team :: Admin Training\"\nrepo_url: https://github.com/rstudio/team-admin.rstudio.com\ncopyright: RStudio, PBC. All Rights Reserved.\ngoogle_analytics:\n    - UA-20375833-3\n    - auto\nedit_uri: \"\"\n\ntheme:\n    name: material\n    custom_dir: overrides\n    logo: 'images/rstudio-logo.png'\n    favicon: 'images/favicon.ico'\n    palette:\n        primary: white\n        accent: #75AADB\n    font:\n        text: Source Sans Pro\n\nnav:\n    - Home: index.md\n    - Overview: overview.md\n    - 1. Getting started:  <!-- #this is a folder, inside are the md files -->\n        - 1.1 How the course works: getting-started/how-it-works.md\n        - 1.2 Lab - SSH in: getting-started/lab-ssh-in.md\n    - 2. R:\n        - 2.1 Installing R: r/install-r.md\n        - 2.1 Lab: r/lab-install-r.md\n    - 3. RStudio Workbench:\n        - 3.1 Install RStudio Workbench: rstudio-workbench/install-rsw.md\n        - 3.1 Lab: rstudio-workbench/lab-install-rsw.md\n        - 3.2 RStudio Workbench Security: rstudio-workbench/security.md\n        - 3.2 Lab: rstudio-workbench/lab-security.md\n        - 3.3 RStudio Workbench Startup and packages: rstudio-workbench/startup-and-packages.md\n        - 3.3 Lab: rstudio-workbench/lab-startup-and-packages.md\n    - 4. RStudio Connect:\n        - 4.1 Installing RStudio Connect:   rstudio-connect/install-connect.md\n        - 4.1 Lab: rstudio-connect/lab-install-connect.md\n        - 4.2 Configuring RStudio Connect:  rstudio-connect/configure-connect.md\n        - 4.2 Lab: rstudio-connect/lab-configure-connect.md\n        - 4.3 Using RStudio Connect: rstudio-connect/using-connect.md\n        - 4.3 Lab: rstudio-connect/lab-using-connect.md\n    - 5. Deploying to Connect:\n        - 5.1 Deploying Shiny Apps: using-rstudio-connect/deploy-shiny.md\n        - 5.2 Lab: using-rstudio-connect/lab-deploy-shiny.md\n        - 5.3 Deploying Rmarkdown: using-rstudio-connect/deploy-markdown.md\n        - 5.4 Lab: using-rstudio-connect/lab-deploy-markdown.md\n        - 5.5 Deploying plumber APIs: using-rstudio-connect/deploy-plumber.md\n        - 5.6 Lab: using-rstudio-connect/lab-deploy-plumber.md\n    - 9. Troubleshooting:\n        - 9.1 Troubleshooting: troubleshooting/troubleshoot.md\n        - 9.2 Lab: troubleshooting/lab-troubleshoot.md\n    - \"---\": separator.md\n    - Cheat sheet:   cheatsheet.md\n    - Documentation: documentation.md\n    - Frequently encountered problems: faq.md\n    - Asking questions: asking-questions.md\n\nmarkdown_extensions:\n    - toc:\n        permalink: \"#\"\n    - admonition\n    - pymdownx.arithmatex\n    - pymdownx.betterem:\n        smart_enable: all\n    - pymdownx.caret\n    - pymdownx.critic\n    - pymdownx.details\n    - pymdownx.emoji:\n        emoji_index: !!python/name:materialx.emoji.twemoji\n        emoji_generator: !!python/name:materialx.emoji.to_svg\n    - pymdownx.inlinehilite\n    - pymdownx.magiclink\n    - pymdownx.mark\n    - pymdownx.smartsymbols\n    - pymdownx.superfences\n    - pymdownx.tasklist:\n        custom_checkbox: true\n    - pymdownx.tabbed\n    - pymdownx.tilde\n\nextra_css:\n    - assets/custom.css\n    - assets/cheatsheet.css\n\nextra_javascript:\n    - assets/js/asciinema-player.js\n    - assets/js/openLinksInNewTabs.js\n\nplugins:\n    - search\n#     - redirects:\n#         redirect_maps:\n#             overview/concept-map:      overview.md\n#             overview/coarse-goals:     overview.md\n#             overview/assumptions:      overview.md\n#             overview/pre-requirements: overview.md\n#             overview/how-it-works:     overview.md\n#             get-started:                 getting-started/how-it-works.md\n#             get-started/getting-started: getting-started/how-it-works.md\n#             get-started/ssh-in:          getting-started/lab-ssh-in.md\n#             install-r:                    r/install-r.md\n#             install-r/install-r:          r/install-r.md\n#             install-r/install-r-exercise: r/lab-install-r.md\n```\n\n##### Example 2:\n\nhttps://leverage.binbash.com.ar/ Nice page created with Mkdocs with custom land pages. [Github repo](https://github.com/binbashar/le-ref-architecture-doc)\n\n``` yaml\n\n# ref link: https://alinex.gitlab.io/env/mkdocs/\n\n# Site Information\nsite_name: Binbash Leverage™\nrepo_name: \"binbashar/le-ref-architecture-doc\"\nrepo_url: https://github.com/binbashar/le-ref-architecture-doc\nsite_url: https://leverage.binbash.com.ar/\nsite_description: Binbash Leverage Reference Architecture Documentation\nsite_author: Binbash\ncopyright: Copyright &copy; 2017-2022 <a href=\"https://www.binbash.com.ar\">Binbash</a>\n\n# Mkdocs Theme (Material Mkdocs) + Extras\ntheme:\n  name: material\n  custom_dir: material\n  language: en\n  #logo: assets/images/logos/binbash-icon.png\n  icon: # https://www.materialpalette.com/icons\n    logo: material/book-open-page-variant\n  favicon: assets/images/logos/favicon.ico\n  font:\n    text: Roboto\n    code: Roboto Mono\n  features:\n    - navigation.tabs\n    - navigation.instant\n    - header.autohide\n    #- content.tabs.link #Insiders only so far\n  palette: # https://www.materialpalette.com/colors\n    - scheme: default\n      #primary: \"teal\" # comment to replace by /docs/assets/stylesheets\n      accent: deep purple\n      toggle:\n        icon: material/toggle-switch-off-outline\n        name: Switch to dark mode\n    - scheme: slate\n      #primary: \"teal\" # comment to replace by /docs/assets/stylesheets\n      accent: teal\n      toggle:\n        icon: material/toggle-switch\n        name: Switch to light mode\n\n  include_sidebar: true\n\nextra:\n  analytics:\n    provider: google\n    property: !ENV GOOGLE_ANALYTICS_KEY\n\n## Temporally only available for Insiders\n## (https://squidfunk.github.io/mkdocs-material/setup/setting-up-site-analytics/#was-this-page-helpful)\n#    feedback:\n#      title: Was this page helpful?\n#      ratings:\n#        - icon: material/emoticon-happy-outline\n#          name: This page was helpful\n#          data: 1\n#          note: >-\n#            Thanks for your feedback!\n#        - icon: material/emoticon-sad-outline\n#          name: This page could be improved\n#          data: 0\n#          note: >-\n#            Thanks for your feedback! Help us improve this page by\n#            using our <a href=\"...\" target=_blank>feedback form</a>.\n\n  social:\n    - icon: material/home\n      link: 'https://www.binbash.com.ar'\n    - icon: material/github\n      link: 'https://github.com/binbashar'\n    - icon: material/linkedin\n      link: 'https://www.linkedin.com/company/binbash'\n    - icon: material/slack\n      link: 'https://join.slack.com/t/binbashar/shared_invite/zt-fw1692b6-9k4ADsWJ47lKacszphXM1w'\n    - icon: material/youtube\n      link: 'https://www.youtube.com/channel/UCUjQ3duzxQB_VtNsKNqPwDA/playlists'\n    - icon: fontawesome/brands/medium\n      link: 'https://medium.com/binbash-inc'\n    - icon: material/twitter\n      link: 'https://twitter.com/binbash_devops'\n    - icon: material/docker\n      link: 'https://hub.docker.com/orgs/binbash'\n\n  alternate:\n    # Switch to English\n    - name: English\n      #link: https://leverage.binbash.com.ar\n      link: /\n      lang: en\n\n    # Switch to Spanish\n    - name: Spanish\n      #link: https://leverage.binbash.com.ar/es/\n      link: /es\n      lang: es\n\n# Mkdocs Markdown Extentions, Plugins & extras\nmarkdown_extensions:\n  - admonition\n  - abbr\n  - attr_list\n  - def_list\n  - footnotes\n  - meta\n  - md_in_html\n  - codehilite\n  - pymdownx.critic\n  - pymdownx.caret\n  - pymdownx.keys\n  - pymdownx.mark\n  - pymdownx.tilde\n  - pymdownx.tabbed\n  - pymdownx.details\n  - pymdownx.inlinehilite\n  - pymdownx.smartsymbols\n  - pymdownx.tasklist:\n      custom_checkbox: true\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n  - pymdownx.emoji:\n      emoji_index: !!python/name:materialx.emoji.twemoji\n      emoji_generator: !!python/name:materialx.emoji.to_svg\n  - toc:\n      # insert a blank space before the character\n      permalink: \" ¶\"\n\nplugins:\n  - search\n#  - awesome-pages\n\nextra_css:\n    - assets/stylesheets/extra.css\n\n# Mkdocs Navigation Tree\nnav:\n  - Home:\n    - Home: index.md\n    - Welcome: \"welcome.md\"\n    - First steps: \"first-steps/introduction.md\"\n\n  - How it works:\n    - Reference Architecture:\n        - Overview: \"how-it-works/ref-architecture/index.md\"\n        - General concepts:\n          - Why Leverage?: \"how-it-works/ref-architecture/general-concepts/why-leverage.md\"\n          - Why our stack?: \"how-it-works/ref-architecture/general-concepts/why-tech-stack.md\"\n        - Considerations: \"how-it-works/ref-architecture/considerations.md\"\n\n  - Work with us:\n      - Overview: \"work-with-us/index.md\"\n      - Support:\n          - Support: \"work-with-us/support.md\"\n      - Releases:\n          - Releases and Versions: \"work-with-us/releases/releases-and-versions.md\"\n          - Versions compatibility matrix: \"work-with-us/releases/versions-compatibility-matrix.md\"\n      - Leverage vs Competition: \"work-with-us/leverage-vs-competition.md\"\n      #- Subscription Plans: \"work-with-us/subscription-plans.md\"\n      - Contribute: \"work-with-us/contribute.md\"\n      - Roadmap:\n        - Reference Architecture:\n          - Overview: \"work-with-us/roadmap/ref-arch/overview.md\"\n          - Operational Excellence: \"work-with-us/roadmap/ref-arch/operational-excellence.md\"\n          - Reliability & Performance: \"work-with-us/roadmap/ref-arch/reliability-performance.md\"\n          - Security: \"work-with-us/roadmap/ref-arch/security.md\"\n          - Cost Optimization: \"work-with-us/roadmap/ref-arch/cost-optimization.md\"\n          - Demo Applications: \"work-with-us/roadmap/ref-arch/demo-apps.md\"\n        - Leverage CLI: \"work-with-us/roadmap/leverage-cli/overview.md\"\n      - Careers: \"work-with-us/careers.md\"\n      #- Team: \"work-with-us/team.md\"\n      #- Testimonials: \"work-with-us/testimonials.md\"\n      - FAQs: \"work-with-us/faqs.md\"\n      - Contact Us: https://www.binbash.com.ar/contact\n```\n\n[R: In RStudio how do I make knitr output to a different folder to avoid cluttering up my drive?](https://stackoverflow.com/questions/26174565/r-in-rstudio-how-do-i-make-knitr-output-to-a-different-folder-to-avoid-clutteri)\n\n**Bookdown and GitHub Pages**\\\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/RdSmYvbQkhs\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n------------------------------------------------------------------------\n\n## Bookdown and GitHub Pages\n\n==**Git book is the default theme for bookdown.**==\n\n```         \n- [ ] [Gitbook style]( https://bookdown.org/yihui/bookdown/html.html)  \n\n- [ ] [The Material Design theme in the rmdformats package in bookdown]( https://bookdown.org/yihui/rmarkdown/rmdformats.html)   \n```\n\nHow to change colors and attributes of Table of Contents in R Markdown HTML document?\n\n!!! note SEE THIS TWO‼\n\n```         \n- [ ] [memoiR]( https://ericmarcon.github.io/memoiR/ ).  Templates to publish well-formatted documents both in HTML and PDF formats In R Markdown.\n```\n\nGallery:\\\n- HTML GitBook\\\n- HTML Bootstrap 4 book (documentation on Zotero, Shyni, very extensive. R34D I7!!!. [Docs](https://bookdown.org/yihui/bookdown/html.html#bs4-book), [writing a bs4_book](https://bookdown.org/yihui/bookdown/html.html#writing-a-bs4_book)\\\n- Simple Article\\\n+ HTML Document\\\n+ Downcute HTML\\\n+ distill article\n\n```         \n- [Zotero](https://ericmarcon.github.io/WorkingWithR/chap-logiciels.html#sec:Zotero)  \n```\n\n[R Markdown and Bookdown Templates to Publish Documents](https://ericmarcon.github.io/memoiR/articles/memoiR.html#getting-started)\n\n```         \n- [ ] [Pkdown](https://pkgdown.r-lib.org/) pkgdown is designed to make it quick and easy to build a website for your package with R studio.   \n- [ ] https://rmarkdown.rstudio.com/gallery.html  \n```\n\nGet Started With Our Bookdown Thesis Template video https://youtu.be/LBHxcuCMjnk\\\n[My lecture notes Rmd template • lecturenotes - Grant McDermott](http://grantmcdermott.com/lecturenotes/)\\\n[Change toc_depth field in bookdown pdf output](https://stackoverflow.com/questions/56625517/change-toc-depth-field-in-bookdown-pdf-output)\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/RdSmYvbQkhs\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/8uFABzUG6Lw\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[video](https://youtu.be/8uFABzUG6Lw)\n\nUse with zotero!!\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/RdSmYvbQkhs\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n[video](https://youtu.be/RdSmYvbQkhs)\n\nTo insert citations with Zotero in Rstudio:\n\n© \\[visual\\]... ++shift+cmd+F8++\n\nOpt+cmd+T ++shift+cmd+I++ ++shift+cmd+F7++\n\n-   {rticles} for document formatting\n-   {Zotero Plugin} for citations\n-   {report} & {glue} for making reproducible model summaries\n-   {gt} + {gtsummary} for tables\n-   {ggplot} + {ggpubr} for graphs\n\n### R packages required:\n\ninstall.packages(\"memoiR\") install.packages(\"distill\") install.packages(\"rmdformats\") install.packages(\"rmarkdown\")\n\nlibrary(memoiR) library(distill) library(rmdformats) library(rmarkdown)\n\n#### Types of books--\\> html\n\nAvoid using the straight brackets, `[]` like in `[Build]` coz it confuse gitbook as a reference.\n\n```         \n1.  Website using blogdown\n2.  Book project using book down\n  - gitbook\n  - bs4_book: [Bulild]: \n    1.  bs4_book. converts .Rmd to .md automatically‼‼ saved on /_book. \n    2.  epub_book.   \n3.  R Package using devtools\n4.  Distill Blog\n  - [Bulild]: 1. Distill_blog. \n5.  Distill Website\n  - [Bulild]: 1. Distill_site.\n6.  Document Project using memoiR\n  - Memoir: [Bulild] \n    1.  git_book. OK\n    2.  bs4_book.  OK\n    3.  ePub_book. OK\n  - Simple Article: ++Knit++ \n    1.  html_document2. OK\n    2.  git_book.  OK\n    3.  downcute. OK\n  - Stylish Article: ++Knit++ \n    1.  html_document2. NOT WORKING!\n    2.  git_book.  OK\n    3.  downcute. OK\n  - Beamer Presentation: ++Knit++ \n    1.  beamer_presentation2. NOT OK\n    2.  Powerpoint_presentation2.  OK\n    3.  slidy_presentation2. ?\n    4.  ioslide_presentation2. ?\n7.  Simple R Markdown Website\n  - [Bulild]: 1. Rmd_website.  OK\n```\n\n#### R books samples view:\n\nMBP20\\\n[gitbook:](file:///Users/marcelorosales/Box%20Sync/Github/mkdocs/mkdocs_dumpAll/Samples/Book%20samples/gitbook_samp/_book/index.html)\\\n[bs4_book:](file:///Users/marcelorosales/Box%20Sync/Github/mkdocs/mkdocs_dumpAll/Samples/Book%20samples/bs4_book_samp/_book/index.html)\\\n[Distill_blog:](file:///Users/marcelorosales/Box%20Sync/Github/mkdocs/mkdocs_dumpAll/Samples/Book%20samples/Distill_Blog_samp/_site/posts/welcome/index.html)\\\n[Distill_website:](file:///Users/marcelorosales/Box%20Sync/Github/mkdocs/mkdocs_dumpAll/Samples/Book%20samples/Distill_website_samp/_site/index.html)\\\n\\[MemoiR:\\] - gitbook\\\n- bs4_book\\\n- Simple Article: **ˇKnit**: [Html_document2](file:///Users/marcelorosales/Box%20Sync/Github/mkdocs/mkdocs_dumpAll/Samples/Book%20samples/SimpleArticle_samp/SimpleArticle_samp.html)\\\n- Stylish Article: **ˇKnit**: [downcute:](file:///Users/marcelorosales/Box%20Sync/Github/mkdocs/mkdocs_dumpAll/Samples/Book%20samples/Stylish_Article_samp/Stylish_Article_samp.html)\\\n[Simple Rmarkdown Website:](file:///Users/marcelorosales/Box%20Sync/Github/mkdocs/mkdocs_dumpAll/Samples/Book%20samples/Simple_Rmarkdown_samp/_site/index.html)\n\n> Idea:\\\n> bs4_book, converts .Rmd to .md automatically‼‼ saved on /\\_book. Create bs4 in Rstuidio \\@ BoxSync --\\> build .md files =\\> Create Mkdocs with github in /Doc/github --\\> for .md files use symlink to bs4.md's =\\> build page --\\> push to github.\n\nWhy use Mkdocs instead of just using the Rbookdown::bs4? Mkdocs admonitions are much easy to follow and nice clean layout.\n\n### Book projects using bookdown\n\n```         \n- gitbook\n- bs4_book:  It converts .Rmd to .md automatically‼‼ saved on /_book.\n```\n\n.Rmd files --\\> to --\\>.md files in /\\_book folder.\n\n### Distill Blog and Distill Website\n\n//Environment \\> Build \\> Build Website\n\n### Document Project using memoiR\n\n#### Memoir\n\n```         \nBuild tab  \n    Gitbook (working)  \n    Bs4_book (working)  \n        _output.yml: Theme: primary: “#092872” (color)   \n    Epub_book (working, save in books app. )  \n```\n\n#### Simple Article\n\n```         \nNo Build tab  \n    Html_document2 (working)  \n    Gitbook (working)  \n    Downcute (working)  \n```\n\n#### Stylish Article\n\n```         \nNo Build tab  \n    Html_document2 (Not Working)  \n    Gitbook (working)  \n    Downcute (working)  \n```\n\n#### Beamer Presentation\n\n```         \nNo Build tab  \n\nBeamer_presentation2: Not working  \n    [WARNING] Deprecated: --self-contained. use --embed-resources --standalone\n    ! LaTeX Error: File `framed.sty’ not found.\n    ! Emergency stop.\npowerpoint_presentation2: Working  \n```\n\nMemoir Simple Article Stylish Article Beamer Presentation\n\n#### Simple R Markdown Website\n\nFor more information about simple R Markdown websites, please read the documentation at https://bookdown.org/yihui/rmarkdown/rmarkdown-site.html.\n\nPlease also note that simple R Markdown sites are *not* based on **blogdown**. They are probably good for websites with only a few Rmd documents. For larger-scale and more sophisticated websites (such as blogs), you may want to use **blogdown** instead: https://github.com/rstudio/blogdown.\n\n------------------------------------------------------------------------\n\n## Hugo: use / set up\n\n[top](#)\n\n1.  Install golang.\\\n2.  Install hugo. \\@ <https://gohugo.io/> Mac\n\n``` bash\nbrew install hugo  \n```\n\n1.  brew should have updated your path to include Hugo. You can confirm by opening a new terminal window and running a few commands:\n\n```         \n<!---  # show the location of the hugo executable  -->\nwhich hugo  \n$ /usr/local/bin/hugo\n<!---  # show the installed version  -->\nls -l $( which hugo )\n$ lrwxr-xr-x  1 mdhender admin  30 Mar 28 22:19 /usr/local/bin/hugo -> ../Cellar/hugo/0.13_1/bin/hugo\n<!---  # verify that hugo runs correctly  -->\nhugo version\n$ Hugo Static Site Generator v0.13 BuildDate: 2015-03-09T21:34:47-05:00\n```\n\n1.  Build from Source: To compile Hugo yourself\\\n    rew install go.\n\n2.  Video provides a powerful way to help you prove your point. When you click Online Video, you can paste in the embed code for the video you want to add.\\\n\n3.  You can also\n\nNew project \\>\n\n------------------------------------------------------------------------\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
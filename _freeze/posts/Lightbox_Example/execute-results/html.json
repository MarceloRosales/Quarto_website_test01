{
  "hash": "ca4765e28fa1eee7f7c94ea03f1337d8",
  "result": {
    "markdown": "---\ntitle: \"Complete Lightbox Example\"\ndescription: \"How to use Lightbox\"\nauthor: \"Marcelo Rosales\"\ndate: \"2023/03/13\"\ncategories:\n  - photos\n  - lightbox\n  - gallelry\nfilters:\n  - lightbox\nlightbox:\n  match: auto\n  effect: fade\n  desc-position: right\n  loop: true\n#  css-class: \"my-css-class\" #only if custom css file exists. \nformat: \n  html: \n    code-fold: true\n    code-copy: true\n    code-overflow: wrap\n---\n\n\n## Lightbox\n\n![](images/img-230410.png)\n\nAn extension that uses the [GLightbox](https://biati-digital.github.io/glightbox/){target=\"_blank\"} javascript library to add lightbox styling and behavior to images in your HTML documents.\n\nSee [quarto-ext/lightbox](https://github.com/quarto-ext/lightbox/#readme){target=\"_blank\"} or the web example at [Example lightbox Document](https://quarto-ext.github.io/lightbox/){target=\"_blank\"} at the bottom of this page.\n\n## Installation\n\nTo install this extension in your current directory (or into the Quarto project that you're currently working in), use the following command:\n\n``` bash\n# Run this command in terminal, will install the extension inside the project folder itself. It is required for function of lightbox.\n\nquarto add quarto-ext/lightbox\n```\n\n## Usage\n\nThe Lightbox extension is implemented as a filter in Quarto. Once installed, using the extension is easy.\n\n### Apply To Images Automatically\n\nThe Lightbox extension can automatically give images in your web page a lightbox treatment. You can enable this like:\n\n``` markdown\n---\ntitle: Simple Lightbox Example\nfilters:\n   - lightbox\nlightbox: auto\n---\n\n![A Lovely Image](mv-1.jpg)\n```\n\nYou can exclude an image from receiving this automatic treatment by giving it a `nolightbox` class, like so:\n\n``` markdown\n![Don't lightbox me!](mv-1.jpg){.nolightbox}\n```\n\n### Choose Specific Images\n\n1)  Add `lightbox` to the list of filters in your `_quarto.yml` file or your document front matter. For example:\n\n``` markdown\n---\ntitle: Simple Lightbox Example\nfilters:\n   - lightbox\n---\n```\n\n2)  Add the class `lightbox` to any images that you'd like to have the lightbox treatment. For example:\n\n``` markdown\n---\ntitle: Simple Lightbox Example\nfilters:\n   - lightbox\n---\n\n![A Lovely Image](mv-1.jpg){.lightbox}\n```\n\n## Galleries\n\nIn addition to simply providing a lightbox treatment for individual images, you can also group images into a 'gallery'. When the user activates the lightbox, they will be able to page through the images in the gallery without returning to the main document. To create galleries of images, apply a `group` attribute (with a name) to the images that you'd like to gather into a gallery. Images with the same group name will be placed together in a gallery when given a lightbox treatment.\n\nFor example, the following three images will be treated as a gallery:\n\n``` markdown\n![A Lovely Image](mv-1.jpg){group=\"my-gallery\"}\n\n![Another Lovely Image](mv-2.jpg){group=\"my-gallery\"}\n\n![The Last Lovely Image](mv-3.jpg){group=\"my-gallery\"}\n```\n\n## Global Options\n\nThe following options may be specified in the front matter for lightbox:\n\n| Option          | Description                                                                                                                                                              |\n|-----------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `match`         | Set this to `auto` if you'd like any image to be given lightbox treatment. If you omit this, only images with the class `lightbox` will be given the lightbox treatment. |\n| `effect`        | The effect that should be used when opening and closing the lightbox. One of `fade`, `zoom`, `none`. Defaults to `zoom`.                                                 |\n| `desc-position` | The position of the title and description when displaying a lightbox. One of `top`, `bottom`, `left`, `right`. Defaults to `bottom`.                                     |\n| `loop`          | Whether galleries should 'loop' to first image in the gallery if the user continues past the last image of the gallery. Boolean that defaults to `true`.                 |\n| `css-class`     | A class name to apply to the lightbox to allow css targeting. This will replace the lightbox class with your custom class name.                                          |\n\nA complete example:\n\n``` yml\n---\ntitle: Complete Lightbox Example\nfilters:\n  - lightbox\nlightbox:\n  match: auto\n  effect: fade\n  desc-position: right\n  loop: false\n  css-class: \"my-css-class\" #only if custom css file exists.\n---\n```\n\n## Per Image Attributes\n\nThe following options may be specified as attributes on individual images to control the lightbox behavior:\n\n| Option          | Description                                                                                                                         |\n|-----------------|-------------------------------------------------------------------------------------------------------------------------------------|\n| `desc-position` | The position of the title and description when displaying a lightbox. One of `top`, `bottom`, `left`, `right`. Defaults to `bottom` |\n\n## Using lightbox with computation cells\n\nOptions for lightbox can be passed using chunk option `lightbox` like the following:\n\n``` r\n#| fig-cap: Simple demo R plot \n#| lightbox:\n#|   group: r-graph\n#|   description: This is 1 to 10 plot\nplot(1:10, rnorm(10))\n```\n\nIt is possible to create several plots, and group them in a lightbox gallery. Use list in YAML for options when you have several plots, on per plot.\n\n``` r\n#| fig-cap: \n#|   - Caption for first plot\n#|   - Caption for second plot\n#| lightbox: \n#|   group: cars\n#|   description: \n#|     - This is the decription for first graph\n#|     - This is the decription for second graph\nplot(mtcars)\nplot(cars)\n```\n\nWhen `lightbox: auto` is in main YAML config, you can opt-out lightbox on a plot by setting `lightbox: false` When `lightbox: auto` is not set, you can opt-in for lightbox on a specific plot by setting `lightbox: true` or by setting `lightbox` with some options.\n\n## Example\n\nHere is the source code for a minimal example: [example.qmd](https://github.com/quarto-ext/lightbox/blob/main/example.qmd)\n\nThis is the output of [example.qmd](https://quarto-ext.github.io/lightbox/).\n\n## Chilmark\n\nHere is a simple image with a description. This also overrides the description position and places it to the left of the image.\n\n![Beach in Chilmark](images/mv-0.jpg){description=\"Chilmark has a reputation as having some of the best beaches on Martha's Vineyard. Chilmark beaches are resident only in the summer, so be sure to have your proof of residency ready if you'd like to visit one of these special places. _credit:_ [Chilmark Beach](https://unsplash.com/photos/VBDJGOMCwps)\" desc-position=\"left\"}\n\n## Elsewhere\n\nThe below demonstrates placing more than one image in a gallery. Note the usage of the `layout-ncol` which arranges the images on the page side by date. Adding the `group` attribute to the markdown images places the images in a gallery grouped together based upon the group name provided.\n\n::: {layout=\"[[1, 1], [1]]\"}\n![Aquinnah](images/mv-1.jpg){group=\"elsewhere\" description=\"The waves break off the coast of Aquinnah on a beautiful summer day.\"}\n\n![Oak Bluffs](images/mv-3.jpg){group=\"elsewhere\" description=\"Oak Bluffs is famous for its Gingerbread cottages, busy town center, and party like atmosphere.\"}\n\n![Vineyard lighthouse](images/mv-2.jpg){group=\"elsewhere\" description=\"The Edgartown Lighthouse is a short walk from downtown and has beautiful views over the entrance to Edgartown Harbor.\"}\n:::\n\n## With computation code chunks\n\nOptions for lightbox can be passed using chunk options.\n\n\n::: {.cell lightbox='{\"group\":\"r-graph\",\"description\":\"This is 1 to 10 plot\"}'}\n\n```{.r .cell-code}\nplot(1:10, rnorm(10))\n```\n\n::: {.cell-output-display}\n![Simple demo R plot](Lightbox_Example_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n::: {.cell lightbox='{\"group\":\"r-graph\",\"description\":\"We see our cars data above\"}'}\n\n```{.r .cell-code}\nplot(cars)\n```\n\n::: {.cell-output-display}\n![Plot about cars data](Lightbox_Example_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nIt is possible to create several plots, and group them in a lightbox gallery. Use list in YAML for options when you have several plots, on per plot.\n\n\n::: {.cell lightbox='{\"group\":\"cars\",\"description\":[\"This is the decription for first graph\",\"This is the decription for second graph\"]}'}\n\n```{.r .cell-code}\nplot(mtcars)\n```\n\n::: {.cell-output-display}\n![Caption for first plot](Lightbox_Example_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(cars)\n```\n\n::: {.cell-output-display}\n![Caption for second plot](Lightbox_Example_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n\nWhen `lightbox: auto` in main YAML config, you can opt-out lightbox on a plot by setting `lightbox: false`\n\n\n::: {.cell lightbox='false'}\n\n```{.r .cell-code}\nplot(mtcars)\n```\n\n::: {.cell-output-display}\n![mtcars](Lightbox_Example_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Credits\n\nThe images in this example were used under the [Unsplash license](https://unsplash.com/license), view originals below:\n\n-   [Chilmark Beach](https://unsplash.com/photos/VBDJGOMCwps)\n-   [Aquinnah](https://unsplash.com/photos/2iQnDPLIXwU)\n-   [Gingerbread House](https://unsplash.com/photos/HQEtvlNzUyA)\n-   [Edgartown Light](https://unsplash.com/photos/f59MyOfLpi8)\n-   [Edgartown Sailboat](https://unsplash.com/photos/IiLiz7XpQpI)\n",
    "supporting": [
      "Lightbox_Example_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
[
  {
    "objectID": "posts/RStudio_install.html",
    "href": "posts/RStudio_install.html",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "",
    "text": "References Pages to visit first:\nPainless way to install a new version of R?\nHow to migrate Rstudio files and installed packages ( by version to a new computer )\nAn efficient way to install and load R packages\nLoading packages: the difference between R’s library() and require() functions\nBioconductor\nInstall/Update R and R packages\nrestore all R packages after installing a new version of R?\nHow to Upgrade R Without Losing Your Packages\nUpgrade R Without Losing Your Packages\nUpdate and migrate R\nProfiles package\nRprofile.site file example for Startup customization\nManaging R with .Rprofile, .Renviron, Rprofile.site, Renviron.site, rsession.conf, and repos.conf\n\nTrick for doing the upgrade, from installing the software to copying all the settings/packages over?First you install the new version, then run this in the old version:\n\n\n\nsetwd(\"C:/Temp/\")\npackages <- installed.packages()[,\"Package\"]\nsave(packages, file=\"Rpackages\")\n\nFollowed by this in the new version:\n\n\n\n\nsetwd(\"C:/Temp/\")\nload(\"Rpackages\")\nfor (p in setdiff(packages, installed.packages()[,\"Package\"]))\ninstall.packages(p)\n\n\n\n\nUsing Installr\n\n#From https://stackoverflow.com/questions/1401904/painless-way-to-install-a-new-version-of-r\n\n# Run in the old version of R (or via RStudio)\nsetwd(\"C:/Temp/\") \npackages <- installed.packages()[,\"Package\"] \nsave(packages, file=\"Rpackages\") \n\n# INSTALL NEW R VERSION\nif(!require(installr)) { install.packages(\"installr\"); require(installr)} #load / install+load installr\n# See here for more on installr: https://www.r-statistics.com/2013/03/updating-r-from-r-on-windows-using-the-installr-package/  \n\n# step by step functions:\ncheck.for.updates.R() # tells you if there is a new version of R or not.\ninstall.R() # download and run the latest R installer... This install.R seems to be a windows only command. \n\n# Install library - run in the new version of R. This calls package names and installs them from repos, thus all packages should be correct to the most recent version\nsetwd(\"C:/Temp/\") \nload(\"Rpackages\") \nfor (p in setdiff(packages, installed.packages()[,\"Package\"])) \ninstall.packages(p) \n\n# Installr includes a package migration tool but this simply copies packages, it does not update them\ncopy.packages.between.libraries() # copy your packages to the newest R installation from the one version before it (if ask=T, it will ask you between which two versions to perform the copying)"
  },
  {
    "objectID": "posts/RStudio_install.html#upgrading-r-on-windows-and-mac",
    "href": "posts/RStudio_install.html#upgrading-r-on-windows-and-mac",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "Upgrading R on Windows and Mac",
    "text": "Upgrading R on Windows and Mac\nhttps://www.r-statistics.com/tag/installr/\n\nWindows\nIf you are using Windows you can easily upgrade to the latest version of R using the installr package. Simply run the following code in Rgui:\n\ninstall.packages(\"installr\") # install \nsetInternet2(TRUE) # only for R versions older than 3.3.0\ninstallr::updateR() # updating R.\n# If you wish it to go faster, run: installr::updateR(T)\n\nRunning “updateR()” will detect if there is a new R version available, and if so it will download+install it (etc.). There is also a step by step tutorial (with screenshots) on how to upgrade R on Windows, using the installr package. If you only see the option to upgrade to an older version of R, then change your mirror or try again in a few hours (it usually take around 24 hours for all CRAN mirrors to get the latest version of R).\nAlso chekck the video:\n\n\n\n\n\nMac\nIf you are using Mac you can easily upgrade to the latest version of R using Andrea Cirillo’s updateR package. The package is not on CRAN, so you’ll need to run the following code in Rgui:\n\ninstall.packages(\"devtools\")\ndevtools::install_github(\"AndreaCirilloAC/updateR\")\nupdateR(admin_password = \"PASSWORD\") # Where \"PASSWORD\" stands for your system password\n\nMBP15 The downloaded source packages are in “/private/var/folders/xc/rxn5vywj3lvd_qt78ss92cc80000gn/T/Rtmp8TJvA5/downloaded_packages” MBP20 The downloaded binary packages are in /var/folders/1v/nbx_5tgn553dq8s639lyln5c0000gn/T//Rtmp8AkWwy/downloaded_packages\nOption 1\nPainless way to install a new version of R?\nFiles are .rda\n\n#--run in the old version of R\nsetwd(\"C:/Temp/\")\npackages <- installed.packages()[,\"Package\"]\nsave(packages, file=\"Rpackages\")\n\n#--run in the new version\nsetwd(\"C:/Temp/\")\nload(\"Rpackages\")\nfor (p in setdiff(packages, installed.packages()[,\"Package\"]))\ninstall.packages(p)\n\n\n#-----\n\n# Just for completeness, you can save your packages in another directory on your computer.\ninstall.packages(\"thepackage\",lib=\"/path/to/directory/with/libraries\")\n#You can change the default .Library value using the function .libPaths too\n.libPaths(\"/path/to/directory/with/libraries\")\n\n# -----\n\n#Finally, You can also include a small code in my Rprofile.site allowing  to reinstall all packages when installing a new R version. You just have to list them up before you update to the new R version by using an .RData file containing an updated list with all packages.\n\nlibrary(utils)\n\n## Check necessary packages\nload(\"G:\\Setinfo\\R\\packagelist.RData\") # includes a vector \"pkgs\"\ninstalled <- pkgs %in% installed.packages()[, 'Package']\nif (length(pkgs[!installed]) >=1){\n  install.packages(pkgs[!installed])\n}\n# I make the packagelist.RData by specifying .Last() in my Rprofile.site. This updates the package list if I installed some :\n\n.Last <- function(){\n  pkgs <- installed.packages()[,1]\n  if (length(pkgs) > length(installed)){\n    save(pkgs,file=\"G:\\Setinfo\\R\\packagelist.RData\")\n  }\n}\n\nOption 2:\nHow to migrate Rstudio files and installed packages ( by version to a new computer )\n\nSave as .csv files.\nOr .xlsx files.\n\n\ngetwd()\nsetwd()\n# /Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/file_name.csv  \n\ninstalled <- as.data.frame(installed.packages())\nwrite.csv(installed, 'installed_previously.csv') # Path/to/folder/installed_previously.csv \ninstalledPreviously <- read.csv('installed_previously.csv') # Path/to/folder/installed_previously.csv \nbaseR <- as.data.frame(installed.packages())\ntoInstall <- setdiff(installedPreviously, baseR)\n\n# the first thing to do would be to make sure that the set of currently installed packages is up-to-date. \n\nupdate.packages(checkBuilt=TRUE, ask=FALSE)  #check spelling of arguments\n  new_pacs <- paste( setdiff( installedPreviously$Package, baseR$Package), \n                       collapse=\",\")\n  install.packages( new_pacs, dependencies=TRUE)\n\n# For excel files, requires: \ninstall.packages(\"writexl\")\nlibrary(\"writexl\")\nwrite_xlsx(the_dataframe_name,\"path/to/folder/file_name.xlsx\")"
  },
  {
    "objectID": "posts/RStudio_install.html#an-efficient-way-to-istall-and-load-r-packages",
    "href": "posts/RStudio_install.html#an-efficient-way-to-istall-and-load-r-packages",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "An efficient way to istall and load R packages",
    "text": "An efficient way to istall and load R packages\nAn efficient way to install and load R packages\n\n\nInefficient way to install and load R packages:\n\n\n# Installation of required packages\ninstall.packages(\"tidyverse\")\ninstall.packages(\"ggplot2\")\ninstall.packages(\"readxl\")\ninstall.packages(\"dplyr\")\n\n# Load packages\nlibrary(\"tidyverse\")\nlibrary(\"ggplot2\")\nlibrary(\"readxl\")\nlibrary(\"dplyr\")\n\n\n\nMore efficient way\n\n# Package names\npackages <- c(\"ggplot2\", \"readxl\", \"dplyr\", \"tidyr\", ...)\n\n# Install packages not yet installed\ninstalled_packages <- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages])\n}\n\n# Packages loading\ninvisible(lapply(packages, library, character.only = TRUE))\n\n\n\nMost efficient way\n{pacman} package\nAfter this article was published, a reader informed me about the {pacman} package. After having read the documentation and try it out myself, I learned that the function p_load() from {pacman} checks to see if a package is installed, if not it attempts to install the package and then loads it. It can also be applied to several packages at once, all this in a very condensed way:\n\ninstall.packages(\"pacman\")\n\npacman::p_load(ggplot2, tidyr, dplyr)\n\n## Make sure your current packages are up to date\nupdate.packages()\n## devtools is required\nlibrary(devtools)\ninstall_github(\"trinker/pacman\")\n\nFind more about this package on CRAN. Introduction to the pacman Package in R (3 Examples)\n\n{librarian} package\nLike {pacman}, the shelf() function from the {librarian} package automatically installs, updates, and loads R packages that are not yet installed in a single function. The function accepts packages from CRAN, GitHub, and Bioconductor (only if Bioconductor’s Biobase package is installed). The function also accepts multiple package entries, provided as a comma-separated list of unquoted names (so no “” around package names).\n\nBiobase: Base functions for Bioconductor DOI: 10.18129/B9.bioc.Biobase\nInstallation:\nTo install this package, start R (version “4.2”) and enter:\n\n\nif (!require(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBiocManager::install(\"Biobase\")\n\nLast but not least, the {librarian} package allows to load packages automatically at the start of every R session (thanks to the lib_startup() function) and search for new packages on CRAN by keywords or regular expressions (thanks to the browse_cran() function).\n\nHere is an example of how to install missing packages and load them with the shelf() function:\n\n# From CRAN:\ninstall.packages(\"librarian\")\n\nlibrarian::shelf(ggplot2, DesiQuintans / desiderata, pander)\n\nFor CRAN packages, provide the package name as normal without “” and for GitHub packages, provide the username and package name separated by / (i.e., UserName/RepoName as shown for the desiderata package).\nFind more about this package on CRAN."
  },
  {
    "objectID": "posts/RStudio_install.html#location-of-the-r-packages",
    "href": "posts/RStudio_install.html#location-of-the-r-packages",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "Location of the R packages",
    "text": "Location of the R packages\n\n# _> In Terminal\n\n# MBP15: The downloaded source packages are in:\nopen /private/var/folders/xc/rxn5vywj3lvd_qt78ss92cc80000gn/T/Rtmp8TJvA5/downloaded_packages \n\n# MBP20: The downloaded binary packages are in:\nopen  /var/folders/1v/nbx_5tgn553dq8s639lyln5c0000gn/T//Rtmp8AkWwy/downloaded_packages"
  },
  {
    "objectID": "posts/RStudio_install.html#summary",
    "href": "posts/RStudio_install.html#summary",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "Summary",
    "text": "Summary\n\nSaved installed packages\n\n# 20230324\n# Update current packages.\nupdate.packages(checkBuilt=TRUE, ask=FALSE)  #check spelling of arguments\n\n# Upgrade packages of Bioconductor\n# Install packages from a newer version of Bioconductor.\n# https://www.bioconductor.org/install/ \n\nif (!require(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\nBiocManager::install(version = \"3.16\")\n\n#--run in the old version of R\n# MBP15: setwd(\"/Users/Marcelo-Rosales/Box Sync/Github/RStudio_shared/R_packages/\")\nRSpacks230324MBP15 <- installed.packages()[,\"Package\"]\nsave(RSpacks230324MBP15, file=\"/Users/Marcelo-Rosales/Box Sync/Github/RStudio_shared/R_packages/RSpacks230324MBP15\")\n\n#--run in the new version\n# MBP20: setwd(\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/\")\n\nload(\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/RSpacks230324MBP15\")\nfor (p in setdiff(RSpacks230324MBP15, installed.packages()[,\"Package\"]))\n  install.packages(p)\n\n\n\nCopy/Paste Rstudio global settings and preferences if necessary.\n\n# Copy/Paste Rstudio global settings and preferences.. \n\n# In terminal _> \nopen ~/.config/rstudio\n\n# Search and Copy file to same place as packages files. \nrstudio-prefs.json\n\n\n\nBrew cask upgrade R and Rstudio.\n\n# IN _> Upgrade R and rstudio\nbrew update\nbrew upgrade --cask r\n# password\n#`brew cleanup` has not been run in the last 30 days, running now...\n\n# Upgrade RStudio\nbrew upgrade --cask rstudio\n\n# Copy paste the `rstudio-prefs.json` if needed, usually it still remains after upgrade. \nrstudio-prefs.json"
  },
  {
    "objectID": "posts/RStudio_install.html#errors-and-trouble-shooting.",
    "href": "posts/RStudio_install.html#errors-and-trouble-shooting.",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "Errors and trouble shooting.",
    "text": "Errors and trouble shooting.\n\nnon-UTF8 locale error in R\nWARNING: You’re using a non-UTF8 locale\n\nWhen opening R new version… an error message is displayed.\n\nDuring startup - Warning messages:\n1: Setting LC_CTYPE failed, using \"C\" \n2: Setting LC_COLLATE failed, using \"C\" \n3: Setting LC_TIME failed, using \"C\" \n4: Setting LC_MESSAGES failed, using \"C\" \n5: Setting LC_MONETARY failed, using \"C\" \n[R.app GUI 1.79 (8198) x86_64-apple-darwin17.0]\n\nWARNING: You're using a non-UTF8 locale, therefore only ASCII characters will work.\nPlease read R for Mac OS X FAQ (see Help) section 9 and adjust your system preferences accordingly.\n\nA solution: For english: Installing R on Mac - Warning messages: Setting LC_CTYPE failed, using “C”\n\ndefaults write org.R-project.R force.LANG en_US.UTF-8  # 英語表示\ndefaults write org.R-project.R force.LANG ja_JP.UTF-8  # 日本語表示\n\nFor Japanese:.\n\n\n\nThere is already an App at ’/Applications\nError: It seems there is already an App at ‘/Applications/Rstudio’\nis it possible to override the legacy app when install using brew\nSome times is not possible to install, re-intall or upgrade a program via brew cos first installation was made manually (downloaded zip or tar files).\nThis leaves a “legacy” app. To fix it use the --force attribute while installing\n\nbrew install --cask rstudio --force"
  },
  {
    "objectID": "posts/quarto_start.html",
    "href": "posts/quarto_start.html",
    "title": "Starting with quarto",
    "section": "",
    "text": "Since the appearance of quarto, perhaps it would be more effective to write all in .qmd files cos of its advantages,\n\nimages can be added easily and automatically\nimg captions\ncode writing and\ncompatible with Zotero bibliography (for word, Rstudio and quarto)\nAlmost same code/outcome flexibility as Mkdocs code package.\nQmd files can be opened in vs code directly and updates instantaneously as I write for color copy/paste code.\nVisual mode is very convenient, as I can copy paste format directly to word (no need to convert/apply format code to word format)."
  },
  {
    "objectID": "posts/quarto_start.html#quarto",
    "href": "posts/quarto_start.html#quarto",
    "title": "Starting with quarto",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org ."
  },
  {
    "objectID": "posts/quarto_start.html#running-code",
    "href": "posts/quarto_start.html#running-code",
    "title": "Starting with quarto",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed).\nyou can write chunk options in the body of a code chunk after #|, e.g.,\n\n\n\n\n\nThis is a long long long long caption.\n\n\n\n\nfor more info see here.\nSeattle Precipitation by Day (2012 to 2016)\nFor ojs and pkp (public knowledge project) install packages first. follow this pkp installation guide.\n\nhttps://pkp.sfu.ca/software/ojs/download/\n\ndata = FileAttachment(\"../data/seattle-weather.csv\")\n  .csv({typed: true})\n  \nPlot.plot({\n  width: 800, height: 500, padding: 0,\n  color: { scheme: \"blues\", type: \"sqrt\"},\n  y: { tickFormat: i => \"JFMAMJJASOND\"[i] },\n  marks: [\n    Plot.cell(data, Plot.group({fill: \"mean\"}, {\n      x: d => d.date.getUTCDate(),\n      y: d => d.date.getUTCMonth(),\n      fill: \"precipitation\", \n      inset: 0.5\n    }))\n  ]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAir Quality\nFigure 1 further explores the impact of temperature on ozone level.\n\nlibrary(ggplot2)\n\nggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\"\n)\n\n\n\n\nFigure 1: Temperature and ozone level.\n\n\n\n\nFor a demonstration of a line plot on a polar axis, see Figure 2.\n\nMake sure that the console in the r and not in Python. In the top label you will see either the R logo with > or the python logo with >>>, to exit python console press esc and you will go back to the R console.\n\n\nlibrary(reticulate)\n\npip install numpy\npip install matplotlib\npip3 install numpy\npip3 install matplotlib\npython3 -m pip install numpy\npython3.11 -m pip install --upgrade pip\npip3.10 install numpy\npython3.10 -m pip install --upgrade pip\n\n# Pre-intallation required through terminal:\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\nFigure 2: A line plot on a polar axis\n\n\n\n\nIf error: ModuleNotFoundError: No module named ‘numpy’ in Python\nSee here\nPython test.\n\n\nimport numpy as np\n\n\nlibrary(reticulate)\n\n\nRunning Code summary\nRelated to code and code chunks.\nIn yml sections:\n---\nformat: \n  html: \n    code-fold: show\n    code-copy: true\n    code-overflow: wrap\n---\nIn chuncks:\n#| eval: false\n#| echo: false\n#| my-chunk, echo = FALSE, fig.width = 10,\n#| label: fig-airquality\n#| fig.cap = \"This is a long long long long caption.\"\n#| fig-cap: Temperature and ozone level.\n#| warning: false\n# For python, pre-intallation required through terminal:\n# pip install numpy\n# pip install matplotlib\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n1 + 1"
  },
  {
    "objectID": "posts/quarto_start.html#nav-and-sidebar",
    "href": "posts/quarto_start.html#nav-and-sidebar",
    "title": "Starting with quarto",
    "section": "Nav and sidebar",
    "text": "Nav and sidebar\nNav bar example use in this page\n\nproject:\n  type: website\n  output-dir: docs\n\nwebsite:\n  title: \"MySite\"\n  image: \"images/img01.png\" # where this images goes?. only works with specifit themes?...\n  favicon: \"images/favicon.png\" # Small icon in the bewbrowser tab (ex. uni logo)\n  open-graph: true #https://quarto.org/docs/websites/website-tools.html, https://www.youtube.com/watch?v=QwEQKM4YRnU&t=2s\n  #twitter-card: true #https://quarto.org/docs/websites/website-tools.html#twitter-cards\n  search: true \n  navbar:\n    background: light # this is the color option of the nav bg, but I set color in format: with theme.scss. # Options:`primary`, `secondary`, `success`, `danger`, `warning`, `info`, `light`, `dark`\n    logo: \"images/nav_img.png\" # logo in nav bar.\n    logo-alt: \"link to Mkdocs\"\n    logo-href: \"https://marcelorosales.github.io/MkDocsTest1/MkDocs/\"\n    collapse-below: lg\n    \n    left:\n      - href: index.qmd\n        text: Home\n      - href: about.qmd\n        text: \"About\"\n      - text: \"Software\"\n        menu: \n          - href: files/Software/RStudio/index.qmd # when inputing index.qmd doesnt work. Try other file and retry.\n            text: \"RStudio\"\n          - href: files/Software/ImageJ/index.qmd\n            text: \"ImageJ\"\n          - href: files/Software/Analyze12/index.qmd\n            text: \"Analyze12\"\n      - text: \"Blog\"\n        href: blog.qmd\n      - text: \"NavSubmenu\"\n        menu:\n          - text: \"Report a Bug\"\n            icon: \"bug\"\n            href: \"https://github.com/quarto-dev/quarto-cli/issues\"\n          - text: \"Ask a Question\"\n            icon: \"chat-right-text\"\n            href: \"https://github.com/quarto-dev/quarto-cli/discussions\"\n          - text: \"FAQ\"\n            icon: \"question-circle\"\n#            href: docs/faq/index.qmd\n    right: \n      - icon: github\n        href: https://github.com/quarto-dev/quarto-cli\n#        text: Quarto GitHub\n      - icon: rss\n        href: https://quarto.org/docs/blog/index.xml\n        \n  sidebar:\n    - id: RStudio \n      title: \"Get Started with the RStudio\"\n      style: \"floating\"\n      collapse-level: 2\n      align: left\n      contents:  \n        - files/Software/RStudio/index.qmd  \n        - text: \"Install\"\n          href: files/Software/RStudio/R_install.qmd  \n        - text: \"R Packages\"\n          href: files/Software/RStudio/R_Packages.qmd\n\n    - id: ImageJ \n      title: \"Get Started with ImageJ\"\n      style: \"floating\"\n      collapse-level: 2\n      align: left\n      contents:  \n        - files/Software/ImageJ/index.qmd  \n        - text: \"Install\"\n          href: files/Software/ImageJ/ImgJ_install.qmd  \n        - text: \"R Packages\"\n          href: files/Software/ImageJ/ImgJ_Packages.qmd\n\nformat:\n  html:\n    toc: true\n    theme:\n      light: [cosmo, theme.scss]\n      dark: [cosmo, theme-dark.scss] # change theme (cosmo) colors and formats in the scss files\n    code-copy: true\n    code-overflow: wrap\n    css: styles.css\n    include-after-body: js.html\n    grid:\n      sidebar-width: 250px\n      body-width: 900px\n      margin-width: 300px\n\n\neditor: visual"
  },
  {
    "objectID": "posts/Python.html",
    "href": "posts/Python.html",
    "title": "Python",
    "section": "",
    "text": "I first try:\n\npip install --upgrade\n\nERROR: You must give at least one requirement to install (see \"pip help install\")\n\n[notice] A new release of pip available: 22.2.1 -> 23.0.1\n[notice] To update, run: python3.9 -m pip install --upgrade pip\n\n# Then I tried\nbrew install python3.\n\nDisplayed: Warning: No available formula with the name “python3.”.\nDid you mean python@3.9, python@3.8, python@3.7, python@3.11 or python@3.10?\n==> Searching for similarly named formulae and casks…\n==> Formulae boost-python3 python@3.10 ✔ python@3.11 python@3.7 python@3.8 python@3.9 ✔\n\n\n\nbrew install python@3.8 \n# Or version needed\n\nHowever, this install all version of python.\n==> python@3.10 Python has been installed as /usr/local/bin/python3.10\nUnversioned and major-versioned symlinks python, python3, python-config, python3-config, pip, pip3, etc. pointing to python3.10, python3.10-config, pip3.10 etc., respectively, have been installed into:\n/usr/local/opt/python@3.10/libexec/bin\nYou can install Python packages with\npip3.10 install <package>\nThey will install into the site-package directory:\n/usr/local/lib/python3.10/site-packages\ntkinter is no longer included with this formula, but it is available separately:\nbrew install python-tk\\@3.10\nIf you do not need a specific version of Python, and always want Homebrew’s python3 in your PATH:\n\n  brew install python3\n\nSee: https://docs.brew.sh/Homebrew-and-Python\nWarning: python@3.11 3.11.2_1 is already installed and up-to-date.\npython3.9 -m pip install –upgrade pip\npip install –upgrade pip\npython –version\n>_Python 3.8.10\npip3 –version\n\n\n\nFor some of you reading this, this command may be enough. You can run Python 3 using this command (with the 3 at the end).\n\n\npython3\n\nTo exit python help window press ++Cnt+z++\n\n\n\n\nlink\nPip is a package management system used for installing and managing Python software packages and libraries. The software and libraries are stored in a repository called the Python Package Index (PyPI).\nPrerequisites:\n\nA system running macOS\nPython installed\nA user account with administrator-level privileges\n\n\n\nTo install pip on macOS through Homebrew. Make sure you have Homebrew installed by running the following command:\n\nbrew install python\n\nThe command installs the latest Python, pip, and setuptools.\n\n\n\nFollow the steps below to install Pip:\n1. Press Command + Space Bar and type in Terminal. Click the app icon to open a new terminal window.\n2. Check your Python version to make sure Python3 is installed: python3 --version\n3. Download pip by running the following command: curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\nThe curl command allows you to specify a direct download link. Use the -o option to set the name of the downloaded file.\n4. Install the downloaded package by running: python3 get-pip.py\n5. Verify Pip Installation: pip --version\n\npython3 --version\ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\npython3 get-pip.py\npip --version\n\n\n\n\n\nlink\nRun this command:\n\nbrew install pyenv\n\n\n\nNow you just need to run the following command: pyenv install {# of the py version to install}\n\npyenv install 3.9.2\n\n\n\n\n\nlink\nIf you only want to use Python 3.x for a specific project, then cd to your specific directory and type:\n\npyenv local 3.x.x\n\nIf you’d prefer to just have Python 3.x installed globally throughout your operating system, then type:\n\npyenv global 3.x.x\n\n\n\n\n\nbrew install jupyter\n# Start Jupyter\njupyter notebook"
  },
  {
    "objectID": "posts/Git.html",
    "href": "posts/Git.html",
    "title": "GIT Management",
    "section": "",
    "text": "#| eval: false\ngit add .\ngit commit -m \"python intsall\"\nremote: fatal error in commit_refs To https://github.com/MarceloRosales/Quarto_website_test01.git ! [remote rejected] master -> master (failure) error: failed to push some refs to ‘https://github.com/MarceloRosales/Quarto_website_test01.git’\nSolution:\n\nALL SOLUTIONS REVERT TO LAST COMMIT AND DELETE ALL CONTENT EVEN IF SAVED!! SAVE CONTENT IN A DIFFERENT FILE BEFORE MERGING\n\ngit - Your branch is ahead of ‘origin/master’ by 1 commit\ngit reset HEAD^ –soft (Save your changes, back to last commit) git reset HEAD^ –hard (Discard changes, back to last commit)\nThis one worked!!\n#| evaleval: false\n#| \ngit pull origin {branch name}\ngit reset --hard origin/{branch name}\ngit branch\n#| evaleval: false\n\ngit pull     \ngit merge \ngit pull origin\ngit reset --hard origin/master\n# HEAD is now at 4fd3039 R, RStudio and packages upgrade\ngit pull\ngit push\ngit add .\ngit commit -m \"message\"\ngit push"
  },
  {
    "objectID": "posts/2adPost.html",
    "href": "posts/2adPost.html",
    "title": "This is the title of the post",
    "section": "",
    "text": "this the second post."
  },
  {
    "objectID": "posts/Quarto_templates.html",
    "href": "posts/Quarto_templates.html",
    "title": "Jolla template",
    "section": "",
    "text": "What do I have to add here?.\n\n  \n \nFinley Malloc is the Chief Data Scientist at Wengo Analytics. When not innovating on data platforms, Finley enjoys spending time unicycling and playing with her pet iguana.\n\n\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sept 2007 - June 2011\n\n\n\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Sept 2012 - April 2018\n\n \n  \n   \n  \n    \n     twitter\n  \n  \n    \n     Github"
  },
  {
    "objectID": "posts/1stPost.html",
    "href": "posts/1stPost.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is my first post in a trial."
  },
  {
    "objectID": "Lightbox_Example.html",
    "href": "Lightbox_Example.html",
    "title": "Complete Lightbox Example",
    "section": "",
    "text": "Here is a simple image with a description. This also overrides the description position and places it to the left of the image.\n\n\n\nBeach in Chilmark"
  },
  {
    "objectID": "Lightbox_Example.html#elsewhere",
    "href": "Lightbox_Example.html#elsewhere",
    "title": "Complete Lightbox Example",
    "section": "Elsewhere",
    "text": "Elsewhere\nThe below demonstrates placing more than one image in a gallery. Note the usage of the layout-ncol which arranges the images on the page side by date. Adding the group attribute to the markdown images places the images in a gallery grouped together based upon the group name provided.\n\n\n\n\n\nAquinnah\n\n\n\n\n\nOak Bluffs\n\n\n\n\n\n\n\nVineyard lighthouse"
  },
  {
    "objectID": "Lightbox_Example.html#with-computation-code-chunks",
    "href": "Lightbox_Example.html#with-computation-code-chunks",
    "title": "Complete Lightbox Example",
    "section": "With computation code chunks",
    "text": "With computation code chunks\nOptions for lightbox can be passed using chunk options.\n\nplot(1:10, rnorm(10))\n\n\n\n\nSimple demo R plot\n\n\n\n\n\nplot(cars)\n\n\n\n\nPlot about cars data\n\n\n\n\nIt is possible to create several plots, and group them in a lightbox gallery. Use list in YAML for options when you have several plots, on per plot.\n\nplot(mtcars)\n\n\n\n\nCaption for first plot\n\n\n\nplot(cars)\n\n\n\n\nCaption for second plot\n\n\n\n\nWhen lightbox: auto in main YAML config, you can opt-out lightbox on a plot by setting lightbox: false\n\nplot(mtcars)\n\n\n\n\nmtcars"
  },
  {
    "objectID": "Lightbox_Example.html#credits",
    "href": "Lightbox_Example.html#credits",
    "title": "Complete Lightbox Example",
    "section": "Credits",
    "text": "Credits\nThe images in this example were used under the Unsplash license, view originals below:\n\nChilmark Beach\nAquinnah\nGingerbread House\nEdgartown Light\nEdgartown Sailboat"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Marcelo",
    "section": "",
    "text": "1 + 1\n\n[1] 2\n\n\nHere I use the quarto template trestles and place the yaml label in this files yml.\nInterestingly, if in the _quarto.yml nav code is like\n\nnavbar:\n    left:\n      - href: index.qmd\n        text: Home\n      - about.qmd # No href not text, directly the file name. \n      - href: Lightbox_Example.qmd\n        text: Lightbox\n\nThe title will change the name of nav tab, even if in the _quarto.yml is label “About”, but only while in this page. The tab will display the title of this file’s yml, but when not in this file, the nav tab label will revert to the label from the _quarto.yml file.\nI found usefull information in this pages:\n- Creating your personal website using quarto\ntype / to add content.\nonce I save the content then it will appear on page.\nNo!, it will appear when I saved and reload page."
  },
  {
    "objectID": "about.html#other-comments",
    "href": "about.html#other-comments",
    "title": "Marcelo",
    "section": "Other comments",
    "text": "Other comments"
  },
  {
    "objectID": "files/Software/RStudio/R_install.html",
    "href": "files/Software/RStudio/R_install.html",
    "title": "RStudio Install",
    "section": "",
    "text": "install"
  },
  {
    "objectID": "files/Software/RStudio/R_install.html#another-subtitle.",
    "href": "files/Software/RStudio/R_install.html#another-subtitle.",
    "title": "RStudio Install",
    "section": "Another subtitle.",
    "text": "Another subtitle."
  },
  {
    "objectID": "files/Software/RStudio/R_Packages.html",
    "href": "files/Software/RStudio/R_Packages.html",
    "title": "R Packages",
    "section": "",
    "text": "How to manage Packes."
  },
  {
    "objectID": "files/Software/RStudio/R_Packages.html#another-subtitle.",
    "href": "files/Software/RStudio/R_Packages.html#another-subtitle.",
    "title": "R Packages",
    "section": "Another subtitle.",
    "text": "Another subtitle.\nText"
  },
  {
    "objectID": "files/Software/index.html",
    "href": "files/Software/index.html",
    "title": "Software",
    "section": "",
    "text": "All related to Software\nSoftware used:\n\nRStudio\nImageJ\nAnalyze12\n\nInfo and How to’s."
  },
  {
    "objectID": "files/Software/Analyze12/index.html",
    "href": "files/Software/Analyze12/index.html",
    "title": "Analyze12",
    "section": "",
    "text": "Landing…"
  },
  {
    "objectID": "files/Software/Analyze12/index.html#another-subtitle.",
    "href": "files/Software/Analyze12/index.html#another-subtitle.",
    "title": "Analyze12",
    "section": "Another subtitle.",
    "text": "Another subtitle."
  },
  {
    "objectID": "files/Software/Analyze12/Analyze12_install.html",
    "href": "files/Software/Analyze12/Analyze12_install.html",
    "title": "Analyze12 Install",
    "section": "",
    "text": "install"
  },
  {
    "objectID": "files/Software/Analyze12/Analyze12_install.html#another-subtitle.",
    "href": "files/Software/Analyze12/Analyze12_install.html#another-subtitle.",
    "title": "Analyze12 Install",
    "section": "Another subtitle.",
    "text": "Another subtitle."
  },
  {
    "objectID": "files/Software/Analyze12/Analyze12_Packages.html",
    "href": "files/Software/Analyze12/Analyze12_Packages.html",
    "title": "Analyze12 Packages",
    "section": "",
    "text": "How to manage Packes."
  },
  {
    "objectID": "files/Software/Analyze12/Analyze12_Packages.html#another-subtitle.",
    "href": "files/Software/Analyze12/Analyze12_Packages.html#another-subtitle.",
    "title": "Analyze12 Packages",
    "section": "Another subtitle.",
    "text": "Another subtitle.\nText"
  },
  {
    "objectID": "files/Software/ImageJ/ImgJ_Packages.html",
    "href": "files/Software/ImageJ/ImgJ_Packages.html",
    "title": "ImageJ Packages",
    "section": "",
    "text": "How to manage Packes."
  },
  {
    "objectID": "files/Software/ImageJ/ImgJ_Packages.html#another-subtitle.",
    "href": "files/Software/ImageJ/ImgJ_Packages.html#another-subtitle.",
    "title": "ImageJ Packages",
    "section": "Another subtitle.",
    "text": "Another subtitle.\nText"
  },
  {
    "objectID": "files/Software/ImageJ/ImgJ_install.html",
    "href": "files/Software/ImageJ/ImgJ_install.html",
    "title": "ImageJ Install",
    "section": "",
    "text": "install"
  },
  {
    "objectID": "files/Software/ImageJ/ImgJ_install.html#another-subtitle.",
    "href": "files/Software/ImageJ/ImgJ_install.html#another-subtitle.",
    "title": "ImageJ Install",
    "section": "Another subtitle.",
    "text": "Another subtitle."
  }
]
[
  {
    "objectID": "posts/quarto_start.html",
    "href": "posts/quarto_start.html",
    "title": "Starting with quarto",
    "section": "",
    "text": "Since the appearance of quarto, perhaps it would be more effective to write all in .qmd files cos of its advantages,\n\nimages can be added easily and automatically\nimg captions\ncode writing and\ncompatible with Zotero bibliography (for word, Rstudio and quarto)\nAlmost same code/outcome flexibility as Mkdocs code package.\nQmd files can be opened in vs code directly and updates instantaneously as I write for color copy/paste code.\nVisual mode is very convenient, as I can copy paste format directly to word (no need to convert/apply format code to word format)."
  },
  {
    "objectID": "posts/quarto_start.html#quarto-install-or-upgrade",
    "href": "posts/quarto_start.html#quarto-install-or-upgrade",
    "title": "Starting with quarto",
    "section": "Quarto install or upgrade",
    "text": "Quarto install or upgrade\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org .\n\n\nterminal-brew\n\nbrew install --cask quarto \nbrew upgrade --cask quarto\n\n\n\n\n\n\n\nNote\n\n\n\n20230330 upgrade: quarto –version: 1.2.475 (Release Candidate — v1.3.296 available as CLI, but not as brew cask)"
  },
  {
    "objectID": "posts/quarto_start.html#running-code",
    "href": "posts/quarto_start.html#running-code",
    "title": "Starting with quarto",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed).\nyou can write chunk options in the body of a code chunk after #|, e.g.,\n\n\n\n\n\nThis is a long long long long caption.\n\n\n\n\nfor more info see here.\nSeattle Precipitation by Day (2012 to 2016)\nFor ojs and pkp (public knowledge project) install packages first. follow this pkp installation guide.\n\nhttps://pkp.sfu.ca/software/ojs/download/\n\ndata = FileAttachment(\"../data/seattle-weather.csv\")\n  .csv({typed: true})\n  \nPlot.plot({\n  width: 800, height: 500, padding: 0,\n  color: { scheme: \"blues\", type: \"sqrt\"},\n  y: { tickFormat: i => \"JFMAMJJASOND\"[i] },\n  marks: [\n    Plot.cell(data, Plot.group({fill: \"mean\"}, {\n      x: d => d.date.getUTCDate(),\n      y: d => d.date.getUTCMonth(),\n      fill: \"precipitation\", \n      inset: 0.5\n    }))\n  ]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAir Quality\nFigure 1 further explores the impact of temperature on ozone level.\n\nlibrary(ggplot2)\n\nggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\"\n)\n\n\n\n\nFigure 1: Temperature and ozone level.\n\n\n\n\nFor a demonstration of a line plot on a polar axis, see Figure 2.\n\nMake sure that the console in the r and not in Python. In the top label you will see either the R logo with > or the python logo with >>>, to exit python console press esc and you will go back to the R console.\n\n\nlibrary(reticulate)\n\n# install python see Python\n\npip3 install numpy\npip3 install matplotlib\npython3 -m pip install numpy\npython3.11 -m pip install --upgrade pip\npip3.10 install numpy\npython3.10 -m pip install --upgrade pip\n\n# Pre-intallation required through terminal:\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\nFigure 2: A line plot on a polar axis\n\n\n\n\nIf error: ModuleNotFoundError: No module named ‘numpy’ in Python\nSee here\nPython test.\n\n\nimport numpy as np\n\n\nlibrary(reticulate)\n\n\nRunning Code summary\nRelated to code and code chunks.\nIn yml sections:\n---\nformat: \n  html: \n    code-fold: show\n    code-copy: true\n    code-overflow: wrap\n---\nIn chuncks:\n#| eval: false\n#| echo: false\n#| my-chunk, echo = FALSE, fig.width = 10,\n#| label: fig-airquality\n#| fig.cap = \"This is a long long long long caption.\"\n#| fig-cap: Temperature and ozone level.\n#| warning: false\n# For python, pre-intallation required through terminal:\n# pip install numpy\n# pip install matplotlib\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n1 + 1"
  },
  {
    "objectID": "posts/quarto_start.html#nav-and-sidebar",
    "href": "posts/quarto_start.html#nav-and-sidebar",
    "title": "Starting with quarto",
    "section": "Nav and sidebar",
    "text": "Nav and sidebar\nNav bar example use in this page\n\nproject:\n  type: website\n  output-dir: docs\n\nwebsite:\n  title: \"MySite\"\n  image: \"images/img01.png\" # where this images goes?. only works with specifit themes?...\n  favicon: \"images/favicon.png\" # Small icon in the bewbrowser tab (ex. uni logo)\n  open-graph: true #https://quarto.org/docs/websites/website-tools.html, https://www.youtube.com/watch?v=QwEQKM4YRnU&t=2s\n  #twitter-card: true #https://quarto.org/docs/websites/website-tools.html#twitter-cards\n  search: true \n  navbar:\n    background: light # this is the color option of the nav bg, but I set color in format: with theme.scss. # Options:`primary`, `secondary`, `success`, `danger`, `warning`, `info`, `light`, `dark`\n    logo: \"images/nav_img.png\" # logo in nav bar.\n    logo-alt: \"link to Mkdocs\"\n    logo-href: \"https://marcelorosales.github.io/MkDocsTest1/MkDocs/\"\n    collapse-below: lg\n    \n    left:\n      - href: index.qmd\n        text: Home\n      - href: about.qmd\n        text: \"About\"\n      - text: \"Software\"\n        menu: \n          - href: files/Software/RStudio/index.qmd # when inputing index.qmd doesnt work. Try other file and retry.\n            text: \"RStudio\"\n          - href: files/Software/ImageJ/index.qmd\n            text: \"ImageJ\"\n          - href: files/Software/Analyze12/index.qmd\n            text: \"Analyze12\"\n      - text: \"Blog\"\n        href: blog.qmd\n      - text: \"NavSubmenu\"\n        menu:\n          - text: \"Report a Bug\"\n            icon: \"bug\"\n            href: \"https://github.com/quarto-dev/quarto-cli/issues\"\n          - text: \"Ask a Question\"\n            icon: \"chat-right-text\"\n            href: \"https://github.com/quarto-dev/quarto-cli/discussions\"\n          - text: \"FAQ\"\n            icon: \"question-circle\"\n#            href: docs/faq/index.qmd\n    right: \n      - icon: github\n        href: https://github.com/quarto-dev/quarto-cli\n#        text: Quarto GitHub\n      - icon: rss\n        href: https://quarto.org/docs/blog/index.xml\n        \n  sidebar:\n    - id: RStudio \n      title: \"Get Started with the RStudio\"\n      style: \"floating\"\n      collapse-level: 2\n      align: left\n      contents:  \n        - files/Software/RStudio/index.qmd  \n        - text: \"Install\"\n          href: files/Software/RStudio/R_install.qmd  \n        - text: \"R Packages\"\n          href: files/Software/RStudio/R_Packages.qmd\n\n    - id: ImageJ \n      title: \"Get Started with ImageJ\"\n      style: \"floating\"\n      collapse-level: 2\n      align: left\n      contents:  \n        - files/Software/ImageJ/index.qmd  \n        - text: \"Install\"\n          href: files/Software/ImageJ/ImgJ_install.qmd  \n        - text: \"R Packages\"\n          href: files/Software/ImageJ/ImgJ_Packages.qmd\n\nformat:\n  html:\n    toc: true\n    theme:\n      light: [cosmo, theme.scss]\n      dark: [cosmo, theme-dark.scss] # change theme (cosmo) colors and formats in the scss files\n    code-copy: true\n    code-overflow: wrap\n    css: styles.css\n    include-after-body: js.html\n    grid:\n      sidebar-width: 250px\n      body-width: 900px\n      margin-width: 300px\n\n\neditor: visual"
  },
  {
    "objectID": "posts/Python.html",
    "href": "posts/Python.html",
    "title": "Python",
    "section": "",
    "text": "I first try:\npip install --upgrade\n\nERROR: You must give at least one requirement to install (see \"pip help install\")\n\n[notice] A new release of pip available: 22.2.1 -> 23.0.1\n[notice] To update, run: python3.9 -m pip install --upgrade pip\n\n# Then I tried\nbrew install python3\nDisplayed: Warning: No available formula with the name “python3.”.\nDid you mean python@3.9, python@3.8, python@3.7, python@3.11 or python@3.10?\n==> Searching for similarly named formulae and casks…\n==> Formulae boost-python3 python@3.10 ✔ python@3.11 python@3.7 python@3.8 python@3.9 ✔\n\n\nbrew install python@3.8 \n# Or version needed\nHowever, this install all version of python.\n==> python@3.10 Python has been installed as /usr/local/bin/python3.10\nUnversioned and major-versioned symlinks python, python3, python-config, python3-config, pip, pip3, etc. pointing to python3.10, python3.10-config, pip3.10 etc., respectively, have been installed into:\n/usr/local/opt/python@3.10/libexec/bin\nYou can install Python packages with\npip3.10 install <package>\nThey will install into the site-package directory:\n/usr/local/lib/python3.10/site-packages\ntkinter is no longer included with this formula, but it is available separately:\nbrew install python-tk\\@3.10\nIf you do not need a specific version of Python, and always want Homebrew’s python3 in your PATH:\n  brew install python3\nSee: https://docs.brew.sh/Homebrew-and-Python\nWarning: python@3.11 3.11.2_1 is already installed and up-to-date.\npython3.9 -m pip install –upgrade pip\npip install –upgrade pip\npython –version\n>_Python 3.8.10\npip3 --vesrion\n\n\nFor some of you reading this, this command may be enough. You can run Python 3 using this command (with the 3 at the end).\n\npython3\nTo exit python help window press ++Cnt+z++\nTo print, press . To open an existing new project, press .\n\n\n\n\nlink\nPip is a package management system used for installing and managing Python software packages and libraries. The software and libraries are stored in a repository called the Python Package Index (PyPI).\nPrerequisites:\n\nA system running macOS\nPython installed\nA user account with administrator-level privileges\n\n\n\nTo install pip on macOS through Homebrew. Make sure you have Homebrew installed by running the following command:\nbrew install python\nThe command installs the latest Python, pip, and setuptools.\n\n\n\nFollow the steps below to install Pip:\n1. Press Command + Space Bar and type in Terminal. Click the app icon to open a new terminal window.\n2. Check your Python version to make sure Python3 is installed: python3 --version\n3. Download pip by running the following command: curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\nThe curl command allows you to specify a direct download link. Use the -o option to set the name of the downloaded file.\n4. Install the downloaded package by running: python3 get-pip.py\n5. Verify Pip Installation: pip --version\npython3 --version\ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\npython3 get-pip.py\npip --version\n\n\n\n\nlink\nRun this command:\nbrew install pyenv\n\n\nNow you just need to run the following command: pyenv install {# of the py version to install}\npyenv install 3.9.2\n\n\n\n\nlink\nIf you only want to use Python 3.x for a specific project, then cd to your specific directory and type:\npyenv local 3.x.x\nIf you’d prefer to just have Python 3.x installed globally throughout your operating system, then type:\npyenv global 3.x.x\n\n\n\nbrew install jupyter\n# Start Jupyter\njupyter notebook"
  },
  {
    "objectID": "posts/Python.html#summary",
    "href": "posts/Python.html#summary",
    "title": "Python",
    "section": "Summary",
    "text": "Summary\n\n\nTerminal\n\n\npip3 --version\nbrew install python3 \nbrew install python #same as above\nbrew install pyenv\nbrew install jupyter\npip install --upgrade pip\npython3.11 -m pip install --upgrade pip\n\npip install numpy\npip install matplotlib   #Still asking for numpy\n\n# This code made it work...\npip3 install numpy\npip3 install matplotlib\n\n# Optional commands to make python run in RStudio:\npython3 -m pip install numpy\npython3.11 -m pip install --upgrade pip\npip3.10 install numpy\npython3.10 -m pip install --upgrade pip"
  },
  {
    "objectID": "posts/Python.html#errors-and-troubleshooting",
    "href": "posts/Python.html#errors-and-troubleshooting",
    "title": "Python",
    "section": "Errors and Troubleshooting",
    "text": "Errors and Troubleshooting\n\n\n\n\n\n\nWarning\n\n\n\nIn background Jobs:\nError: ModuleNotFoundError: No module named ‘numpy’ Execution halted\n\n\n\n\n\n\nSolution\n\n\n\npip3 install numpy\npip3 install matplotlib"
  },
  {
    "objectID": "posts/Git.html",
    "href": "posts/Git.html",
    "title": "GIT Management",
    "section": "",
    "text": "brew install git   \nIn windows, git provides the Git BASH app, a BASH emulation used to run Git form the command line."
  },
  {
    "objectID": "posts/Git.html#git-config",
    "href": "posts/Git.html#git-config",
    "title": "GIT Management",
    "section": "Git Config",
    "text": "Git Config\ngit config --global user.name \"{your name}\" # Quotes if there is a space between the names\ngit config --global user.email your_email@service.com\n\n# Specify default editor\ngit config --global core.editor \"code --wait\"  # VScode as default editor\ngit config --global -e  # Opens defautl editor # Opens default editor to edit all the global settings. \n\n# How to handle end of lines. In windows: \\r, \\n; on mac: \\n. May provoke conflicts, cofig property \"core.autocrlf\" (11:41)\n# Windows:\ngit config --global core.autocrlf true\n# Mac:\ngit config --global core.autocrlf input\nTo have a colorfull terminal window like in the video install\nOn Mac: Zsh with git plugin\nWindows: posh-git\nvideo1\nvideo2\nUsing zsh on Windows\nGit cheat sheet\nGit cheat sheet2\nGit cheat sheet3\nGit cheat sheet4\nGit cheat sheet3\n\n\nTerminal\n\n# Start control version\ngit init\nls -a # To see hidden files\nopen .git\ngit clone [url]\n\n# Stage & Snapshot\ngit pull\ngit status\ngit add .\ngit checkout\ngit commit -m \"[message]\"\ngit push\ngit pull\n\nrm [file_name]  # removes/delete file\nmv [old_filename] [new_filename]"
  },
  {
    "objectID": "posts/Git.html#video-tutorials",
    "href": "posts/Git.html#video-tutorials",
    "title": "GIT Management",
    "section": "Video Tutorials",
    "text": "Video Tutorials\n\n\n\n\n\n\n\n\nterminal\n\nbrew install git\ngit --version\ngit init\ngit init --bare # Repository for only push and pull, not changes possible  \ngit status\ngit add {filename}\ngit add .   \ngit commit -m \"{message}\" # If forgot -m (1:06:40), press i, --INSERT-- type message\ngit commit -am \"{message}\" # If modify file already added to git you can use \"-a\" flag, for new files use the \"add\" flag. \ngit diff # to see the differences and modifications on the files.\ngit diff --color-words # color code for added and deleted portions of each file.\ngit log\ngit log --pertty=oneline #Log as one line, not showing all the changes.\ngit diff {commit log#} {commit log#}\n# 1:24:00\ngit branch\ngit branch --all\ngit branch {branch name1} # To create a new branch\ngit branch checkout {branch name1} #To change/jump branches\ngit status\ngit commit -am \"Changes in the new branch\"\ngit log #Check HEAD -> {branch name1}\ngit log --pretty=oneline #To see all commits log\ngit checkout -b {branch name2} #Jump to branch2 and if it doesn't exist create it. \ngit diff {branch name1}...{branch name2} #To see differences between branches.  \n\n## Mergin braches to master.  Go to master first.\ngit checkout master\ngit branch\ngit merge {branch name}\n\n## To push a branch from local to github\ngit push --set-upstream origin {branch name}\n\n## To delete a branch. Caution!! Can not delete if you are in branch\ngit branch -d {branch name}\n\n## Discard/Unstage ex .DS_Store file from git panel. Find all \".DS_Store\" files in all folders and delete.  \nfind . -name \".DS_Store\" -delete    \nfind . -name '.DS_Store' -type f -delete\ngit restore .DS_Store \ngit restore ."
  },
  {
    "objectID": "posts/Git.html#trouble-shooting.",
    "href": "posts/Git.html#trouble-shooting.",
    "title": "GIT Management",
    "section": "Trouble shooting.",
    "text": "Trouble shooting.\n\nBranch is ahead error\n\n\nterminal\n\ngit add .\ngit commit -m \"python install\"\n\n\n\nerror message\n\nremote: fatal error in commit_refs To https://github.com/MarceloRosales/Quarto_website_test01.git ! \\[remote rejected\\] master -> master (failure) **error: failed to push some refs to 'https://github.com/MarceloRosales/Quarto_website_test01.git'**\n\nSolution:\n\n\n\n\n\n\nImportant\n\n\n\nALL SOLUTIONS REVERT TO LAST COMMIT AND DELETE ALL CONTENT EVEN IF SAVED!! SAVE CONTENT IN A DIFFERENT FILE BEFORE MERGING, AFTER MERGING (REVERT TO LAST COMMIT) COPY PASTE CONTENT AGAIN.\n\n\ngit - Your branch is ahead of ‘origin/master’ by 1 commit\ngit reset HEAD^ --soft (Save your changes, back to last commit)\ngit reset HEAD^ --hard (Discard changes, back to last commit)\nThis one worked!!\n\n\nterminal\n\ngit pull origin {branch name}\ngit reset --hard origin/{branch name}\ngit branch\n\ngit pull     \ngit merge \ngit pull origin\ngit reset --hard origin/master\n# HEAD is now at 4fd3039 R, RStudio and packages upgrade\ngit pull\ngit push\ngit add .\ngit commit -m \"message\"\ngit push\n\n\nGit Stash Changes\nLearn Git Stash Apply, Pop, Clear, Show, Drop\nAnother alternative for the Branch ahead error, you can use:\n\n\nTerminal\n\ngit stash\ngit pull\ngit stash show\n# To exit git stash ++Cnt+z++.  \ngit stash list\ngit stash clear # Warning!! all changes make in the stash will be lost and revert to last saved version. \ngit status\n\nhow to git stash changes\n\n\n\n\nDelete .DS_Store\nDelete .DS_Store recursively from all directories and sub-directories.\nHow to Recursively Remove .DS_Store\nOn a Mac, it is common to run into an issue when committing files to a git repo, where a file named .DS_Store appears in every folder. This file, although it contains useful information for the directory, is usually not something you want to commit to your repo. Similar problems exist on linux as well.\nSolution:\n\nAdd the .DS_Store to the .gitignore file > save > commit.\n\nCheck if file still recurs.\n\n\ngit status\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n        modified:   .DS_Store\nSometimes, despite adding this to your .gitignore file, it still somehow ends up in your git repo.\nTo remove all instances of a particular file, such as .DS_Store, on your computer, you can run the following command:\nfind . -name \".DS_Store\" -delete\nSteps: 1. Uncommit/Discard/Unstage the .DS_Store file from git panel\ngit restore .DS_Store  # If it is the only file on stage\ngit restore .  \nls -a  #find if still present\nfind . -name \".DS_Store\" -delete  #Find all \".DS_Store\" files in all folders and delete\n\ngit status\ngit add . \ngit commit -m \"delete all DS_Store files\"\ngit push\ngit pull \n\nRender > commit > push > pull.\n.DS_Store file will be automatically created by Mac in the folder, but it won’t appear on the stageing steps anymore."
  },
  {
    "objectID": "posts/2adPost.html",
    "href": "posts/2adPost.html",
    "title": "This is the title of the post",
    "section": "",
    "text": "this the second post."
  },
  {
    "objectID": "posts/RStudio_install.html",
    "href": "posts/RStudio_install.html",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "",
    "text": "References Pages to visit first:\nPainless way to install a new version of R?\nHow to migrate Rstudio files and installed packages ( by version to a new computer )\nAn efficient way to install and load R packages\nLoading packages: the difference between R’s library() and require() functions\nBioconductor\nInstall/Update R and R packages\nrestore all R packages after installing a new version of R?\nHow to Upgrade R Without Losing Your Packages\nUpgrade R Without Losing Your Packages\nUpdate and migrate R\nProfiles package\nRprofile.site file example for Startup customization\nManaging R with .Rprofile, .Renviron, Rprofile.site, Renviron.site, rsession.conf, and repos.conf\n\nTrick for doing the upgrade, from installing the software to copying all the settings/packages over?First you install the new version, then run this in the old version:"
  },
  {
    "objectID": "posts/RStudio_install.html#stack-overflow",
    "href": "posts/RStudio_install.html#stack-overflow",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "Stack Overflow",
    "text": "Stack Overflow\n\nRun in the old version of R\n\nsetwd(\"C:/Temp/\")\npackages <- installed.packages()[,\"Package\"]\nsave(packages, file=\"Rpackages\")\n\nFollowed by this in the new version:\n\n\nRun in the new version\n\nsetwd(\"C:/Temp/\")\nload(\"Rpackages\")\nfor (p in setdiff(packages, installed.packages()[,\"Package\"]))\ninstall.packages(p)\n\n\n\nFor windows\nUsing Installr\n\n#From https://stackoverflow.com/questions/1401904/painless-way-to-install-a-new-version-of-r\n\n# Run in the old version of R (or via RStudio)\nsetwd(\"C:/Temp/\") \npackages <- installed.packages()[,\"Package\"] \nsave(packages, file=\"Rpackages\") \n\n# INSTALL NEW R VERSION\nif(!require(installr)) { install.packages(\"installr\"); require(installr)} #load / install+load installr\n# See here for more on installr: https://www.r-statistics.com/2013/03/updating-r-from-r-on-windows-using-the-installr-package/  \n\n# step by step functions:\ncheck.for.updates.R() # tells you if there is a new version of R or not.\ninstall.R() # download and run the latest R installer... This install.R seems to be a windows only command. \n\n# Install library - run in the new version of R. This calls package names and installs them from repos, thus all packages should be correct to the most recent version\nsetwd(\"C:/Temp/\") \nload(\"Rpackages\") \nfor (p in setdiff(packages, installed.packages()[,\"Package\"])) \ninstall.packages(p) \n\n# Installr includes a package migration tool but this simply copies packages, it does not update them\ncopy.packages.between.libraries() # copy your packages to the newest R installation from the one version before it (if ask=T, it will ask you between which two versions to perform the copying)"
  },
  {
    "objectID": "posts/RStudio_install.html#r-bloglers",
    "href": "posts/RStudio_install.html#r-bloglers",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "R-bloglers",
    "text": "R-bloglers\n\nHow to Upgrade R Without Losing Your Packages\n\nBefore you upgrade, build a temp file with all of your old packages. Files saved as .rda files.\n\n\n\ntmp <- installed.packages()\ninstalledpkgs <- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1])\nsave(installedpkgs, file=\"installed_old.rda\")\n\n\nInstall the new version of R and let it do it’s thing.\nOnce you’ve got the new version up and running, reload the saved packages and re-install them from CRAN.\n\n\nload(\"installed_old.rda\")\ntmp <- installed.packages()\ninstalledpkgs.new <- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1])\nmissing <- setdiff(installedpkgs, installedpkgs.new)\ninstall.packages(missing)\nupdate.packages()\n\nNote: If you had any packages from BioConductor, you can update those too!\n\nsource(\"http://bioconductor.org/biocLite.R\")\nchooseBioCmirror()\nbiocLite()\nload(\"installed_old.rda\")\ntmp <- installed.packages()\ninstalledpkgs.new <- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1])\nmissing <- setdiff(installedpkgs, installedpkgs.new)\nfor (i in 1:length(missing)) biocLite(missing[i])\n\n\n\n\n\n\n\nAbout bioLite package\n\n\n\n\n\nUpdate: ‘biocLite’ is not available for new versions of R\n\ninstall.packages(\"biocLite\") # Warning in install.packages : package ‘biocLite’ is not available for this version of R\n\nBiocLite is not a thing anymore, it was used in the old versions of Bioconductor to install packages, now you can directly use BiocManager::install().\nFor example:\n\nBiocManager::install(\"limma\")\n\n\n\n\n\n\nSave files as csv or excel .xlsx\n\ncsv files\n\nwrite.csv(data_frame, 'path/to/forder/and/file_name.csv') # or set wd and just type file_name.csv\n\n\n\nexcel files\nConvert first to a data frame.\n\ninstall.packages(\"writexl\")\nlibrary(\"writexl\")\nthe_dataframe_name <- as.data.frame(data)\nwrite_xlsx(the_dataframe_name,\"path/to/folder/and/file_name.xlsx\")"
  },
  {
    "objectID": "posts/RStudio_install.html#upgrading-r-on-windows-and-mac",
    "href": "posts/RStudio_install.html#upgrading-r-on-windows-and-mac",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "Upgrading R on Windows and Mac",
    "text": "Upgrading R on Windows and Mac\nhttps://www.r-statistics.com/tag/installr/\n\nWindows\nIf you are using Windows you can easily upgrade to the latest version of R using the installr package. Simply run the following code in Rgui:\n\ninstall.packages(\"installr\") # install \nsetInternet2(TRUE) # only for R versions older than 3.3.0\ninstallr::updateR() # updating R.\n# If you wish it to go faster, run: installr::updateR(T)\n\nRunning “updateR()” will detect if there is a new R version available, and if so it will download+install it (etc.). There is also a step by step tutorial (with screenshots) on how to upgrade R on Windows, using the installr package. If you only see the option to upgrade to an older version of R, then change your mirror or try again in a few hours (it usually take around 24 hours for all CRAN mirrors to get the latest version of R).\nAlso chekck the video:\n\n\n\n\n\nMac\nIf you are using Mac you can easily upgrade to the latest version of R using Andrea Cirillo’s updateR package. The package is not on CRAN, so you’ll need to run the following code in Rgui:\n\ninstall.packages(\"devtools\")\ndevtools::install_github(\"AndreaCirilloAC/updateR\")\nupdateR(admin_password = \"PASSWORD\") # Where \"PASSWORD\" stands for your system password\n\nMBP15 The downloaded source packages are in “/private/var/folders/xc/rxn5vywj3lvd_qt78ss92cc80000gn/T/Rtmp8TJvA5/downloaded_packages” MBP20 The downloaded binary packages are in /var/folders/1v/nbx_5tgn553dq8s639lyln5c0000gn/T//Rtmp8AkWwy/downloaded_packages\nOption 1\nPainless way to install a new version of R?\nFiles are .rda\n\n#--run in the old version of R\nsetwd(\"C:/Temp/\")\npackages <- installed.packages()[,\"Package\"]\nsave(packages, file=\"Rpackages\")\n\n#--run in the new version\nsetwd(\"C:/Temp/\")\nload(\"Rpackages\")\nfor (p in setdiff(packages, installed.packages()[,\"Package\"]))\ninstall.packages(p)\n\n\n#-----\n\n# Just for completeness, you can save your packages in another directory on your computer.\ninstall.packages(\"thepackage\",lib=\"/path/to/directory/with/libraries\")\n#You can change the default .Library value using the function .libPaths too\n.libPaths(\"/path/to/directory/with/libraries\")\n\n# -----\n\n#Finally, You can also include a small code in my Rprofile.site allowing  to reinstall all packages when installing a new R version. You just have to list them up before you update to the new R version by using an .RData file containing an updated list with all packages.\n\nlibrary(utils)\n\n## Check necessary packages\nload(\"G:\\Setinfo\\R\\packagelist.RData\") # includes a vector \"pkgs\"\ninstalled <- pkgs %in% installed.packages()[, 'Package']\nif (length(pkgs[!installed]) >=1){\n  install.packages(pkgs[!installed])\n}\n# I make the packagelist.RData by specifying .Last() in my Rprofile.site. This updates the package list if I installed some :\n\n.Last <- function(){\n  pkgs <- installed.packages()[,1]\n  if (length(pkgs) > length(installed)){\n    save(pkgs,file=\"G:\\Setinfo\\R\\packagelist.RData\")\n  }\n}\n\nOption 2:\nHow to migrate Rstudio files and installed packages ( by version to a new computer )\n\nSave as .csv files.\nOr .xlsx files.\n\n\ngetwd()\nsetwd()\n# /Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/file_name.csv  \n\ninstalled <- as.data.frame(installed.packages())\nwrite.csv(installed, 'installed_previously.csv') # Path/to/folder/installed_previously.csv \ninstalledPreviously <- read.csv('installed_previously.csv') # Path/to/folder/installed_previously.csv \nbaseR <- as.data.frame(installed.packages())\ntoInstall <- setdiff(installedPreviously, baseR)\n\n# the first thing to do would be to make sure that the set of currently installed packages is up-to-date. \n\nupdate.packages(checkBuilt=TRUE, ask=FALSE)  #check spelling of arguments\n  new_pacs <- paste( setdiff( installedPreviously$Package, baseR$Package), \n                       collapse=\",\")\n  install.packages( new_pacs, dependencies=TRUE)\n\n# For excel files, requires: \ninstall.packages(\"writexl\")\nlibrary(\"writexl\")\nwrite_xlsx(the_dataframe_name,\"path/to/folder/file_name.xlsx\")"
  },
  {
    "objectID": "posts/RStudio_install.html#an-efficient-way-to-istall-and-load-r-packages",
    "href": "posts/RStudio_install.html#an-efficient-way-to-istall-and-load-r-packages",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "An efficient way to istall and load R packages",
    "text": "An efficient way to istall and load R packages\nAn efficient way to install and load R packages\n\n\nInefficient way to install and load R packages:\n\n# Installation of required packages\ninstall.packages(\"tidyverse\")\ninstall.packages(\"ggplot2\")\ninstall.packages(\"readxl\")\ninstall.packages(\"dplyr\")\n\n# Load packages\nlibrary(\"tidyverse\")\nlibrary(\"ggplot2\")\nlibrary(\"readxl\")\nlibrary(\"dplyr\")\n\n\n\nMore efficient way\n\n# Package names\npackages <- c(\"ggplot2\", \"readxl\", \"dplyr\", \"tidyr\", ...)\n\n# Install packages not yet installed\ninstalled_packages <- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages])\n}\n\n# Packages loading\ninvisible(lapply(packages, library, character.only = TRUE))\n\n\n\nMost efficient way\n{pacman} package\nAfter this article was published, a reader informed me about the {pacman} package. After having read the documentation and try it out myself, I learned that the function p_load() from {pacman} checks to see if a package is installed, if not it attempts to install the package and then loads it. It can also be applied to several packages at once, all this in a very condensed way:\n\ninstall.packages(\"pacman\")\n\npacman::p_load(ggplot2, tidyr, dplyr)\n\n## Make sure your current packages are up to date\nupdate.packages()\n## devtools is required\nlibrary(devtools)\ninstall_github(\"trinker/pacman\")\n\nFind more about this package on CRAN. Introduction to the pacman Package in R (3 Examples)\n\n{librarian} package\nLike {pacman}, the shelf() function from the {librarian} package automatically installs, updates, and loads R packages that are not yet installed in a single function. The function accepts packages from CRAN, GitHub, and Bioconductor (only if Bioconductor’s Biobase package is installed). The function also accepts multiple package entries, provided as a comma-separated list of unquoted names (so no “” around package names).\n\nBiobase: Base functions for Bioconductor DOI: 10.18129/B9.bioc.Biobase\nInstallation:\nTo install this package, start R (version “4.2”) and enter:\n\n\nif (!require(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBiocManager::install(\"Biobase\")\n\nLast but not least, the {librarian} package allows to load packages automatically at the start of every R session (thanks to the lib_startup() function) and search for new packages on CRAN by keywords or regular expressions (thanks to the browse_cran() function).\n\nHere is an example of how to install missing packages and load them with the shelf() function:\n\n# From CRAN:\ninstall.packages(\"librarian\")\n\nlibrarian::shelf(ggplot2, DesiQuintans / desiderata, pander)\n\nFor CRAN packages, provide the package name as normal without “” and for GitHub packages, provide the username and package name separated by / (i.e., UserName/RepoName as shown for the desiderata package).\nFind more about this package on CRAN."
  },
  {
    "objectID": "posts/RStudio_install.html#location-of-the-r-packages",
    "href": "posts/RStudio_install.html#location-of-the-r-packages",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "Location of the R packages",
    "text": "Location of the R packages\n\n\nterminal\n\n\n# MBP15: The downloaded source packages are in:\nopen /private/var/folders/xc/rxn5vywj3lvd_qt78ss92cc80000gn/T/Rtmp8TJvA5/downloaded_packages \n\n# MBP20: The downloaded binary packages are in:\nopen  /var/folders/1v/nbx_5tgn553dq8s639lyln5c0000gn/T//Rtmp8AkWwy/downloaded_packages"
  },
  {
    "objectID": "posts/RStudio_install.html#comparing-files",
    "href": "posts/RStudio_install.html#comparing-files",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "Comparing files",
    "text": "Comparing files\nTo compare and find whether two files differ and where, there are a few packages.\n\nlibrary(tools)\nmd5sum(\"path/to/file1\") == md5sum(\"path/to/file2\")\n\nlibrary(diffobj)\ndiffFile(\"path/to/file1\", \"path/to/file2\")   # or `diffChr` if you data is in R already\n\nlibrary(diffr)\ndiffr(\"path/to/file1\", \"path/to/file2\")\n\nses(readLines(\"path/to/file1\"), readLines(\"path/to/file1\"))\n\npackages <- installed.packages()\nstructure(packages)"
  },
  {
    "objectID": "posts/RStudio_install.html#summary",
    "href": "posts/RStudio_install.html#summary",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "Summary",
    "text": "Summary\n\nSaved installed packages\n\n# 1. Before you upgrade, update all old packages.\n\n# Update 20230329\n# Update current packages.\nupdate.packages(checkBuilt=TRUE, ask=FALSE)  #check spelling of arguments\n\n# Upgrade packages of Bioconductor\n# Install packages from a newer version of Bioconductor.\n# https://www.bioconductor.org/install/ \n\nif (!require(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\nBiocManager::install(version = \"3.16\") # Or the newest version\n\n# ------\n# 2. Before you upgrade, build a temp and save file with all of your old packages.\n\n#--run in the old version of R\n\n# MBP15: setwd(\"/Users/Marcelo-Rosales/Box Sync/Github/RStudio_shared/R_packages/\")\nRpkgs_MBP20_230329 <- installed.packages()[,\"Package\"] # save as vector values?\nsave(Rpkgs_MBP20_230329, file=\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329\") # Or Rpkgs_MBP20_230329.rda\n\nload(\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329\") # load as values (vector?)\nload(\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329.rda\") # load as values (vector?)\n\n # As .rda file\ntmp <- installed.packages() # save in environment as data (dataframe?)\nRpkgs_MBP20_230329 <- as.vector(tmp[is.na(tmp[,\"Priority\"]), 1]) # save as vector package names.\nsave(Rpkgs_MBP20_230329, file=\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329.rda\") # save as vector .rda; names... environment: installedpkgs, file: installed_old.rda, but when loaded in environment is back to installedpkgs.  \n\nload(\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/installed_old.rda\") # In environment is back to installedpkgs.  \n\n# Save as csv requires a dataframe (df)\nRpkgs_MBP20_230329 <- installed.packages()[,\"Package\"] # save only the Package (name) variable as vector values?, still can be save as csv\nwrite.csv(Rpkgs_MBP20_230329, '/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329.csv')\n\n# Or df with all the info of packages\nRpkgs_MBP20_230329df1 <- as.data.frame(installed.packages())\n\nwrite.csv(Rpkgs_MBP20_230329df1, '/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329df1.csv')\n\n# Save as excel requires a dataframe (df)\n# install.packages(\"writexl\")\nlibrary(\"writexl\")\nwrite_xlsx(Rpkgs_MBP20_230329df1,\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329df1.xlsx\")\n\n\n# ------\n\n# 3. Install the new version of R (use homebrew). See Brew cask upgrade below.\n\n# -----\n\n#　4. Once the new version up and running, reload the saved packages and re-install them from CRAN.\n\n#--run in the new version\n# MBP20: setwd(\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/\")\n\nload(\"/Users/marcelorosales/Box Sync/Github/RStudio_shared/R_packages/Rpkgs230329/Rpkgs_MBP20_230329.rda\")\nfor (p in setdiff(RSpacks230324MBP15, installed.packages()[,\"Package\"]))\n  install.packages(p)\n\n\n\nCopy/Paste Rstudio global settings and preferences if necessary.\n\n\nTerminal\n\n# Copy/Paste Rstudio global settings and preferences.. \nopen ~/.config/rstudio\n\n# Search and Copy file to same place as packages files. \nrstudio-prefs.json\n\nopen ~/.config/rstudio\n\n\nBrew cask upgrade R and Rstudio.\n\n\nTerminal\n\n# Upgrade R and rstudio\nbrew update\nbrew upgrade --cask r\n# password\n#`brew cleanup` has not been run in the last 30 days, running now...\n\n# Upgrade RStudio\nbrew upgrade --cask rstudio\n\n# Copy paste the `rstudio-prefs.json` if needed, usually it still remains after upgrade. \nrstudio-prefs.json"
  },
  {
    "objectID": "posts/RStudio_install.html#errors-and-trouble-shooting.",
    "href": "posts/RStudio_install.html#errors-and-trouble-shooting.",
    "title": "R and Rstudio Install, setup and Package Management",
    "section": "Errors and trouble shooting.",
    "text": "Errors and trouble shooting.\n\nnon-UTF8 locale error in R\nWARNING: You’re using a non-UTF8 locale\n\nWhen opening R new version… an error message is displayed.\n\n\nerror message\n\n#| code-block-bg: false\n#| code-block-border-left: \"#31BAE9\"\n#| eval: false\n\nDuring startup - Warning messages:\n1: Setting LC_CTYPE failed, using \"C\" \n2: Setting LC_COLLATE failed, using \"C\" \n3: Setting LC_TIME failed, using \"C\" \n4: Setting LC_MESSAGES failed, using \"C\" \n5: Setting LC_MONETARY failed, using \"C\" \n[R.app GUI 1.79 (8198) x86_64-apple-darwin17.0]\n\nWARNING: You're using a non-UTF8 locale, therefore only ASCII characters will work.\nPlease read R for Mac OS X FAQ (see Help) section 9 and adjust your system preferences accordingly.\n\nA solution: For english:\n- Installing R on Mac - Warning messages: Setting LC_CTYPE failed, using “C”\n- For Japanese:.\n\n\n\nTerminal\n\ndefaults write org.R-project.R force.LANG en_US.UTF-8  # 英語表示\ndefaults write org.R-project.R force.LANG ja_JP.UTF-8  # 日本語表示\n\n\n\nThere is already an App… (legacy)\nError: It seems there is already an App at ‘/Applications/Rstudio’\nis it possible to override the legacy app when install using brew\nSome times is not possible to install, re-intall or upgrade a program via brew because first installation was made manually (downloaded zip or tar files).\nThis leaves a “legacy” app. To fix it use the --force attribute while installing\nbrew install --cask rstudio --force"
  },
  {
    "objectID": "posts/Quarto_templates.html",
    "href": "posts/Quarto_templates.html",
    "title": "Jolla template",
    "section": "",
    "text": "What do I have to add here?.\n\n  \n \nFinley Malloc is the Chief Data Scientist at Wengo Analytics. When not innovating on data platforms, Finley enjoys spending time unicycling and playing with her pet iguana.\n\n\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sept 2007 - June 2011\n\n\n\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Sept 2012 - April 2018\n\n \n  \n   \n  \n    \n     twitter\n  \n  \n    \n     Github"
  },
  {
    "objectID": "posts/1stPost.html",
    "href": "posts/1stPost.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is my first post in a trial."
  },
  {
    "objectID": "Lightbox_Example.html",
    "href": "Lightbox_Example.html",
    "title": "Complete Lightbox Example",
    "section": "",
    "text": "An extension that uses the GLightbox javascript library to add lightbox styling and behavior to images in your HTML documents.\nSee quarto-ext/lightbox or the web example at Example lightbox Document at the bottom of this page."
  },
  {
    "objectID": "Lightbox_Example.html#installation",
    "href": "Lightbox_Example.html#installation",
    "title": "Complete Lightbox Example",
    "section": "Installation",
    "text": "Installation\nTo install this extension in your current directory (or into the Quarto project that you’re currently working in), use the following command:\nquarto add quarto-ext/lightbox"
  },
  {
    "objectID": "Lightbox_Example.html#usage",
    "href": "Lightbox_Example.html#usage",
    "title": "Complete Lightbox Example",
    "section": "Usage",
    "text": "Usage\nThe Lightbox extension is implemented as a filter in Quarto. Once installed, using the extension is easy.\n\nApply To Images Automatically\nThe Lightbox extension can automatically give images in your web page a lightbox treatment. You can enable this like:\n---\ntitle: Simple Lightbox Example\nfilters:\n   - lightbox\nlightbox: auto\n---\n\n![A Lovely Image](mv-1.jpg)\nYou can exclude an image from receiving this automatic treatment by giving it a nolightbox class, like so:\n![Don't lightbox me!](mv-1.jpg){.nolightbox}\n\n\nChoose Specific Images\n\nAdd lightbox to the list of filters in your _quarto.yml file or your document front matter. For example:\n\n---\ntitle: Simple Lightbox Example\nfilters:\n   - lightbox\n---\n\nAdd the class lightbox to any images that you’d like to have the lightbox treatment. For example:\n\n---\ntitle: Simple Lightbox Example\nfilters:\n   - lightbox\n---\n\n![A Lovely Image](mv-1.jpg){.lightbox}"
  },
  {
    "objectID": "Lightbox_Example.html#galleries",
    "href": "Lightbox_Example.html#galleries",
    "title": "Complete Lightbox Example",
    "section": "Galleries",
    "text": "Galleries\nIn addition to simply providing a lightbox treatment for individual images, you can also group images into a ‘gallery’. When the user activates the lightbox, they will be able to page through the images in the gallery without returning to the main document. To create galleries of images, apply a group attribute (with a name) to the images that you’d like to gather into a gallery. Images with the same group name will be placed together in a gallery when given a lightbox treatment.\nFor example, the following three images will be treated as a gallery:\n![A Lovely Image](mv-1.jpg){group=\"my-gallery\"}\n\n![Another Lovely Image](mv-2.jpg){group=\"my-gallery\"}\n\n![The Last Lovely Image](mv-3.jpg){group=\"my-gallery\"}"
  },
  {
    "objectID": "Lightbox_Example.html#global-options",
    "href": "Lightbox_Example.html#global-options",
    "title": "Complete Lightbox Example",
    "section": "Global Options",
    "text": "Global Options\nThe following options may be specified in the front matter for lightbox:\n\n\n\n\n\n\n\nOption\nDescription\n\n\n\n\nmatch\nSet this to auto if you’d like any image to be given lightbox treatment. If you omit this, only images with the class lightbox will be given the lightbox treatment.\n\n\neffect\nThe effect that should be used when opening and closing the lightbox. One of fade, zoom, none. Defaults to zoom.\n\n\ndesc-position\nThe position of the title and description when displaying a lightbox. One of top, bottom, left, right. Defaults to bottom.\n\n\nloop\nWhether galleries should ‘loop’ to first image in the gallery if the user continues past the last image of the gallery. Boolean that defaults to true.\n\n\ncss-class\nA class name to apply to the lightbox to allow css targeting. This will replace the lightbox class with your custom class name.\n\n\n\nA complete example:\n---\ntitle: Complete Lightbox Example\nfilters:\n  - lightbox\nlightbox:\n  match: auto\n  effect: fade\n  desc-position: right\n  loop: false\n  css-class: \"my-css-class\" #only if custom css file exists.\n---"
  },
  {
    "objectID": "Lightbox_Example.html#per-image-attributes",
    "href": "Lightbox_Example.html#per-image-attributes",
    "title": "Complete Lightbox Example",
    "section": "Per Image Attributes",
    "text": "Per Image Attributes\nThe following options may be specified as attributes on individual images to control the lightbox behavior:\n\n\n\n\n\n\n\nOption\nDescription\n\n\n\n\ndesc-position\nThe position of the title and description when displaying a lightbox. One of top, bottom, left, right. Defaults to bottom"
  },
  {
    "objectID": "Lightbox_Example.html#using-lightbox-with-computation-cells",
    "href": "Lightbox_Example.html#using-lightbox-with-computation-cells",
    "title": "Complete Lightbox Example",
    "section": "Using lightbox with computation cells",
    "text": "Using lightbox with computation cells\nOptions for lightbox can be passed using chunk option lightbox like the following:\n#| fig-cap: Simple demo R plot \n#| lightbox:\n#|   group: r-graph\n#|   description: This is 1 to 10 plot\nplot(1:10, rnorm(10))\nIt is possible to create several plots, and group them in a lightbox gallery. Use list in YAML for options when you have several plots, on per plot.\n::: {.cell lightbox='{\"group\":\"cars\",\"description\":[\"This is the decription for first graph\",\"This is the decription for second graph\"]}'}\n\n```{.r .cell-code}\nplot(mtcars)\n```\n\n::: {.cell-output-display}\n![Caption for first plot](Lightbox_Example_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(cars)\n```\n\n::: {.cell-output-display}\n![Caption for second plot](Lightbox_Example_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n:::\nWhen lightbox: auto is in main YAML config, you can opt-out lightbox on a plot by setting lightbox: false When lightbox: auto is not set, you can opt-in for lightbox on a specific plot by setting lightbox: true or by setting lightbox with some options."
  },
  {
    "objectID": "Lightbox_Example.html#example",
    "href": "Lightbox_Example.html#example",
    "title": "Complete Lightbox Example",
    "section": "Example",
    "text": "Example\nHere is the source code for a minimal example: example.qmd\nThis is the output of example.qmd."
  },
  {
    "objectID": "Lightbox_Example.html#chilmark",
    "href": "Lightbox_Example.html#chilmark",
    "title": "Complete Lightbox Example",
    "section": "Chilmark",
    "text": "Chilmark\nHere is a simple image with a description. This also overrides the description position and places it to the left of the image.\n\n\n\nBeach in Chilmark"
  },
  {
    "objectID": "Lightbox_Example.html#elsewhere",
    "href": "Lightbox_Example.html#elsewhere",
    "title": "Complete Lightbox Example",
    "section": "Elsewhere",
    "text": "Elsewhere\nThe below demonstrates placing more than one image in a gallery. Note the usage of the layout-ncol which arranges the images on the page side by date. Adding the group attribute to the markdown images places the images in a gallery grouped together based upon the group name provided.\n\n\n\n\n\nAquinnah\n\n\n\n\n\nOak Bluffs\n\n\n\n\n\n\n\nVineyard lighthouse"
  },
  {
    "objectID": "Lightbox_Example.html#with-computation-code-chunks",
    "href": "Lightbox_Example.html#with-computation-code-chunks",
    "title": "Complete Lightbox Example",
    "section": "With computation code chunks",
    "text": "With computation code chunks\nOptions for lightbox can be passed using chunk options.\n\n\nCode\nplot(1:10, rnorm(10))\n\n\n\n\n\nSimple demo R plot\n\n\n\n\n\n\nCode\nplot(cars)\n\n\n\n\n\nPlot about cars data\n\n\n\n\nIt is possible to create several plots, and group them in a lightbox gallery. Use list in YAML for options when you have several plots, on per plot.\n\n\nCode\nplot(mtcars)\n\n\n\n\n\nCaption for first plot\n\n\n\n\nCode\nplot(cars)\n\n\n\n\n\nCaption for second plot\n\n\n\n\nWhen lightbox: auto in main YAML config, you can opt-out lightbox on a plot by setting lightbox: false\n\n\nCode\nplot(mtcars)\n\n\n\n\n\nmtcars"
  },
  {
    "objectID": "Lightbox_Example.html#credits",
    "href": "Lightbox_Example.html#credits",
    "title": "Complete Lightbox Example",
    "section": "Credits",
    "text": "Credits\nThe images in this example were used under the Unsplash license, view originals below:\n\nChilmark Beach\nAquinnah\nGingerbread House\nEdgartown Light\nEdgartown Sailboat"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R&D Notation",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\nThe choice between using Quarto and simple R Markdown depends on the specific needs and requirements of your project. Here are a few reasons why you might consider using Quarto:\n\nEnhanced functionality: Quarto offers additional features and functionality compared to simple R Markdown. It provides support for literate programming, version control, customizable templates, and more. If you require advanced capabilities for your project, such as generating reports with complex formatting, incorporating interactive elements, or integrating code and documentation seamlessly, Quarto can be a powerful tool.\nDocument generation and collaboration: Quarto is designed for collaborative document generation, making it easier for teams to work together on projects. It provides features like automated rendering, document caching, and document diffing, which can facilitate collaboration and streamline the document development process.\nExtensibility: Quarto allows for extensibility through custom engines, allowing you to integrate additional programming languages or document formats into your project. This flexibility can be beneficial if you need to incorporate non-R code or work with specific document formats beyond what simple R Markdown offers.\nCommunity and support: Quarto has an active community of users and developers who contribute to its development and provide support. If you encounter any issues or have questions, you can rely on community resources to find assistance and guidance.\n\nHowever, it’s important to note that simple R Markdown is still a powerful and widely used tool for generating documents with R. If your project requirements are straightforward and don’t require the additional features provided by Quarto, using simple R Markdown may be sufficient and more straightforward. Ultimately, the choice between Quarto and simple R Markdown should be based on your specific project needs, preferences, and the complexity of the document you aim to generate.\n\n\nProblem 1: Notebook keeping.\nExperimental notes are distributed in many different folders and files; sometimes even in different drives and it is difficult to keep track of all information. A centralized direct access to information at any time is required.\nThe standard way to do it is by using Microsoft Office programs\nWord:\nPros:\n\nBest way to manage “tables” within text editor.\n\nInter-compatibility with word, excel, ppt and other programs.\n\nEasy to send and collaborate with others.\n\nThe Standard for all purposes.\n\nCons:\n\nFile size gets too big very fast.\n\nimages and links slows down computer.\n\nFiles are scatter all around different folders, hard to manage.\n\nNo easy way to compile information across projects and experiments.\n\nProblem 2: Software and code management.\n\nCode management is a serious problem, word cannot manage it at all.\n\n\nSoftware:\n\nbrew to install all research software.\n\nMS Office\n\nR and RStudio\n\nVS Code\n\nQuarto\n\nZotero\n\nAnaconda\n\nGit\n\nGitHub\n\nGit Kraken\n\nImageJ\n\nCalibre\n\nDigiKam\n\nDocker?\n\nSyncthing\n\nFreeCad\n\nBlender\n\n\nSmall digression: Think on the possibility of a centrilized Folder for all notes, word, r, qmd, pyton, bash, and using symlinks to move and compile projects (like a puzzle) to create new content.\n\n\nWhy I am changeing to quarto?"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Marcelo",
    "section": "",
    "text": "1 + 1\n\n[1] 2\n\n\nHere I use the quarto template trestles and place the yaml label in this files yml.\nInterestingly, if in the _quarto.yml nav code is like\n\nnavbar:\n    left:\n      - href: index.qmd\n        text: Home\n      - about.qmd # No href not text, directly the file name. \n      - href: Lightbox_Example.qmd\n        text: Lightbox\n\nThe title will change the name of nav tab, even if in the _quarto.yml is label “About”, but only while in this page. The tab will display the title of this file’s yml, but when not in this file, the nav tab label will revert to the label from the _quarto.yml file.\nI found usefull information in this pages:\n- Creating your personal website using quarto\ntype / to add content.\nonce I save the content then it will appear on page.\nNo!, it will appear when I saved and reload page."
  },
  {
    "objectID": "about.html#other-comments",
    "href": "about.html#other-comments",
    "title": "Marcelo",
    "section": "Other comments",
    "text": "Other comments"
  },
  {
    "objectID": "files/Software/RStudio/R_install.html",
    "href": "files/Software/RStudio/R_install.html",
    "title": "RStudio Install",
    "section": "",
    "text": "install"
  },
  {
    "objectID": "files/Software/RStudio/R_install.html#another-subtitle.",
    "href": "files/Software/RStudio/R_install.html#another-subtitle.",
    "title": "RStudio Install",
    "section": "Another subtitle.",
    "text": "Another subtitle."
  },
  {
    "objectID": "files/Software/RStudio/R_Packages.html",
    "href": "files/Software/RStudio/R_Packages.html",
    "title": "R Packages",
    "section": "",
    "text": "How to manage Packes."
  },
  {
    "objectID": "files/Software/RStudio/R_Packages.html#another-subtitle.",
    "href": "files/Software/RStudio/R_Packages.html#another-subtitle.",
    "title": "R Packages",
    "section": "Another subtitle.",
    "text": "Another subtitle.\nText"
  },
  {
    "objectID": "files/Software/index.html",
    "href": "files/Software/index.html",
    "title": "Software",
    "section": "",
    "text": "All related to Software\nSoftware used:\n\nRStudio\nGit\nImageJ\nAnalyze12\n\nInfo and How to’s."
  },
  {
    "objectID": "files/Software/Analyze12/index.html",
    "href": "files/Software/Analyze12/index.html",
    "title": "Analyze12",
    "section": "",
    "text": "Landing…"
  },
  {
    "objectID": "files/Software/Analyze12/index.html#another-subtitle.",
    "href": "files/Software/Analyze12/index.html#another-subtitle.",
    "title": "Analyze12",
    "section": "Another subtitle.",
    "text": "Another subtitle."
  },
  {
    "objectID": "files/Software/Analyze12/Analyze12_install.html",
    "href": "files/Software/Analyze12/Analyze12_install.html",
    "title": "Analyze12 Install",
    "section": "",
    "text": "install"
  },
  {
    "objectID": "files/Software/Analyze12/Analyze12_install.html#another-subtitle.",
    "href": "files/Software/Analyze12/Analyze12_install.html#another-subtitle.",
    "title": "Analyze12 Install",
    "section": "Another subtitle.",
    "text": "Another subtitle."
  },
  {
    "objectID": "files/Software/Analyze12/Analyze12_Packages.html",
    "href": "files/Software/Analyze12/Analyze12_Packages.html",
    "title": "Analyze12 Packages",
    "section": "",
    "text": "How to manage Packes."
  },
  {
    "objectID": "files/Software/Analyze12/Analyze12_Packages.html#another-subtitle.",
    "href": "files/Software/Analyze12/Analyze12_Packages.html#another-subtitle.",
    "title": "Analyze12 Packages",
    "section": "Another subtitle.",
    "text": "Another subtitle.\nText"
  },
  {
    "objectID": "files/Software/ImageJ/ImgJ_Packages.html",
    "href": "files/Software/ImageJ/ImgJ_Packages.html",
    "title": "ImageJ_Package",
    "section": "",
    "text": "How to manage Packes."
  },
  {
    "objectID": "files/Software/ImageJ/ImgJ_Packages.html#another-subtitle.",
    "href": "files/Software/ImageJ/ImgJ_Packages.html#another-subtitle.",
    "title": "ImageJ_Package",
    "section": "Another subtitle.",
    "text": "Another subtitle.\nText"
  },
  {
    "objectID": "files/Software/ImageJ/ImgJ_install.html",
    "href": "files/Software/ImageJ/ImgJ_install.html",
    "title": "ImageJ Install",
    "section": "",
    "text": "install"
  },
  {
    "objectID": "files/Software/ImageJ/ImgJ_install.html#another-subtitle.",
    "href": "files/Software/ImageJ/ImgJ_install.html#another-subtitle.",
    "title": "ImageJ Install",
    "section": "Another subtitle.",
    "text": "Another subtitle."
  },
  {
    "objectID": "posts/Lightbox_Example.html",
    "href": "posts/Lightbox_Example.html",
    "title": "Complete Lightbox Example",
    "section": "",
    "text": "An extension that uses the GLightbox javascript library to add lightbox styling and behavior to images in your HTML documents.\nSee quarto-ext/lightbox or the web example at Example lightbox Document at the bottom of this page."
  },
  {
    "objectID": "posts/Lightbox_Example.html#installation",
    "href": "posts/Lightbox_Example.html#installation",
    "title": "Complete Lightbox Example",
    "section": "Installation",
    "text": "Installation\nTo install this extension in your current directory (or into the Quarto project that you’re currently working in), use the following command:\nquarto add quarto-ext/lightbox"
  },
  {
    "objectID": "posts/Lightbox_Example.html#usage",
    "href": "posts/Lightbox_Example.html#usage",
    "title": "Complete Lightbox Example",
    "section": "Usage",
    "text": "Usage\nThe Lightbox extension is implemented as a filter in Quarto. Once installed, using the extension is easy.\n\nApply To Images Automatically\nThe Lightbox extension can automatically give images in your web page a lightbox treatment. You can enable this like:\n---\ntitle: Simple Lightbox Example\nfilters:\n   - lightbox\nlightbox: auto\n---\n\n![A Lovely Image](mv-1.jpg)\nYou can exclude an image from receiving this automatic treatment by giving it a nolightbox class, like so:\n![Don't lightbox me!](mv-1.jpg){.nolightbox}\n\n\nChoose Specific Images\n\nAdd lightbox to the list of filters in your _quarto.yml file or your document front matter. For example:\n\n---\ntitle: Simple Lightbox Example\nfilters:\n   - lightbox\n---\n\nAdd the class lightbox to any images that you’d like to have the lightbox treatment. For example:\n\n---\ntitle: Simple Lightbox Example\nfilters:\n   - lightbox\n---\n\n![A Lovely Image](mv-1.jpg){.lightbox}"
  },
  {
    "objectID": "posts/Lightbox_Example.html#galleries",
    "href": "posts/Lightbox_Example.html#galleries",
    "title": "Complete Lightbox Example",
    "section": "Galleries",
    "text": "Galleries\nIn addition to simply providing a lightbox treatment for individual images, you can also group images into a ‘gallery’. When the user activates the lightbox, they will be able to page through the images in the gallery without returning to the main document. To create galleries of images, apply a group attribute (with a name) to the images that you’d like to gather into a gallery. Images with the same group name will be placed together in a gallery when given a lightbox treatment.\nFor example, the following three images will be treated as a gallery:\n![A Lovely Image](mv-1.jpg){group=\"my-gallery\"}\n\n![Another Lovely Image](mv-2.jpg){group=\"my-gallery\"}\n\n![The Last Lovely Image](mv-3.jpg){group=\"my-gallery\"}"
  },
  {
    "objectID": "posts/Lightbox_Example.html#global-options",
    "href": "posts/Lightbox_Example.html#global-options",
    "title": "Complete Lightbox Example",
    "section": "Global Options",
    "text": "Global Options\nThe following options may be specified in the front matter for lightbox:\n\n\n\n\n\n\n\nOption\nDescription\n\n\n\n\nmatch\nSet this to auto if you’d like any image to be given lightbox treatment. If you omit this, only images with the class lightbox will be given the lightbox treatment.\n\n\neffect\nThe effect that should be used when opening and closing the lightbox. One of fade, zoom, none. Defaults to zoom.\n\n\ndesc-position\nThe position of the title and description when displaying a lightbox. One of top, bottom, left, right. Defaults to bottom.\n\n\nloop\nWhether galleries should ‘loop’ to first image in the gallery if the user continues past the last image of the gallery. Boolean that defaults to true.\n\n\ncss-class\nA class name to apply to the lightbox to allow css targeting. This will replace the lightbox class with your custom class name.\n\n\n\nA complete example:\n---\ntitle: Complete Lightbox Example\nfilters:\n  - lightbox\nlightbox:\n  match: auto\n  effect: fade\n  desc-position: right\n  loop: false\n  css-class: \"my-css-class\" #only if custom css file exists.\n---"
  },
  {
    "objectID": "posts/Lightbox_Example.html#per-image-attributes",
    "href": "posts/Lightbox_Example.html#per-image-attributes",
    "title": "Complete Lightbox Example",
    "section": "Per Image Attributes",
    "text": "Per Image Attributes\nThe following options may be specified as attributes on individual images to control the lightbox behavior:\n\n\n\n\n\n\n\nOption\nDescription\n\n\n\n\ndesc-position\nThe position of the title and description when displaying a lightbox. One of top, bottom, left, right. Defaults to bottom"
  },
  {
    "objectID": "posts/Lightbox_Example.html#using-lightbox-with-computation-cells",
    "href": "posts/Lightbox_Example.html#using-lightbox-with-computation-cells",
    "title": "Complete Lightbox Example",
    "section": "Using lightbox with computation cells",
    "text": "Using lightbox with computation cells\nOptions for lightbox can be passed using chunk option lightbox like the following:\n#| fig-cap: Simple demo R plot \n#| lightbox:\n#|   group: r-graph\n#|   description: This is 1 to 10 plot\nplot(1:10, rnorm(10))\nIt is possible to create several plots, and group them in a lightbox gallery. Use list in YAML for options when you have several plots, on per plot.\n#| fig-cap: \n#|   - Caption for first plot\n#|   - Caption for second plot\n#| lightbox: \n#|   group: cars\n#|   description: \n#|     - This is the decription for first graph\n#|     - This is the decription for second graph\nplot(mtcars)\nplot(cars)\nWhen lightbox: auto is in main YAML config, you can opt-out lightbox on a plot by setting lightbox: false When lightbox: auto is not set, you can opt-in for lightbox on a specific plot by setting lightbox: true or by setting lightbox with some options."
  },
  {
    "objectID": "posts/Lightbox_Example.html#example",
    "href": "posts/Lightbox_Example.html#example",
    "title": "Complete Lightbox Example",
    "section": "Example",
    "text": "Example\nHere is the source code for a minimal example: example.qmd\nThis is the output of example.qmd."
  },
  {
    "objectID": "posts/Lightbox_Example.html#chilmark",
    "href": "posts/Lightbox_Example.html#chilmark",
    "title": "Complete Lightbox Example",
    "section": "Chilmark",
    "text": "Chilmark\nHere is a simple image with a description. This also overrides the description position and places it to the left of the image.\n\n\n\nBeach in Chilmark"
  },
  {
    "objectID": "posts/Lightbox_Example.html#elsewhere",
    "href": "posts/Lightbox_Example.html#elsewhere",
    "title": "Complete Lightbox Example",
    "section": "Elsewhere",
    "text": "Elsewhere\nThe below demonstrates placing more than one image in a gallery. Note the usage of the layout-ncol which arranges the images on the page side by date. Adding the group attribute to the markdown images places the images in a gallery grouped together based upon the group name provided.\n\n\n\n\n\nAquinnah\n\n\n\n\n\nOak Bluffs\n\n\n\n\n\n\n\nVineyard lighthouse"
  },
  {
    "objectID": "posts/Lightbox_Example.html#with-computation-code-chunks",
    "href": "posts/Lightbox_Example.html#with-computation-code-chunks",
    "title": "Complete Lightbox Example",
    "section": "With computation code chunks",
    "text": "With computation code chunks\nOptions for lightbox can be passed using chunk options.\n\n\nCode\nplot(1:10, rnorm(10))\n\n\n\n\n\nSimple demo R plot\n\n\n\n\n\n\nCode\nplot(cars)\n\n\n\n\n\nPlot about cars data\n\n\n\n\nIt is possible to create several plots, and group them in a lightbox gallery. Use list in YAML for options when you have several plots, on per plot.\n\n\nCode\nplot(mtcars)\n\n\n\n\n\nCaption for first plot\n\n\n\n\nCode\nplot(cars)\n\n\n\n\n\nCaption for second plot\n\n\n\n\nWhen lightbox: auto in main YAML config, you can opt-out lightbox on a plot by setting lightbox: false\n\n\nCode\nplot(mtcars)\n\n\n\n\n\nmtcars"
  },
  {
    "objectID": "posts/Lightbox_Example.html#credits",
    "href": "posts/Lightbox_Example.html#credits",
    "title": "Complete Lightbox Example",
    "section": "Credits",
    "text": "Credits\nThe images in this example were used under the Unsplash license, view originals below:\n\nChilmark Beach\nAquinnah\nGingerbread House\nEdgartown Light\nEdgartown Sailboat"
  },
  {
    "objectID": "posts/Lightbox_Example.html#lightbox",
    "href": "posts/Lightbox_Example.html#lightbox",
    "title": "Complete Lightbox Example",
    "section": "Lightbox",
    "text": "Lightbox\nAn extension that uses the GLightbox javascript library to add lightbox styling and behavior to images in your HTML documents.\nSee quarto-ext/lightbox or the web example at Example lightbox Document at the bottom of this page."
  },
  {
    "objectID": "files/Notes_2do/index.html#to-do",
    "href": "files/Notes_2do/index.html#to-do",
    "title": "Notes&2do",
    "section": "To do:",
    "text": "To do:\n\nCode Notation\nDifferent ways for code notation in code block. describe how to correctly use it in qmd and vscode\n---\nformat: \n  html: \n    code-fold: true\n    code-copy: true\n    code-overflow: wrap\n\n---\n---\ntitle: Simple Lightbox Example\nfilters:\n   - lightbox\nlightbox: auto\n---\n\n![A Lovely Image](mv-1.jpg)\n![A Lovely Image](mv-1.jpg){group=\"my-gallery\"}\n\n![Another Lovely Image](mv-2.jpg){group=\"my-gallery\"}\n\n![The Last Lovely Image](mv-3.jpg){group=\"my-gallery\"}\n``` markdown\n```{.r}\n#| fig-cap: \n#|   - Caption for first plot\n#|   - Caption for second plot\n#| lightbox: \n#|   group: cars\n#|   description: \n#|     - This is the decription for first graph\n#|     - This is the decription for second graph\nplot(mtcars)\nplot(cars)\n`\n\n\nSymlinks in Git\nWant to make simlinks to the blog files so I do not repeat files (copy/paste, etc)\n~/.dotfiles in 100 Seconds\n\n\nGit Bare Repository - A Better Way To Manage Dotfiles\n\nGit-Bash Windows and Symlinks [OLD]"
  },
  {
    "objectID": "files/Notes_2do/index.html#code-notation",
    "href": "files/Notes_2do/index.html#code-notation",
    "title": "Notes&2do",
    "section": "Code Notation",
    "text": "Code Notation\n---\nformat: \n  html: \n    code-fold: true\n    code-copy: true\n    code-overflow: wrap\n\n---\n---\ntitle: Simple Lightbox Example\nfilters:\n   - lightbox\nlightbox: auto\n---\n\n![A Lovely Image](mv-1.jpg)\n![A Lovely Image](mv-1.jpg){group=\"my-gallery\"}\n\n![Another Lovely Image](mv-2.jpg){group=\"my-gallery\"}\n\n![The Last Lovely Image](mv-3.jpg){group=\"my-gallery\"}\n::: {.cell lightbox='{\"group\":\"cars\",\"description\":[\"This is the decription for first graph\",\"This is the decription for second graph\"]}'}\n\n```{.r .cell-code}\nplot(mtcars)\n```\n\n::: {.cell-output-display}\n![Caption for first plot](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(cars)\n```\n\n::: {.cell-output-display}\n![Caption for second plot](index_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n:::"
  },
  {
    "objectID": "files/Notes_2do/index.html#temp",
    "href": "files/Notes_2do/index.html#temp",
    "title": "Notes&2do",
    "section": "Temp:",
    "text": "Temp:"
  },
  {
    "objectID": "index.html#intent",
    "href": "index.html#intent",
    "title": "R&D Notation",
    "section": "Intent",
    "text": "Intent\nProblem 1: Notebook keeping.\nExperimental notes are distributed in many different folders and files; sometimes even in different drives and it is difficult to keep track of all information. A centralized direct access to information at any time is required.\nThe standard way to do it is by using Microsoft Office programs\nWord:\nPros:\n\nBest way to manage “tables” within text editor.\n\nInter-compatibility with word, excel, ppt and other programs.\n\nEasy to send and collaborate with others.\n\nThe Standard for all purposes.\n\nCons:\n\nFile size gets too big very fast.\n\nimages and links slows down computer.\n\nFiles are scatter all around different folders, hard to manage.\n\nNo easy way to compile information across projects and experiments.\n\nProblem 2: Software and code management.\n\nCode management is a serious problem, word cannot manage it at all.\n\n\nSoftware:\n\nbrew to install all research software.\n\nMS Office\n\nR and RStudio\n\nVS Code\n\nQuarto\n\nZotero\n\nAnaconda\n\nGit\n\nGitHub\n\nGit Kraken\n\nImageJ\n\nCalibre\n\nDigiKam\n\nDocker?\n\nSyncthing\n\nFreeCad\n\nBlender\n\n\nSmall digression: Think on the possibility of a centrilized Folder for all notes, word, r, qmd, pyton, bash, and using symlinks to move and compile projects (like a puzzle) to create new content.\n\n\nWhy I am changeing to quarto?"
  },
  {
    "objectID": "index.html#quarto",
    "href": "index.html#quarto",
    "title": "quarto_website",
    "section": "Quarto",
    "text": "Quarto\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\nThe choice between using Quarto and simple R Markdown depends on the specific needs and requirements of your project. Here are a few reasons why you might consider using Quarto:\n\nEnhanced functionality: Quarto offers additional features and functionality compared to simple R Markdown. It provides support for literate programming, version control, customizable templates, and more. If you require advanced capabilities for your project, such as generating reports with complex formatting, incorporating interactive elements, or integrating code and documentation seamlessly, Quarto can be a powerful tool.\nDocument generation and collaboration: Quarto is designed for collaborative document generation, making it easier for teams to work together on projects. It provides features like automated rendering, document caching, and document diffing, which can facilitate collaboration and streamline the document development process.\nExtensibility: Quarto allows for extensibility through custom engines, allowing you to integrate additional programming languages or document formats into your project. This flexibility can be beneficial if you need to incorporate non-R code or work with specific document formats beyond what simple R Markdown offers.\nCommunity and support: Quarto has an active community of users and developers who contribute to its development and provide support. If you encounter any issues or have questions, you can rely on community resources to find assistance and guidance.\n\nHowever, it’s important to note that simple R Markdown is still a powerful and widely used tool for generating documents with R. If your project requirements are straightforward and don’t require the additional features provided by Quarto, using simple R Markdown may be sufficient and more straightforward. Ultimately, the choice between Quarto and simple R Markdown should be based on your specific project needs, preferences, and the complexity of the document you aim to generate."
  },
  {
    "objectID": "index.html#solutions",
    "href": "index.html#solutions",
    "title": "R&D Notation",
    "section": "Solutions:",
    "text": "Solutions:\nkey Shortcuts: Files: Excel best tricks.xlsx; Markdown02.docx\n\nNotekeeping:\n1. Save all notes in one place.\n/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes, then symlik to other projects.\n\nDoes symlinks work with github, syncthing, synology, host (hostinger), etc?\nWhich type of symlik is best? soft or hard?\n\n2. Files and folders:\n/Users/marcelorosales/Box Sync/Github\n\nDotFiles: What are dotfiles? To create executable file to install all programs ex. brew.sh and settings at once with one executable command.\n\nconda shells\niTerm: Fonts\n\nGitBooks: What are Gitbooks?\nmkdocs\nNiigataU-Carving: html\nQuarto (VS and R)\nRstudio: Shared files among devices\nVisual Studio Code\n\n/Users/marcelorosales/Box Sync/Documents/R\n\nCourse01-R Programming A-Z\n\nCourse02- R Programing - Advanced Analitics\n\nR Bookdown\n\nR Example scripts\n\nR exmple df\n\nR external sources\n\nR package files\n\nR Preferences and packages\n\nRmarkdown\n\nTests forlder\n\nWorking Directory\n\nMBP20 files: /Users/marcelorosales/Documents/GitHub:\n\nBioinformatics_RNA-seq (Gitbook)**\n\nCarving (HTML web page made entirely manually)\n\nDotFiles (Empty) x\n\nExample (Hugo Site trial01, empty) x\n\nImg (RNA analysis image samples)\n\nMkdocs_books (Trial site with 1 symlink file from /Box Sync/Github/mkdocs/bs4_LabNotes/ _book/08-Preparation.md) *\n\nmkdocs_Tests (Trial of submenus in mkdocs) x\n\nMkDocsTest1 (Trial of mkdocs multilingual feature, VS_code,md, MkDocs,md) *\n\nQuarto:\n\nquarto-tip-a-day (webpage downloaded from quarto site)\n\nquarto-trials:\n\nquarto_blog\n\nquarto_book\n\nquarto_project\n\nquarto_website (Quarto page test01, https://marcelorosales.github.io/Quarto_website_test01/) +++\n\n\nquarto-web (Downloaded entire quarto web site)\n\nResearch_Experiments:\n\nPhotoConvertibleCells (Example only, no content)\n\n\nResearch_Notebook: (Experiment Notebooks, All reseach Notes, https://marcelorosales.github.io/Research_Notebook/ )\n\nRetrolog (Hugo lithium) x\n\nTemptests (RNA Seq for STAT3 example of RNA sequencing) **\n\nVS Code (VS code cheat sheets) *\n\nZdocTest1 (Zdoc-blogdown test) x\n\nzipfiles\n\nHugotree.docx\n\nResearch_Notebook.Rmd (Research Notes, Research Notebook) **\n\nMBP15 files:\nSynology files:\nGithub pages:\nMarceloRosales/MkDocsTest1\nMarceloRosales/Research_Notebook\nMarceloRosales/mkd_LabNotes\nMarceloRosales/Bioinformatics_RNA-seq\nMarceloRosales/NiigataU-SV\nMarceloRosales/Carving\nMarceloRosales/MarceloRosales ¿???\nMarceloRosales/PCC-Experiment\nMarceloRosales/RBD02\nMarceloRosales/NiigataU-Carving\nMarceloRosales/RBlogdowntest01\nMarceloRosales/WebDev-01\nMarceloRosales/BootstrapCarrousel\nMarceloRosales/staticrypt\nMkDocsTest1 https://marcelorosales.github.io/MkDocsTest1/MkDocs/\nResearch_Notebook https://marcelorosales.github.io/Research_Notebook/\nmkd_LabNotes https://marcelorosales.github.io/mkd_LabNotes/\nBioinformatics_RNA-seq https://marcelorosales.github.io/Bioinformatics_RNA-seq/\nNiigataU-SV https://marcelorosales.github.io/NiigataU-SV/\nCarving https://marcelorosales.github.io/Carving/\nMarceloRosales ¿?? PCC-Experiment https://marcelorosales.github.io/PCC-Experiment/\nRBD02 https://marcelorosales.github.io/RBD02/ A minimal book ex.\nNiigataU-Carving https://marcelorosales.github.io/NiigataU-Carving/\nRBlogdowntest01 (not live) WebDev-01 https://marcelorosales.github.io/WebDev-01/\nBootstrapCarrousel https://marcelorosales.github.io/BootstrapCarrousel/\nStaticrypt (exec only)\n\n\n\nMarceloRosales/MkDocsTest1\n>\nMkDocsTest1 https://marcelorosales.github.io/MkDocsTest1/MkDocs/\n\n\nMarceloRosales/Research_Notebook\n>\nResearch_Notebook https://marcelorosales.github.io/Research_Notebook/\n\n\nMarceloRosales/mkd_LabNotes\n>\nmkd_LabNotes https://marcelorosales.github.io/mkd_LabNotes/\n\n\nMarceloRosales/Bioinformatics_RNA-seq\n>\nBioinformatics_RNA-seq https://marcelorosales.github.io/Bioinformatics_RNA-seq/\n\n\nMarceloRosales/NiigataU-SV\n>\nNiigataU-SV https://marcelorosales.github.io/NiigataU-SV/\n\n\nMarceloRosales/Carving\n>\nCarving https://marcelorosales.github.io/Carving/\n\n\nMarceloRosales/MarceloRosales ¿???\n>\n<MarceloRosales ¿??>\n\n\nMarceloRosales/PCC-Experiment\n>\nPCC-Experiment https://marcelorosales.github.io/PCC-Experiment/\n\n\nMarceloRosales/RBD02\n>\nRBD02 <https://marcelorosales.github.io/RBD02/ A minimal book ex.>\n\n\nMarceloRosales/NiigataU-Carving\n>\nNiigataU-Carving https://marcelorosales.github.io/NiigataU-Carving/\n\n\nMarceloRosales/RBlogdowntest01\n>\n<RBlogdowntest01 (not live)>\n\n\nMarceloRosales/WebDev-01\n>\nWebDev-01 https://marcelorosales.github.io/WebDev-01/\n\n\nMarceloRosales/BootstrapCarrousel\n>\nBootstrapCarrousel https://marcelorosales.github.io/BootstrapCarrousel/\n\n\nMarceloRosales/staticrypt\n>\n<Staticrypt (exec only)>\n\n\n\n\nHow to use:\nWhere do I write the text first? word, Rstudio .qmd, VS code?\n\nI am thinking I will I will use the 3 of them (word, RStudio (RS).qmd, VS code (VSC)) at the same time.\n\nSeems like VC code is the middle ground between word and Rstudio. 20230502 test: Use VS code as the main text/code editor, then copy paste to word.\n\nCreate a qmd file/project in RS, git init, save project.\n\nOpen RS qmd file in VS code and use as main text editor.\n\nChange/add content, save in VS code > will auto update in RS (no need to do anything except to reload/open file).\n\nCheck if render is correct.\n\nCopy/paste to word and save in word. Currently it is not possible to open a word file directly in VSC.\n\n\nUse word and .qmd (in source mode only) at the same time and indistinctively…\n\nDO NOT SWITCH TO VISUAL MODE. Changing to visual mode will modify text in the source code format. Space between lines is doble and there is no way to change it in the ui of rstudio, only in the render output. It makes it difficult to read and orginize.\n\nThus, keep all records in the word file at all times. Make de word file the default saving format.\nOpen Untitled .qmd files to try and test code chunks or formats.\nOpen an Image .qmd file in visual mode to store all image code and links for a fast gallery, then easy to copy/paste images to other places.\n\nIf large code needs to be quickly formated for word (coz copy/paste from rstudio to word directly does not copy code highlight formats), use VS code, copy/paste Rstudio > VS Code > word. Then adjust line spacing.\n\n\n\nOpen Word file\n(See Markdown02.docx > Word and Rstudio for detail info on the code)\nfiles:\nMac:\n\nMarkdown02 <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Markdown02.docx\"  \n\nResearch_map <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Research_map and guide.docx\"  \n\nMarkdown01 <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Markdown01.docx\"\n\nNotes <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/\"\n\nexcel <- \"/Users/marcelorosales/Documents/GitHub/Quarto/quarto-trials/quarto_website/test.xlsx\"\n\n#open in mac OS\nsystem(paste(\"open\", shQuote(Markdown02)))\nsystem(paste(\"open\", shQuote(Research_map)))\nsystem(paste(\"open\", shQuote(Notes)))\nsystem(paste(\"open\", shQuote(excel)))\n\nexcel file test\nWindows:\n\nfile_path <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Markdown01.docx\"\nshell(paste(\"start\", shQuote(file_path)))\n# or \nsystem(paste(\"start\", shQuote(file_path)))"
  }
]